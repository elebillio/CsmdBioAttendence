Option Explicit On
'Option Strict On

Imports System.Data.OleDb
Imports System.IO
Imports CsmdBioDatabase
Imports DevExpress.Data
Imports DevExpress.LookAndFeel
Imports DevExpress.Utils
Imports DevExpress.XtraBars
Imports DevExpress.XtraEditors
Imports DevExpress.XtraEditors.Controls
Imports DevExpress.XtraGrid
Imports DevExpress.XtraGrid.Views.Base
Imports DevExpress.XtraGrid.Views.Grid
Imports DevExpress.XtraGrid.Views.Grid.ViewInfo
Imports DevExpress.XtraReports.UI
Imports DevExpress.XtraVerticalGrid.Events
Imports System.Data.Entity
Imports System.Data.Entity.Core.Objects
Imports System.Data.SqlClient
'Imports CsmdBioReports
Public Class frmEmployeesCalculations
    'Sub New()

    '    InitializeComponent()
    '    ' This line of code is generated by Data Source Configuration Wizard
    '    ' Instantiate a new DBContext
    '    Dim dbContext As CsmdBioDatabase.CsmdBioAttendenceEntities = New CsmdBioDatabase.CsmdBioAttendenceEntities()
    '    ' Call the Load method to get the data for the given DbSet from the database.
    '    dbContext.Emp_Att_Set.Load()
    '    ' This line of code is generated by Data Source Configuration Wizard
    '    BindingSource1.DataSource = dbContext.Emp_Att_Set.Local.ToBindingList()
    'End Sub

    Dim Load_Employees_RepositoryItemLookUpEdit As New Employees_RepositoryItemLookUpEdit
    Dim Load_Attendence_Status_RepositoryItemLookUpEdit As New Attendence_Status_RepositoryItemLookUpEdit
    Private Sub frmEmployeesCalculations_FormClosing(sender As Object, e As FormClosingEventArgs) Handles Me.FormClosing
        SaveSetting(Application.ProductName, "CsmdSettingZoom1", "CsmdZoom1", CStr(BarEditItem1.EditValue))
        'SaveSetting(Application.ProductName, "CsmdSettingZoom2", "CsmdZoom2", CStr(BarEditItem2.EditValue))
        'SaveSetting(Application.ProductName, "CsmdSettingZoom3", "CsmdZoom3", CStr(Lay1.Width))
        'SaveSetting(Application.ProductName, "CsmdSettingZoom4", "CsmdZoom4", CStr(Lay2.Width))

    End Sub
    Public Sub Folder()
        Dim objFSO As Object
        Dim objFolder As Object
        Dim objFile As Object
        'NavReports.Groups.Clear()
        'NavReports.Items.Clear()
        objFSO = CreateObject("Scripting.FileSystemObject")
        'BarSubItem17.ItemLinks.Clear()
        ' ''objFolder = objFSO.GetFolder(".\Reports\Students\")
        ' ''For Each objFile In objFolder.subfolders
        ' ''    If objFile.name.ToString = "Certificates" Then
        ' ''        MsgBox(objFile.name)
        ' ''        LoadReportFromFile("Certificates", ".\Reports\Students\" & objFile.Name & "", "")
        ' ''        Exit For
        ' ''    End If
        ' ''Next objFile

        objFolder = objFSO.GetFolder(".\Reports\")
        For Each objFile In objFolder.subfolders
            If objFile.name.ToString = "Employees" Then
                'MsgBox(objFile.name)
                LoadReportFromFile("Employees", "", ".\Reports\" & objFile.Name & "")
                Exit For
            End If
        Next objFile



    End Sub
    Public Sub LoadReportFromFile(ReportName As String, CerPath As String, RepPath As String)
        Select Case ReportName
            Case "Employees"
                Dim di As New DirectoryInfo(My.Application.Info.DirectoryPath + RepPath)
                Dim diar1 As System.IO.FileInfo() = di.GetFiles()
                Dim dra As System.IO.FileInfo
                For Each dra In diar1
                    If dra.Extension = ".repx" Then
                        Dim Btn_LayoutView As BarButtonItem = New BarButtonItem
                        Btn_LayoutView.Caption = System.IO.Path.GetFileNameWithoutExtension(dra.Name)
                        Btn_LayoutView.Visibility = BarItemVisibility.Always
                        AddHandler Btn_LayoutView.ItemClick, AddressOf Btn_Report_ItemClick
                        BarSubItem1.ItemLinks.Add(Btn_LayoutView)
                    End If
                Next
        End Select
    End Sub
    Private Sub Btn_Report_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs)
        Dim GetPayID As Integer = CInt(VGridControl1.GetCellValue(rowEmp_Att_Payment_ID, 0))
        OpenReportByidMultiTwoParameter("Employees\" & e.Item.Caption, intList, GetPayID)
    End Sub
    Private Sub frmAttReport_Load(sender As Object, e As EventArgs) Handles Me.Load
        'Me.Text = Environment.UserName

        'Dim u1 As String = GetSetting(Application.ProductName, "CsmdSettingZoom1", "CsmdZoom1", "").ToString
        'Dim u2 As String = GetSetting(Application.ProductName, "CsmdSettingZoom2", "CsmdZoom2", "").ToString
        Dim u1 As Integer = 9
        'Dim u4 As Integer = 9

        Try
            u1 = CInt(GetSetting(Application.ProductName, "CsmdSettingZoom1", "CsmdZoom1", "").ToString)
            'u4 = CInt(GetSetting(Application.ProductName, "CsmdSettingZoom4", "CsmdZoom4", "").ToString)

        Catch ex As Exception
            u1 = 9
            'u4 = 9

        End Try
        FF1.EditValue = CsmdDateTime.FirstDayOfMonth(Today)
        FF2.EditValue = CsmdDateTime.LastDayOfMonth(Today)
        'BarEditItem1.EditValue = u1
        'BarEditItem2.EditValue = If(u1 = "", "9", u2)

        'Lay1.Width = If(u3 = 0, 9, u3)
        'Lay2.Width = If(u4 = 0, 9, u4)
        'LayoutControl1.Refresh()
        Folder()

        'Load_Att_Setting()
        LoadEmp(Today)
        Load_Employees_RepositoryItemLookUpEdit.ColumnsAndData(RepositoryItemLookUpEdit1)
        Load_Attendence_Status_RepositoryItemLookUpEdit.ColumnsAndData(RepositoryItemLookUpEdit2)
        Issue_Date.EditValue = Today

        GridView1.IndicatorWidth = 35
        GridView2.IndicatorWidth = 35
        'AdvBandedGridView1.IndicatorWidth = 35
    End Sub

    Private Sub LoadEmp(Datx As Date)
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim dt = (From a In db.Employees Where a.Emp_Status = True Order By a.Emp_Name
                      Group Join b In db.Emp_Attendence_Device.Where(Function(o) CBool(o.Emp_Attendence_Device_Status = True And o.Emp_Attendence_Device_Date.Value.Month = Datx.Month And o.Emp_Attendence_Device_Date.Value.Year = Datx.Year)) On a.Emp_ID Equals b.Emp_Bio_Device_Users.Emp_ID Into x = Group, mm = Count
                      Group Join c In db.Emp_Att_Payment.Where(Function(o) o.Emp_Att_Payment_Issue_Date.Value.Month = Datx.Month And o.Emp_Att_Payment_Issue_Date.Value.Year = Datx.Year) On a.Emp_ID Equals c.Emp_ID Into z = Group
                      From c In z.DefaultIfEmpty()
                      Select New With {.ID = a.Emp_ID, a.Emp_Name, .On = a.Emp_DutyOn, .Off = a.Emp_Duty_Off,
                          .A1 = mm,
                          .A2 = c.Emp_Att_Payment_Total,
                          .A3 = c.Emp_Att_Payment_Paid,
                          .A4 = c.Emp_Att_Payment_Balance}).ToList
            If dt.Count > 0 Then
                GridControl2.DataSource = dt
                GridControl1.DataSource = Nothing
                VGridControl1.DataSource = Nothing
                ShowSelectionAtt00000000()
            Else
                GridControl2.DataSource = Nothing
            End If
        End Using
    End Sub
    Public EmpIDs As Integer


    Dim db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
    Dim objdt As New DataTable


#Region "Import From Excel files"
    'Private Sub LoadImportDate()
    '            Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities


    '        Dim ExcelCon As New OleDbConnection
    '        Dim ExcelAdp As OleDbDataAdapter
    '        Dim ExcelComm As OleDbCommand

    '        Dim StrSql As String
    '        Dim successfulImport As Boolean = False
    '        Dim fileAlreadyAdded As Integer = 0
    '        Dim dts As DataSet
    '        objdt.Rows.Clear()


    '        Dim dXA As String = ""
    '        Dim dXB As String = ""
    '        Dim ckA As String = ""
    '        Dim ckB As String = ""
    '        Dim lnA As String = ""
    '        Dim lnB As String = ""
    '        Dim prA As String = ""
    '        Dim prB As String = ""
    '        Dim shA As String = ""
    '        Dim shB As String = ""
    '        Dim FromDat As DateTime = CDate(Issue_Date.EditValue)
    '        Dim firstDay As Date = FirstDayOfMonth(FromDat)
    '        Dim lastDay As Date = DateTime.Parse(CStr(firstDay)).AddDays(Date.DaysInMonth(FromDat.Year, FromDat.Month))
    '        'Dim dtx = (From a In db.Employees Where a.Emp_Status = True Select a.Emp_ID, a.Emp_Name).ToList
    '        If intList IsNot Nothing Then
    '            Dim k As Integer = 1
    '            ProgressBarControl1.Properties.Maximum = intList.Count - 1
    '            'ProgressBarControl1.Properties.Maximum = dtx.Count - 1
    '            ProgressBarControl1.Properties.Minimum = 0
    '            ProgressBarControl1.Properties.Appearance.BackColor = Color.Yellow
    '            ProgressBarControl1.Position = 0
    '            ProgressBarControl1.Update()
    '            For pio As Integer = 0 To intList.Count - 1
    '                Dim pop As Integer = intList(pio)
    '                Dim Empn As String = intLists(pio).ToString
    '                ProgressBarControl1.Position = k
    '                ProgressBarControl1.Update()
    '                k += 1

    '                Dim k2 As Integer = 1
    '                ProgressBarControl2.Properties.Maximum = CInt((lastDay.ToOADate - firstDay.ToOADate))
    '                'ProgressBarControl1.Properties.Maximum = dtx.Count - 1
    '                ProgressBarControl2.Properties.Minimum = 0
    '                ProgressBarControl2.Properties.Appearance.BackColor = Color.Yellow
    '                ProgressBarControl2.Position = 0
    '                ProgressBarControl2.Update()
    '                For loopDate As Double = firstDay.ToOADate To lastDay.ToOADate
    '                    ProgressBarControl2.Position = k2
    '                    ProgressBarControl2.Update()
    '                    k2 += 1
    '                    Dim thisDate As Date = DateTime.FromOADate(loopDate)
    '                    Dim Toti As Double = 0
    '                    ExcelCon.ConnectionString = CsmdCon.ConOleDB ' "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" & fileP & ";Extended Properties=""Excel 8.0;HDR=Yes;IMEX=1"";"
    '                    ExcelCon.Open()

    '                    StrSql = "SELECT 
    '                        USERINFO.USERID, 
    '                        USERINFO.SSN,
    '                        USERINFO.Name, 
    '                        CHECKINOUT.CHECKTIME, USERINFO.Badgenumber FROM CHECKINOUT INNER JOIN USERINFO ON
    '                        CHECKINOUT.USERID = USERINFO.USERID where DateValue(CHECKINOUT.CHECKTIME) = '" & thisDate.Date & "';"
    '                    ExcelComm = New OleDbCommand(StrSql, ExcelCon)
    '                    ExcelAdp = New OleDbDataAdapter(ExcelComm)
    '                    dts = New DataSet
    '                    ExcelAdp.Fill(dts)
    '                    ExcelCon.Close()

    '                    Dim k3 As Integer = 1
    '                    'ProgressBarControl2.Properties.Maximum = CInt((lastDay.ToOADate - firstDay.ToOADate))
    '                    ProgressBarControl3.Properties.Maximum = dts.Tables(0).Rows.Count - 1
    '                    ProgressBarControl3.Properties.Minimum = 0
    '                    ProgressBarControl3.Properties.Appearance.BackColor = Color.Yellow
    '                    ProgressBarControl3.Position = 0
    '                    ProgressBarControl3.Update()

    '                    For Each row0 As DataRow In dts.Tables(0).Rows
    '                        ProgressBarControl3.Position = k3
    '                        ProgressBarControl3.Update()
    '                        k3 += 1
    '                        Dim datet As DateTime = CDate(row0.Item(3).ToString) ' CStr(row0.Item(3))
    '                        If Empn = row0.Item(2).ToString Then
    '                            If thisDate.Date = datet.Date Then

    '                                Dim ToCi As Double = 0
    '                                Dim finNa As String = CStr(row0.Item(1))
    '                                Dim dd As Date = CDate(datet.ToString("yyyy/MM/dd HH:mm:ss"))
    '                                Dim aa As Date = datet.Date '("dd-MMM-yyyy").tostring
    '                                Dim bb As DateTime = CDate(datet.TimeOfDay.ToString)
    '                                Dim timg As String = bb.ToString("HH:mm").ToString
    '                                Dim iii As Integer = CInt(row0.Item(4))
    '                                Dim vvv = (From a In db.Emp_Bio_Device_Users Where a.Emp_Bio_Device_Users_UserID = iii Select a).FirstOrDefault
    '                                'Me.Text = "Employee: " & Empn & " Date: " & aa.Date & " Finger: " & finNa & " Time: " & timg
    '                                If vvv IsNot Nothing Then
    '                                    Dim dth = (From a In db.Emp_Attendence_Device Where a.Emp_Bio_Device_Users_UserID = iii And a.Emp_Attendence_Device_DateTime = dd Select a).FirstOrDefault
    '                                    If dth IsNot Nothing Then
    '                                        With dth
    '                                            '..Emp_ID = pop
    '                                            ''''.Emp_Bio_Device_Users_UserID = CType(row0.Item(0), Integer?)
    '                                            '''''.Emp_Bio_Device_Users.Attendence_Status_ID = vvv.Attendence_Status_ID
    '                                            ''''.Emp_Attendence_Device_DateTime = CType(datet, DateTime).ToString("yyyy/MM/dd HH:mm:ss")
    '                                            ''''.Emp_Attendence_Device_Date = CType(aa.ToString("dd-MMM-yyyy").ToString, Date?)
    '                                            ''''.Emp_Attendence_Device_Time = bb.ToString("HH:mm").ToString
    '                                            ''''.Emp_Attendence_Device_Status = True
    '                                            'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    '                                            'If CStr(row0.Item(1)) = "RP-Private A" Then
    '                                            '    dXA = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            'End If
    '                                            'If CStr(row0.Item(1)) = "LP-Private B" Then
    '                                            '    dXB = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            '    Dim fff As DateTime = CDate(If(dXA = "", "00:00", dXA))
    '                                            '    Dim ggg As DateTime = CDate(If(dXB = "", "00:00", dXB))
    '                                            '    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
    '                                            '    Toti += duration
    '                                            '    .Emp_Attendence_Device_Cal1 = CStr(duration)
    '                                            'End If
    '                                            ''xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    '                                            'If CStr(row0.Item(1)) = "RT-Check In" Then
    '                                            '    ckA = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            'End If
    '                                            'If CStr(row0.Item(1)) = "LT-Check Out" Then
    '                                            '    ckB = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            '    Dim fff As DateTime = CDate(If(ckA = "", "00:00", ckA))
    '                                            '    Dim ggg As DateTime = CDate(If(ckB = "", "00:00", ckB))
    '                                            '    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
    '                                            '    ToCi = duration
    '                                            '    .Emp_Attendence_Device_Cal2 = CStr(ToCi)

    '                                            'End If
    '                                            ''xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    '                                            'If CStr(row0.Item(1)) = "RR-Lunch A" Then
    '                                            '    lnA = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            'End If
    '                                            'If CStr(row0.Item(1)) = "LR-Lunch B" Then
    '                                            '    lnB = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            '    Dim fff As DateTime = CDate(If(lnA = "", "00:00", lnA))
    '                                            '    Dim ggg As DateTime = CDate(If(lnB = "", "00:00", lnB))
    '                                            '    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
    '                                            '    Toti += duration
    '                                            '    .Emp_Attendence_Device_Cal1 = CType(duration, String)
    '                                            'End If
    '                                            ''xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    '                                            'If CStr(row0.Item(1)) = "RI-Prayer A" Then
    '                                            '    prA = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            'End If
    '                                            'If CStr(row0.Item(1)) = "LI-Prayer B" Then
    '                                            '    prB = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            '    Dim fff As DateTime = CDate(If(prA = "", "00:00", prA))
    '                                            '    Dim ggg As DateTime = CDate(If(prB = "", "00:00", prB))
    '                                            '    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
    '                                            '    Toti += duration
    '                                            '    .Emp_Attendence_Device_Cal1 = CType(duration, String)
    '                                            'End If
    '                                            ''xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    '                                            'If CStr(row0.Item(1)) = "RM-Short Leave A" Then
    '                                            '    shA = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            'End If
    '                                            'If CStr(row0.Item(1)) = "LM-Short Leave B" Then
    '                                            '    shB = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            '    Dim fff As DateTime = CDate(If(shA = "", "00:00", shA))
    '                                            '    Dim ggg As DateTime = CDate(If(shB = "", "00:00", shB))
    '                                            '    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
    '                                            '    Toti += duration
    '                                            '    .Emp_Attendence_Device_Cal1 = CType(duration, String)
    '                                            'End If
    '                                        End With
    '                                        db.SaveChanges()
    '                                    Else
    '                                        'Try
    '                                        Dim dtNew = New Emp_Attendence_Device
    '                                        With dtNew
    '                                            '.Emp_ID = pop
    '                                            .Emp_Bio_Device_Users_UserID = CInt(row0.Item(4))
    '                                            '.Emp_Bio_Device_Users.Attendence_Status_ID = vvv.Attendence_Status_ID
    '                                            .Emp_Attendence_Device_DateTime = CDate(datet.ToString("yyyy/MM/dd HH:mm:ss"))
    '                                            .Emp_Attendence_Device_Date = CType(aa.ToString("dd-MMM-yyyy").ToString, Date?)
    '                                            .Emp_Attendence_Device_Time = bb.ToString("HH:mm").ToString
    '                                            .Emp_Attendence_Device_Status = True
    '                                            'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    '                                            'If CStr(row0.Item(1)) = "RP-Private A" Then
    '                                            '    dXA = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            'End If
    '                                            'If CStr(row0.Item(1)) = "LP-Private B" Then
    '                                            '    dXB = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            '    Dim fff As DateTime = CDate(If(dXA = "", "00:00", dXA))
    '                                            '    Dim ggg As DateTime = CDate(If(dXB = "", "00:00", dXB))
    '                                            '    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
    '                                            '    Toti += duration
    '                                            '    .Emp_Attendence_Device_Cal1 = CStr(duration)
    '                                            'End If
    '                                            ''xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    '                                            'If CStr(row0.Item(1)) = "RT-Check In" Then
    '                                            '    ckA = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            'End If
    '                                            'If CStr(row0.Item(1)) = "LT-Check Out" Then
    '                                            '    ckB = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            '    Dim fff As DateTime = CDate(If(ckA = "", "00:00", ckA))
    '                                            '    Dim ggg As DateTime = CDate(If(ckB = "", "00:00", ckB))
    '                                            '    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
    '                                            '    ToCi = duration
    '                                            '    .Emp_Attendence_Device_Cal2 = CStr(ToCi)
    '                                            ''''sssssssssssssssssssssssssssssssssssssssssssssss
    '                                            ''Dim dtNewX = New Emp_Attendence_Device
    '                                            ''With dtNewX
    '                                            ''    '.Emp_ID = pop
    '                                            ''    .Emp_Bio_Device_Users.Attendence_Status_ID = vvv.Attendence_Status_ID
    '                                            ''    .Emp_Attendence_Device_DateTime = CType(datet, DateTime).ToString("yyyy/MM/dd HH:mm:ss")
    '                                            ''    .Emp_Attendence_Device_Date = CType(aa.ToString("dd-MMM-yyyy").ToString, Date?)
    '                                            ''    .Emp_Attendence_Device_Time = "23:59" 'bb.ToString("HH:mm").ToString
    '                                            ''    Dim TotMins As Integer = 194

    '                                            ''    'Dim Durationx As TimeSpan = New TimeSpan(0, ToCi, 0)
    '                                            ''    'Dim Hoursx = Durationx.Hours
    '                                            ''    'Dim Minutesx = Durationx.Minutes
    '                                            ''    'Dim Durationy As TimeSpan = New TimeSpan(0, Toti, 0)
    '                                            ''    'Dim Hoursy = Durationy.Hours
    '                                            ''    'Dim Minutesy = Durationy.Minutes
    '                                            ''    Dim Togi As Integer = CInt(ToCi - Toti)
    '                                            ''    Dim Durationx As TimeSpan = TimeSpan.FromMinutes(ToCi)
    '                                            ''    Dim Durationy As TimeSpan = TimeSpan.FromMinutes(Toti)
    '                                            ''    Dim Durationz As TimeSpan = TimeSpan.FromMinutes(Togi)

    '                                            ''    .Emp_Attendence_Device_Cal2 = Durationx.ToString("hh\:mm") ' Durationx.Hours & ":" & Durationx.Minutes
    '                                            ''    .Emp_Attendence_Device_Cal1 = Durationy.ToString("hh\:mm")
    '                                            ''    .Emp_Attendence_Device_Cal3 = Durationz.ToString("hh\:mm")
    '                                            ''End With
    '                                            ''db.Emp_Attendence_Device.Add(dtNewX)
    '                                            ''MsgBox(Toti)
    '                                            'Toti = 0
    '                                            '    'ssssssssssssssssssssssssssssssssssssssssssssssssssssss
    '                                            'End If
    '                                            ''xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    '                                            'If CStr(row0.Item(1)) = "RR-Lunch A" Then
    '                                            '    lnA = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            'End If
    '                                            'If CStr(row0.Item(1)) = "LR-Lunch B" Then
    '                                            '    lnB = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            '    Dim fff As DateTime = CDate(If(lnA = "", "00:00", lnA))
    '                                            '    Dim ggg As DateTime = CDate(If(lnB = "", "00:00", lnB))
    '                                            '    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
    '                                            '    Toti += duration
    '                                            '    .Emp_Attendence_Device_Cal1 = CType(duration, String)
    '                                            'End If
    '                                            ''xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    '                                            'If CStr(row0.Item(1)) = "RI-Prayer A" Then
    '                                            '    prA = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            'End If
    '                                            'If CStr(row0.Item(1)) = "LI-Prayer B" Then
    '                                            '    prB = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            '    Dim fff As DateTime = CDate(If(prA = "", "00:00", prA))
    '                                            '    Dim ggg As DateTime = CDate(If(prB = "", "00:00", prB))
    '                                            '    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
    '                                            '    Toti += duration
    '                                            '    .Emp_Attendence_Device_Cal1 = CType(duration, String)
    '                                            'End If
    '                                            ''xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    '                                            'If CStr(row0.Item(1)) = "RM-Short Leave A" Then
    '                                            '    shA = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            'End If
    '                                            'If CStr(row0.Item(1)) = "LM-Short Leave B" Then
    '                                            '    shB = CStr(CDate(bb.ToString("HH:mm").ToString))
    '                                            '    Dim fff As DateTime = CDate(If(shA = "", "00:00", shA))
    '                                            '    Dim ggg As DateTime = CDate(If(shB = "", "00:00", shB))
    '                                            '    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
    '                                            '    Toti += duration
    '                                            '    .Emp_Attendence_Device_Cal1 = CType(duration, String) 'fff.ToString("HH:mm") & " to " & ggg.ToString("HH:mm") & "  " & shT.Hours & ":" & shT.Minutes
    '                                            'End If
    '                                        End With
    '                                        db.Emp_Attendence_Device.Add(dtNew)
    '                                        db.SaveChanges()
    '                                        'Catch ex As Exception

    '                                        'End Try
    '                                    End If
    '                                End If
    '                            End If
    '                        End If
    '                    Next
    '                Next
    '            Next

    '            MsgBox("Selected IDs (" & intList.Count & ") Import Biometric Device to Database Successfull")
    '            ProgressBarControl1.Properties.Appearance.BackColor = Color.Green
    '            ProgressBarControl1.Update()
    '            ProgressBarControl2.Properties.Appearance.BackColor = Color.Green
    '            ProgressBarControl2.Update()
    '            ProgressBarControl3.Properties.Appearance.BackColor = Color.Green
    '            ProgressBarControl3.Update()
    '            LoadEmp(CDate(Issue_Date.EditValue))
    '        Else
    '            MsgBox("Please Select Record for IMPORRT", MsgBoxStyle.Critical, "Selection Error")
    '        End If
    '    End Using
    'End Sub

#End Region

    Private Sub BarButtonItem3_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem3.ItemClick
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            If intList IsNot Nothing Then
                Dim sF1 As Date = CDate(FF1.EditValue).Date '.ToString("dd/MM/yyyy")
                Dim sF2 As Date = CDate(FF2.EditValue).Date
                Dim sT1 As String = CDate(TT1.EditValue).ToString("HH:mm").ToString
                Dim sT2 As String = CDate(TT2.EditValue).ToString("HH:mm").ToString

                Dim p1 As Integer = 1
                ProgressBarControl1.Properties.Maximum = intList.Count
                ProgressBarControl1.Properties.Minimum = 0
                ProgressBarControl1.Properties.Appearance.BackColor = Color.Yellow
                ProgressBarControl1.Position = 0
                ProgressBarControl1.Update()
                Dim p2 As Integer = 1
                ProgressBarControl2.Properties.Maximum = intList.Count
                ProgressBarControl2.Properties.Minimum = 0
                ProgressBarControl2.Properties.Appearance.BackColor = Color.Yellow
                ProgressBarControl2.Position = 0
                ProgressBarControl2.Update()
                For pio As Integer = 0 To intList.Count - 1
                    Dim EmpID As Integer = intList(pio)
                    ProgressBarControl1.Position = p1
                    ProgressBarControl1.Update()
                    p1 += 1
                    ProgressBarControl2.Position = p2
                    ProgressBarControl2.Update()
                    p2 += 1

                    Dim dt = (From a In db.Employees Where a.Emp_Status = True And a.Emp_ID = EmpID Select a).FirstOrDefault
                    If dt IsNot Nothing Then
                        dt.Emp_DutyOn = sT1
                        dt.Emp_Duty_Off = sT2
                        db.SaveChanges()
                    End If

                    Dim dts = (From a In db.Emp_Attendence_Device Where a.Emp_Attendence_Device_Status = True And
                                                                     a.Emp_Bio_Device_Users.Employee.Emp_Status = True And
                                                                     a.Emp_Bio_Device_Users.Emp_ID = EmpID And
                                                                     a.Emp_Attendence_Device_Date.Value.Day >= sF1.Day And
                                                                     a.Emp_Attendence_Device_Date.Value.Day <= sF2.Day And
                                                                     a.Emp_Attendence_Device_Date.Value.Month >= sF1.Month And
                                                                     a.Emp_Attendence_Device_Date.Value.Month <= sF2.Month And
                                                                     a.Emp_Attendence_Device_Date.Value.Year >= sF1.Year And
                                                                     a.Emp_Attendence_Device_Date.Value.Year <= sF2.Year
                               Order By a.Emp_Attendence_Device_Date, a.Emp_Attendence_Device_Time Select a).ToList
                    If dts.Count > 0 Then
                        Dim p3 As Integer = 1
                        ProgressBarControl3.Properties.Maximum = dts.Count
                        ProgressBarControl3.Properties.Minimum = 0
                        ProgressBarControl3.Properties.Appearance.BackColor = Color.Yellow
                        ProgressBarControl3.Position = 0
                        ProgressBarControl3.Update()
                        For Each dtA In dts
                            ProgressBarControl3.Position = p3
                            ProgressBarControl3.Update()
                            p3 += 1
                            If dtA.Emp_Bio_Device_Users.Attendence_Status_ID = 1 Then
                                dtA.Emp_Attendence_Device_Duty_On_Off = sT1
                            End If
                            If dtA.Emp_Bio_Device_Users.Attendence_Status_ID = 2 Then
                                If dtA.Emp_Attendence_Device_Date.Value.DayOfWeek = DayOfWeek.Friday Then
                                    If CBool(VGridControl2.GetCellValue(Friday_On.PropertiesCollection.Item("Emp_Att_Set_Fri_Status"), 0)) = True Then
                                        dtA.Emp_Attendence_Device_Duty_On_Off = sT2
                                    Else
                                        dtA.Emp_Attendence_Device_Duty_On_Off = CDate(VGridControl2.GetCellValue(Friday_On.PropertiesCollection.Item("Emp_Att_Set_FridayOff"), 0)).ToString("HH:mm")
                                    End If
                                Else
                                    dtA.Emp_Attendence_Device_Duty_On_Off = sT2
                                End If
                            End If
                            db.SaveChanges()
                        Next
                    End If
                Next
                MsgBox("Update Duty Times on Selected Employees Successfull")
                LoadEmp(CDate(Issue_Date.EditValue))
            Else
                MsgBox("Please Select a Employees IDs", vbCritical, "Action Error")
            End If
        End Using
    End Sub
    Private Sub LoadImportDateCalcu()
        Using db As New CsmdBioAttendenceEntities
            Dim successfulImport As Boolean = False
            Dim fileAlreadyAdded As Integer = 0

            Dim dXA As Date
            Dim dXB As Date
            Dim ckA As Date
            Dim ckB As Date
            Dim lnA As Date
            Dim lnB As Date
            Dim prA As Date
            Dim prB As Date
            Dim shA As Date
            Dim shB As Date
            If intList IsNot Nothing Then
                Dim FromDat As DateTime = CDate(Issue_Date.EditValue)
                Dim SpX1 As Integer = 0 ' CInt(VGridControl2.GetCellValue(Late_Arrival.PropertiesCollection.Item("Emp_Att_Set_Late_Arrival_Time"), 0))
                Dim SpX2 As Integer = 0 ' CInt(VGridControl2.GetCellValue(Prayer_Late.PropertiesCollection.Item("Emp_Att_Set_Prayer_Late_Time"), 0))
                Dim SpX3 As Integer = 0 ' CInt(VGridControl2.GetCellValue(Short_Leave.PropertiesCollection.Item("Emp_Att_Set_Short_Leave_Time"), 0))
                Dim SpX4 As Integer = 0 ' CInt(VGridControl2.GetCellValue(Lunch_Time.PropertiesCollection.Item("Emp_Att_Set_Lunch_Time"), 0))
                Dim SpX5 As Integer = 0 ' CInt(VGridControl2.GetCellValue(Private_Time.PropertiesCollection.Item("Emp_Att_Set_Private_Time"), 0))
                Dim SpX6 As Integer = 0 ' CInt(VGridControl2.GetCellValue(Early_Dep.PropertiesCollection.Item("Emp_Att_Set_Early_Time"), 0))
                Dim SpX7 As Integer = 0 ' CInt(VGridControl2.GetCellValue(Duty_OverTime.PropertiesCollection.Item("Emp_Att_Set_Duty_OverTime_Time"), 0))

                Dim dtj = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = FromDat.Month And a.Emp_Att_Set_Date.Value.Year = FromDat.Year Select a).FirstOrDefault
                If dtj IsNot Nothing Then
                    With dtj

                        SpX1 = CInt(.Emp_Att_Set_Late_Arrival_Time)
                        SpX2 = CInt(.Emp_Att_Set_Prayer_Late_Time)
                        SpX3 = CInt(.Emp_Att_Set_Short_Leave_Time)
                        SpX4 = CInt(.Emp_Att_Set_Lunch_Time)
                        SpX5 = CInt(.Emp_Att_Set_Private_Time)
                        SpX6 = CInt(If(Not IsNothing(.Emp_Att_Set_Early_Time), .Emp_Att_Set_Early_Time, 0))
                        SpX7 = CInt(.Emp_Att_Set_Duty_OverTime_Time)
                    End With
                Else

                End If



                Dim k As Integer = 1
                ProgressBarControl1.Properties.Maximum = intList.Count
                ProgressBarControl1.Properties.Minimum = 0
                ProgressBarControl1.Properties.Appearance.BackColor = Color.Yellow
                ProgressBarControl1.Position = 0
                ProgressBarControl1.Update()
                For pio As Integer = 0 To intList.Count - 1
                    Dim EmpID As Integer = intList(pio)
                    ProgressBarControl1.Position = k
                    ProgressBarControl1.Update()
                    k += 1

                    Dim firstDay As Date = CsmdDateTime.FirstDayOfMonth(FromDat)
                    Dim lastDay As Date = DateTime.Parse(CStr(firstDay)).AddDays(Date.DaysInMonth(FromDat.Year, FromDat.Month))
                    Dim AAz As Date = CDate(firstDay & " " & CsmdDateTime.StartDayTime(FromDat.Date))
                    Dim AAx As Date = CDate(lastDay.AddDays(1).Date & " " & CsmdDateTime.EndDayTime(FromDat.Date))
                    'Dim dts = (From a In db.Emp_Attendence_Device Where a.Emp_Attendence_Device_Status = True And
                    '                                                  a.Emp_Bio_Device_Users.Employee.Emp_Status = True And
                    '                                                  a.Emp_Bio_Device_Users.Emp_ID = EmpID And
                    '                                                  a.Emp_Attendence_Device_Date.Value.Year = FromDat.Year And
                    '                                                  a.Emp_Attendence_Device_Date.Value.Month = FromDat.Month
                    '           Order By a.Emp_Attendence_Device_Date, a.Emp_Attendence_Device_Time Select a).ToList
                    Dim dts = (From a In db.Emp_Attendence_Device Where a.Emp_Attendence_Device_Status = True And
                                                                      a.Emp_Bio_Device_Users.Employee.Emp_Status = True And
                                                                      a.Emp_Bio_Device_Users.Emp_ID = EmpID And
                                                                      a.Emp_Attendence_Device_DateTime >= AAz And
                                                                      a.Emp_Attendence_Device_DateTime <= AAx
                               Order By a.Emp_Attendence_Device_Date, a.Emp_Attendence_Device_Time Select a).ToList

                    Dim dg = (From a In db.Employees Where a.Emp_Status = True And a.Emp_ID = EmpID
                              Select a.Emp_ID, a.Emp_Name, a.Emp_DutyOn, a.Emp_Duty_Off).FirstOrDefault
                    If dg IsNot Nothing Then
                        'Try


                        Dim f As Integer = 1
                        ProgressBarControl2.Properties.Maximum = CInt((lastDay.ToOADate - firstDay.ToOADate))
                        ProgressBarControl2.Properties.Minimum = 0
                        ProgressBarControl2.Properties.Appearance.BackColor = Color.Yellow
                        ProgressBarControl2.Position = 0
                        ProgressBarControl2.Update()
                        For loopDate As Double = firstDay.ToOADate To lastDay.ToOADate

                            ProgressBarControl2.Position = f
                            ProgressBarControl2.Update()
                            f += 1
                            '
                            'Dim thisDate As Date = DateTime.FromOADate(loopDate)
                            Dim thisDate As DateTime = CDate(DateTime.FromOADate(loopDate) & " " & CsmdDateTime.StartDayTime(FromDat.Date))
                            Dim ToDate As DateTime = CDate(thisDate.AddDays(1).Date & " " & CsmdDateTime.EndDayTime(FromDat.Date))
                            Dim CalStatus As Double = 0
                            Dim CalUpTime As Double = 0
                            Dim oo As Integer = 0
                            Dim SavTime As Double = 0
                            Dim SavAmt As Double = 0

                            Dim SwFri As Integer = 0

                            Dim s As Integer = 1
                            ProgressBarControl3.Properties.Maximum = dts.Count
                            ProgressBarControl3.Properties.Minimum = 0
                            ProgressBarControl3.Properties.Appearance.BackColor = Color.Yellow
                            ProgressBarControl3.Position = 0
                            ProgressBarControl3.Update()

                            For Each row0 In dts
                                ProgressBarControl3.Position = s
                                ProgressBarControl3.Update()
                                s += 1
                                Dim datet As DateTime = CDate(CStr(row0.Emp_Attendence_Device_DateTime).ToString)

                                If dg.Emp_ID = row0.Emp_Bio_Device_Users.Emp_ID Then
                                    'If thisDate.Date = datet.Date Then
                                    If datet.ToString("yyyy/MM/dd HH:mm") >= thisDate.ToString("yyyy/MM/dd HH:mm") And datet.ToString("yyyy/MM/dd HH:mm") <= ToDate.ToString("yyyy/MM/dd HH:mm") Then

                                        Dim CalInOut As Double = 0
                                        Dim finNa As Integer = If(IsNothing(row0.Emp_Bio_Device_Users.Attendence_Status_ID), 0, CInt(row0.Emp_Bio_Device_Users.Attendence_Status_ID))
                                        Dim aa As DateTime = CDate(datet.ToString("dd-MMM-yyyy"))
                                        Dim bb As DateTime = CDate(row0.Emp_Attendence_Device_Time)
                                        Dim timg As String = row0.Emp_Attendence_Device_Time
                                        'Dim DutyOnX As DateTime = CDate(thisDate.Date & " " & CDate(CDate(dg.Emp_DutyOn).ToString("HH:mm")))
                                        'Dim DutyOffX As DateTime = CDate(thisDate.Date & " " & CDate(CDate(dg.Emp_Duty_Off).ToString("HH:mm")))
                                        Dim DutyFriX As DateTime = CDate(thisDate.Date & " " & CDate(CDate(VGridControl2.GetCellValue(Friday_On.PropertiesCollection.Item("Emp_Att_Set_FridayOff"), 0)).ToString("HH:mm")))
                                        Dim DutyFriOnX As DateTime = CDate(thisDate.Date & " " & CDate(CDate(VGridControl2.GetCellValue(Jumah.PropertiesCollection.Item("Emp_Att_Set_DutyFriOn"), 0)).ToString("HH:mm")))
                                        Dim DutyFriOffX As DateTime = CDate(thisDate.Date & " " & CDate(CDate(VGridControl2.GetCellValue(Jumah.PropertiesCollection.Item("Emp_Att_Set_DutyFriOff"), 0)).ToString("HH:mm")))
                                        'Me.Text = "Employee: " & dg.Emp_Name & " Date: " & aa.Date & " Finger: " & finNa & " Time: " & timg
                                        Dim kkkkkk As Integer = finNa

                                        Dim dth = (From a In db.Emp_Attendence_Device Where a.Emp_Attendence_Device_Status = True And
                                                                                                  a.Emp_Bio_Device_Users.Emp_ID = dg.Emp_ID And
                                                                                                  a.Emp_Bio_Device_Users.Attendence_Status_ID = kkkkkk And
                                                                                                   a.Emp_Attendence_Device_DateTime >= thisDate And
                                                                                                  a.Emp_Attendence_Device_DateTime <= ToDate And
                                                                                                  a.Emp_Attendence_Device_Time = timg Select a).FirstOrDefault
                                        If dth IsNot Nothing Then
                                            With dth
                                                .Emp_Bio_Device_Users_UserID = row0.Emp_Bio_Device_Users_UserID
                                                .Emp_Attendence_Device_Date = CType(aa.ToString("dd-MMM-yyyy").ToString, Date?)
                                                .Emp_Attendence_Device_Time = bb.ToString("HH:mm").ToString
                                                '.Emp_Attendence_Device_DateTime = CStr(CType(aa.ToString("dd-MMM-yyyy").ToString, Date?) & " " & bb.ToString("HH:mm:ss").ToString)
                                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                If finNa = 9 Then
                                                    dXA = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                End If
                                                If finNa = 10 Then
                                                    dXB = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                    Dim fff As DateTime = If(IsNothing(dXA), CDate("00:00"), dXA)
                                                    Dim ggg As DateTime = If(IsNothing(dXB), CDate("00:00"), dXB)
                                                    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
                                                    CalStatus += duration
                                                    .Emp_Attendence_Device_Cal1 = CStr(duration)
                                                    If duration > SpX5 Then
                                                        CalUpTime += CDbl(CStr(duration - SpX5))
                                                        .Emp_Attendence_Device_Cal2 = CStr(duration - SpX5)
                                                    End If
                                                End If
                                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                Dim DutyOnX As DateTime '= CDate(thisDate.Date & " " & CDate(CDate(row0.Emp_Attendence_Device_Duty_On_Off).ToString("HH:mm")))
                                                Dim DutyOffX As DateTime '= CDate(thisDate.Date & " " & CDate(CDate(row0.Emp_Attendence_Device_Duty_On_Off).ToString("HH:mm")))

                                                If finNa = 1 Then
                                                    DutyOnX = CDate(thisDate.Date & " " & CDate(CDate(If(row0.Emp_Attendence_Device_Duty_On_Off IsNot Nothing, row0.Emp_Attendence_Device_Duty_On_Off, "00:00")).ToString("HH:mm")))

                                                    ckA = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                    'Dim ddd As DateTime = CDate(aa.ToString("dd-MMM-yyyy") & " " & CDate(dg.Emp_DutyOn).ToString("HH:mm"))
                                                    Dim fff As DateTime = If(IsNothing(ckA), CDate("00:00"), ckA)
                                                    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, DutyOnX, fff))
                                                    If duration > SpX1 Then
                                                        CalUpTime += CDbl(CStr(duration - SpX1))
                                                        .Emp_Attendence_Device_Cal2 = CStr(duration - SpX1)
                                                    End If
                                                End If

                                                If finNa = 2 Then
                                                    DutyOffX = CDate(thisDate.Date & " " & CDate(CDate(If(row0.Emp_Attendence_Device_Duty_On_Off IsNot Nothing, row0.Emp_Attendence_Device_Duty_On_Off, "00:00")).ToString("HH:mm")))
                                                    ckB = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                    Dim fff As DateTime = If(IsNothing(ckA), CDate("00:00"), ckA)
                                                    Dim ggg As DateTime = If(IsNothing(ckB), CDate("00:00"), ckB)
                                                    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
                                                    CalInOut = duration
                                                    .Emp_Attendence_Device_Cal3 = CStr(CalInOut)

                                                    'If duration > SpX1 Then
                                                    If thisDate.DayOfWeek = DayOfWeek.Friday Then
                                                        If CBool(VGridControl2.GetCellValue(Friday_On.PropertiesCollection.Item("Emp_Att_Set_Fri_Status"), 0)) = True Then
                                                            Dim durationXf As Integer = CInt(DateDiff(DateInterval.Minute, ggg, DutyOffX))
                                                            CalUpTime += durationXf
                                                            .Emp_Attendence_Device_Cal2 = CStr(durationXf) ' - 10
                                                            Dim CalDutyTimeY As Integer = CInt(DateDiff(DateInterval.Minute, DutyOnX, DutyOffX))
                                                            .Emp_Attendence_Device_Cal4 = CType(CalDutyTimeY, String)
                                                        Else

                                                            Dim durationXf As Integer = CInt(DateDiff(DateInterval.Minute, ggg, DutyFriX))
                                                            CalUpTime += durationXf
                                                            .Emp_Attendence_Device_Cal2 = CStr(durationXf) ' - 10
                                                            Dim CalDutyTimeY As Integer = CInt(DateDiff(DateInterval.Minute, DutyOnX, DutyFriX))
                                                            .Emp_Attendence_Device_Cal4 = CType(CalDutyTimeY, String)


                                                        End If
                                                    Else
                                                        Dim durationXf As Integer = CInt(DateDiff(DateInterval.Minute, ggg, DutyOffX))
                                                        CalUpTime += durationXf
                                                        .Emp_Attendence_Device_Cal2 = CStr(durationXf) ' - 10
                                                        Dim CalDutyTimeY As Integer = CInt(DateDiff(DateInterval.Minute, DutyOnX, DutyOffX))
                                                        .Emp_Attendence_Device_Cal4 = CType(CalDutyTimeY, String)
                                                    End If
                                                    'Dim dtNewX = New Emp_Attendence_Device
                                                    'With dtNewX
                                                    '    '.Emp_ID = dg.Emp_ID
                                                    '    .Emp_Attendence_Device_Date = CType(aa.ToString("dd-MMM-yyyy").ToString, Date?)
                                                    '.Emp_Attendence_Device_Time = "23:59"
                                                    '.Emp_Attendence_Device_DateTime = CStr(CType(aa.ToString("dd-MMM-yyyy").ToString, Date?) & " 23:59:59")
                                                    'Dim CalStatusX As TimeSpan = TimeSpan.FromMinutes(CalStatus)
                                                    '    Dim CalUpTimeX As TimeSpan = TimeSpan.FromMinutes(CalUpTime)
                                                    '    Dim CalInOutX As TimeSpan = TimeSpan.FromMinutes(CalInOut)
                                                    '    .Emp_Attendence_Device_Cal1 = "PHPL - " & CalStatusX.ToString("hh\:mm")
                                                    '    .Emp_Attendence_Device_Cal2 = "Sub - " & CalUpTimeX.ToString("hh\:mm")
                                                    '    .Emp_Attendence_Device_Cal3 = "InOut - " & CalInOutX.ToString("hh\:mm")
                                                    '    If thisDate.DayOfWeek = DayOfWeek.Friday Then
                                                    '        Dim CalDutyTimeX As Integer = CInt(DateDiff(DateInterval.Minute, DutyOnX, DutyFriX))
                                                    '        .Emp_Attendence_Device_Cal4 = thisDate.ToString("dddd") & " - " & TimeSpan.FromMinutes(CalDutyTimeX).ToString("hh\:mm")
                                                    '    Else
                                                    '        Dim CalDutyTimeX As Integer = CInt(DateDiff(DateInterval.Minute, DutyOnX, DutyOffX))
                                                    '        .Emp_Attendence_Device_Cal4 = thisDate.ToString("dddd") & " - " & TimeSpan.FromMinutes(CalDutyTimeX).ToString("hh\:mm")
                                                    '    End If
                                                    'End With
                                                    'db.Emp_Attendence_Device.Add(dtNewX)
                                                    'MsgBox(Toti)
                                                    CalStatus = 0
                                                    CalUpTime = 0
                                                End If
                                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                If finNa = 7 Then
                                                    lnA = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                End If
                                                If finNa = 8 Then
                                                    lnB = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                    Dim fff As DateTime = If(IsNothing(lnA), CDate("00:00"), lnA)
                                                    Dim ggg As DateTime = If(IsNothing(lnB), CDate("00:00"), lnB)
                                                    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
                                                    CalStatus += duration
                                                    .Emp_Attendence_Device_Cal1 = CStr(duration)
                                                    If oo = 0 Then
                                                        SavTime = CDbl(duration - SpX4)
                                                        .Emp_Attendence_Device_Cal2 = CStr(duration - SpX4)
                                                        CalUpTime += CDbl(duration - SpX4)
                                                        SavAmt = CDbl(duration - SpX4)
                                                        oo += 1
                                                    Else
                                                        If SavTime < 0 Then
                                                            SavTime = CDbl(duration - Math.Abs(SavTime))
                                                            .Emp_Attendence_Device_Cal2 = CType(SavTime, String)
                                                            CalUpTime = CalUpTime - SavAmt
                                                            SavAmt = SavTime
                                                            CalUpTime += SavTime
                                                        Else
                                                            SavTime = CDbl(duration + Math.Abs(SavTime))
                                                            .Emp_Attendence_Device_Cal2 = CType(SavTime, String)
                                                            CalUpTime = CalUpTime - SavAmt
                                                            SavAmt = SavTime
                                                            CalUpTime += SavTime
                                                        End If
                                                        oo += 1
                                                    End If
                                                End If
                                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                If finNa = 3 Then
                                                    prA = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                End If
                                                If finNa = 4 Then
                                                    prB = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))

                                                    Dim fff As DateTime = If(IsNothing(prA), CDate("00:00"), prA)
                                                    Dim ggg As DateTime = If(IsNothing(prB), CDate("00:00"), prB)
                                                    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
                                                    CalStatus += duration
                                                    .Emp_Attendence_Device_Cal1 = CStr(duration)
                                                    If thisDate.DayOfWeek = DayOfWeek.Friday Then
                                                        If CBool(VGridControl2.GetCellValue(Friday_On.PropertiesCollection.Item("Emp_Att_Set_Fri_Status"), 0)) = True Then
                                                            If SwFri = 0 Then
                                                                Dim CalDutyTimeX As Integer = CInt(DateDiff(DateInterval.Minute, DutyFriOnX, DutyFriOffX))

                                                                If duration > CalDutyTimeX Then
                                                                    CalUpTime += CDbl(duration - CalDutyTimeX)
                                                                    .Emp_Attendence_Device_Cal2 = CStr(duration - CalDutyTimeX)
                                                                End If
                                                                SwFri += 1
                                                            Else
                                                                If duration > SpX2 Then
                                                                    CalUpTime += CDbl(duration - SpX2)
                                                                    .Emp_Attendence_Device_Cal2 = CStr(duration - SpX2)
                                                                End If
                                                            End If
                                                        End If
                                                    Else
                                                        If duration > SpX2 Then
                                                            CalUpTime += CDbl(duration - SpX2)
                                                            .Emp_Attendence_Device_Cal2 = CStr(duration - SpX2)
                                                        End If
                                                    End If
                                                End If
                                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                If finNa = 5 Then
                                                    shA = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                End If
                                                If finNa = 6 Then
                                                    shB = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                    Dim fff As DateTime = If(IsNothing(shA), CDate("00:00"), shA)
                                                    Dim ggg As DateTime = If(IsNothing(shB), CDate("00:00"), shB)
                                                    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
                                                    CalStatus += duration
                                                    .Emp_Attendence_Device_Cal1 = CStr(duration)
                                                    If duration > SpX3 Then
                                                        CalUpTime += CDbl(duration - SpX3)
                                                        .Emp_Attendence_Device_Cal2 = CStr(duration)
                                                    End If
                                                End If
                                            End With
                                            db.SaveChanges()
                                        Else
                                            Dim dtNew = New Emp_Attendence_Device
                                            With dtNew
                                                .Emp_Bio_Device_Users_UserID = row0.Emp_Bio_Device_Users_UserID
                                                If finNa = 0 Then

                                                Else
                                                    '.us.Attendence_Status_ID = finNa
                                                End If
                                                .Emp_Attendence_Device_Date = CType(aa.ToString("dd-MMM-yyyy").ToString, Date?)
                                                .Emp_Attendence_Device_Time = bb.ToString("HH:mm").ToString
                                                .Emp_Attendence_Device_DateTime = CDate(aa.ToString("dd-MMM-yyyy").ToString & " " & bb.ToString("HH:mm").ToString)
                                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                If finNa = 9 Then
                                                    dXA = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                End If
                                                If finNa = 10 Then
                                                    dXB = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                    Dim fff As DateTime = If(IsNothing(dXA), CDate("00:00"), dXA)
                                                    Dim ggg As DateTime = If(IsNothing(dXB), CDate("00:00"), dXB)
                                                    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
                                                    CalStatus += duration
                                                    .Emp_Attendence_Device_Cal1 = CType(duration, String)
                                                End If
                                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                If finNa = 1 Then
                                                    ckA = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                End If
                                                If finNa = 2 Then
                                                    ckB = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                    Dim fff As DateTime = If(IsNothing(ckA), CDate("00:00"), ckA)
                                                    Dim ggg As DateTime = If(IsNothing(ckB), CDate("00:00"), ckB)
                                                    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
                                                    CalInOut = duration
                                                    .Emp_Attendence_Device_Cal2 = CType(CalInOut, String)
                                                    'sssssssssssssssssssssssssssssssssssssssssssssss
                                                    '    Dim dtNewX = New Emp_Attendence_Device
                                                    '    With dtNewX
                                                    '        .Emp_Bio_Device_Users_UserID = row0.Emp_Bio_Device_Users_UserID
                                                    '        .Emp_Attendence_Device_Date = CType(aa.ToString("dd-MMM-yyyy").ToString, Date?)
                                                    '    .Emp_Attendence_Device_Time = "23:59"
                                                    '    .Emp_Attendence_Device_DateTime = CType(aa.ToString("dd-MMM-yyyy").ToString, Date?) & " 23:59:59"
                                                    'End With
                                                    '    db.Emp_Attendence_Device.Add(dtNewX)
                                                    CalStatus = 0
                                                    'ssssssssssssssssssssssssssssssssssssssssssssssssssssss
                                                End If
                                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                If finNa = 7 Then
                                                    lnA = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                End If
                                                If finNa = 8 Then
                                                    lnB = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                    Dim fff As DateTime = If(IsNothing(lnA), CDate("00:00"), lnA)
                                                    Dim ggg As DateTime = If(IsNothing(lnB), CDate("00:00"), lnB)
                                                    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
                                                    CalStatus += duration
                                                    .Emp_Attendence_Device_Cal1 = CType(duration, String)
                                                End If
                                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                If finNa = 3 Then
                                                    prA = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                End If
                                                If finNa = 4 Then
                                                    prB = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                    Dim fff As DateTime = If(IsNothing(prA), CDate("00:00"), prA)
                                                    Dim ggg As DateTime = If(IsNothing(prB), CDate("00:00"), prB)
                                                    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
                                                    CalStatus += duration
                                                    .Emp_Attendence_Device_Cal1 = CType(duration, String)
                                                End If
                                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                If finNa = 5 Then
                                                    shA = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                End If
                                                If finNa = 6 Then
                                                    shB = CDate(aa.ToString("dd-MMM-yyyy") & " " & CStr(CDate(bb.ToString("HH:mm").ToString)))
                                                    Dim fff As DateTime = If(IsNothing(shA), CDate("00:00"), shA)
                                                    Dim ggg As DateTime = If(IsNothing(shB), CDate("00:00"), shB)
                                                    Dim duration As Integer = CInt(DateDiff(DateInterval.Minute, fff, ggg))
                                                    CalStatus += duration
                                                    .Emp_Attendence_Device_Cal1 = CType(duration, String)
                                                End If
                                            End With
                                            db.Emp_Attendence_Device.Add(dtNew)
                                            db.SaveChanges()
                                        End If

                                    End If
                                End If
                            Next
                        Next
                        'Catch ex As Exception
                        '    MsgBox(dg.Emp_Name & " Missing Duty Times")
                        'End Try

                    End If
                Next
                MsgBox("Selected IDs (" & intList.Count & ") Attendance Calculation is Successfull")
                ProgressBarControl1.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl1.Update()
                ProgressBarControl2.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl2.Update()
                ProgressBarControl3.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl3.Update()
                LoadEmp(CDate(Issue_Date.EditValue))
            Else
                MsgBox("Please Select Record for Calculation", MsgBoxStyle.Critical, "Selection Error")
            End If
        End Using
    End Sub

    Private Sub CreateInvoices()
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities

            If intList IsNot Nothing Then
                Dim datX As Date = CDate(Issue_Date.EditValue)

                Dim DutyFriX As DateTime
                Dim ck1 As Boolean = True
                Dim ck2 As Boolean = True
                Dim ck3 As Boolean = True
                Dim ck4 As Boolean = True
                Dim ck5 As Boolean = True
                Dim ck6 As Boolean = True
                Dim ck7 As Boolean = False
                Dim ck8 As Boolean = True

                Dim dtj = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = datX.Month And a.Emp_Att_Set_Date.Value.Year = datX.Year Select a).FirstOrDefault
                If dtj IsNot Nothing Then
                    With dtj
                        'DutyFri.Text = .Emp_Att_Set_FridayOff
                        DutyFriX = CDate(CDate(.Emp_Att_Set_FridayOff).ToString("HH:mm"))
                        ck1 = CBool(.Emp_Att_Set_Early_Status)
                        ck2 = CBool(.Emp_Att_Set_Duty_OverTime_Status)
                        ck3 = CBool(.Emp_Att_Set_Prayer_Late_Status)
                        ck4 = CBool(.Emp_Att_Set_Short_Leave_Status)
                        ck5 = CBool(.Emp_Att_Set_Lunch_Status)
                        ck6 = CBool(.Emp_Att_Set_Lunch_OverTime_Status)
                        ck7 = CBool(.Emp_Att_Set_Private_Late_Status)
                        ck8 = CBool(.Emp_Att_Set_Late_Arrival_Status)
                    End With
                Else

                End If

                Dim p1 As Integer = 1
                ProgressBarControl1.Properties.Maximum = intList.Count
                ProgressBarControl1.Properties.Minimum = 0
                ProgressBarControl1.Properties.Appearance.BackColor = Color.Yellow
                ProgressBarControl1.Position = 0
                ProgressBarControl1.Update()
                For pio As Integer = 0 To intList.Count - 1
                    Dim EmpID As Integer = intList(pio)
                    ProgressBarControl1.Position = p1
                    ProgressBarControl1.Update()
                    p1 += 1
                    Dim DutyOn1X As DateTime
                    Dim DutyOn2X As DateTime
                    Dim DutyOffX As DateTime



                    Dim Emp_Att_Payment_Fix As Decimal = 0
                    Dim Emp_Att_Payment_BegX As Decimal = 0
                    'F5.Text = "0"

                    'Emp_Att_Payment_Issue_Date.EditValue = intAttDate
                    'Dim IssueDateX As Date = IssueDate.EditValue
                    'intEmpID = 1



                    Dim emp = (From a In db.Employees Where a.Emp_ID = EmpID And a.Emp_Status = True Select a).FirstOrDefault
                    If emp IsNot Nothing Then

                        Dim dSumDutyX As Integer = 0
                        Dim dSum1X As Integer = 0
                        Dim dSum1aX As Integer = 0
                        Dim dSum1bX As Integer = 0
                        Dim dSum1cX As Integer = 0
                        Dim dSum2X As Integer = 0
                        Dim dSum2aX As Integer = 0
                        Dim dSum3X As Integer = 0
                        Dim dSum3aX As Integer = 0
                        Dim dSum4X As Integer = 0
                        Dim dSum4aX As Integer = 0
                        Dim dSum5X As Integer = 0
                        Dim dSum5aX As Integer = 0
                        Dim dSum6X As Integer = 0
                        Dim dSum6aX As Integer = 0
                        Dim duration As Integer = 0
                        Dim duration2 As Integer = 0
                        Dim Tim As Integer = 0
                        Dim Tdm As Decimal = 0
                        Dim Abse As Decimal = 0
                        Dim Emp_Att_Payment_From_DateX As DateTime = CDate(Issue_Date.EditValue)
                        Dim Emp_Att_Payment_From_DateXbeg As DateTime = DateTime.Parse(CStr(Issue_Date.EditValue)).AddMonths(-1)

                        Dim dtBeg = (From a In db.Emp_Att_Payment Where a.Emp_ID = emp.Emp_ID And a.Emp_Att_Payment_From_Date.Value.Month = Emp_Att_Payment_From_DateXbeg.Month And a.Emp_Att_Payment_From_Date.Value.Year = Emp_Att_Payment_From_DateXbeg.Year Select a).FirstOrDefault
                        If dtBeg IsNot Nothing Then
                            Emp_Att_Payment_BegX = CInt(If(dtBeg.Emp_Att_Payment_Balance IsNot Nothing, dtBeg.Emp_Att_Payment_Balance, 0))
                        Else
                            Emp_Att_Payment_BegX = CInt(0)
                        End If

                        Dim dc = (From a In db.Emp_Att_Payment Where a.Emp_ID = emp.Emp_ID And a.Emp_Att_Payment_Issue_Date.Value.Month = datX.Month And a.Emp_Att_Payment_Issue_Date.Value.Year = datX.Year Select a).FirstOrDefault
                        If dc IsNot Nothing Then
                            Try
                                DutyOn1X = CDate(CDate(emp.Emp_DutyOn).ToString("HH:mm"))
                                DutyOn2X = CDate(CDate(emp.Emp_DutyOn).ToString("HH:mm"))
                                DutyOffX = CDate(CDate(emp.Emp_Duty_Off).ToString("HH:mm"))

                                'MsgBox("Please set Duty Times of this Employee " & emp.Emp_Name)



                                dc.Emp_Att_Payment_DutyOn = CType(DutyOn1X.ToString("HH:mm"), String)
                                dc.Emp_Att_Payment_DutyOff = CType(DutyOffX.ToString("HH:mm"), String)
                                dc.Emp_Att_Payment_DutyFriOff = CType(DutyFriX.ToString("HH:mm"), String)

                                duration = CInt(DateDiff(DateInterval.Minute, DutyOn1X, DutyOffX))
                                duration2 = CInt(DateDiff(DateInterval.Minute, DutyOn2X, DutyOffX)) ' Dutyoff for Rawayat

                                Dim Emp_Att_Payment_From_Date As Date
                                Dim Emp_Att_Payment_To_Date As Date
                                Dim frmD As DateTime = CDate(datX)

                                Dim dtMin = (From a In db.Emp_Attendence_Device
                                             Where a.Emp_Attendence_Device_Status = True And a.Emp_Bio_Device_Users.Emp_ID = emp.Emp_ID And a.Emp_Attendence_Device_Date.Value.Month = frmD.Month And a.Emp_Attendence_Device_Date.Value.Year = frmD.Year Select a.Emp_Attendence_Device_Date).Min
                                If dtMin IsNot Nothing Then
                                    Emp_Att_Payment_From_Date = CsmdDateTime.FirstDayOfMonth(CDate(dtMin))
                                Else
                                    Emp_Att_Payment_From_Date = CsmdDateTime.FirstDayOfMonth(CDate(Issue_Date.EditValue))
                                End If

                                Dim dtMax = (From a In db.Emp_Attendence_Device
                                             Where a.Emp_Attendence_Device_Status = True And a.Emp_Bio_Device_Users.Emp_ID = emp.Emp_ID And a.Emp_Attendence_Device_Date.Value.Month = frmD.Month And a.Emp_Attendence_Device_Date.Value.Year = frmD.Year Select a.Emp_Attendence_Device_Date).Max
                                If dtMax IsNot Nothing Then
                                    Emp_Att_Payment_To_Date = CDate(dtMax)
                                Else
                                    Emp_Att_Payment_To_Date = CDate(CsmdDateTime.LastDayOfMonth(CDate(Issue_Date.EditValue)))
                                End If

                                Dim fff As DateTime = CType(Emp_Att_Payment_From_Date, Date)
                                Dim ggg As DateTime = CType(Emp_Att_Payment_To_Date, Date)

                                dc.Emp_Att_Payment_From_Date = fff.Date
                                dc.Emp_Att_Payment_To_Date = ggg.Date

                                Dim x1 As Double = 0
                                Dim x2 As Double = 0
                                Dim w1 As Double = 0
                                Dim w2 As Double = 0
                                Dim w3 As Double = 0
                                Dim w4 As Double = 0
                                Dim w5 As Double = 0
                                Dim w6 As Double = 0
                                Dim w7 As Double = 0
                                Dim w8 As Double = 0
                                Dim w9 As Double = 0
                                Dim w10 As Double = 0
                                Dim w11 As Double = 0
                                Dim w12 As Double = 0
                                Dim w13 As Double = 0
                                Dim w14 As Double = 0
                                Dim w15 As Double = 0
                                Dim w16 As Double = 0

                                Dim c1 As Double = 0
                                Dim c2 As Double = 0
                                Dim c3 As Double = 0
                                Dim c4 As Double = 0
                                Dim c5 As Double = 0

                                For loopDate As Double = fff.ToOADate To ggg.ToOADate
                                    Dim nn As Integer = 0
                                    dSum4X = 0
                                    'Dim thisDate As Date = DateTime.FromOADate(loopDate)
                                    Dim thisDate As Date = CDate(DateTime.FromOADate(loopDate) & " " & CsmdDateTime.StartDayTime(datX.Date))
                                    Dim toDate As Date = CDate(thisDate.AddDays(1).Date & " " & CsmdDateTime.EndDayTime(datX.Date))
                                    If thisDate.DayOfWeek = DayOfWeek.Friday Then
                                        w2 += 1
                                    Else
                                        w1 += 1
                                    End If
                                    Dim dt = (From a In db.Emp_Attendence_Device
                                              Where a.Emp_Attendence_Device_Status = True And
                                                  a.Emp_Bio_Device_Users.Emp_ID = emp.Emp_ID And
                                                                      a.Emp_Attendence_Device_DateTime >= thisDate And
                                                                      a.Emp_Attendence_Device_DateTime <= toDate
                                              Select a).ToList
                                    If dt.Count > 0 Then
                                        Dim hhhg As Boolean = False
                                        For Each dts In dt
                                            With dts

                                                Dim datet As DateTime = CDate(CStr(.Emp_Attendence_Device_DateTime).ToString)
                                                'If thisDate.Date = datet.Date Then
                                                If datet.ToString("yyyy/MM/dd HH:mm") >= thisDate.ToString("yyyy/MM/dd HH:mm") And datet.ToString("yyyy/MM/dd HH:mm") <= toDate.ToString("yyyy/MM/dd HH:mm") Then


                                                    Dim val1 As String = .Emp_Attendence_Device_Cal1
                                                    Dim val2 As String = .Emp_Attendence_Device_Cal2
                                                    Dim val3 As String = .Emp_Attendence_Device_Cal3
                                                    Dim val4 As String = .Emp_Attendence_Device_Cal4
                                                    Dim val5 As String = .Emp_Attendence_Device_Cal5

                                                    'If Not val4 = "" And IsNumeric(val4) Then
                                                    '    dSumDutyX += val4
                                                    '    w4 += 1
                                                    'End If

                                                    If Not val3 = "" And IsNumeric(val3) Then
                                                        dSum1X += CInt(val3)
                                                        w4 += 1
                                                    End If
                                                    If Not val2 = "" And IsNumeric(val2) Then
                                                        '
                                                        If .Emp_Bio_Device_Users.Attendence_Status_ID = 1 Then
                                                            dSum1aX += CInt(val2)
                                                            w5 += 1
                                                        End If
                                                        If .Emp_Bio_Device_Users.Attendence_Status_ID = 2 Then
                                                            If CInt(val2) > 0 Then
                                                                dSum1bX += CInt(val2)
                                                                w6 += 1
                                                            Else
                                                                dSum1cX -= CInt(val2)
                                                                w7 += 1
                                                            End If

                                                        End If

                                                    End If
                                                    'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                    If .Emp_Bio_Device_Users.Attendence_Status_ID = 4 Then
                                                        If Not val1 = "" And IsNumeric(val1) Then
                                                            dSum2X += CInt(val1)
                                                        End If
                                                        If Not val2 = "" And IsNumeric(val2) Then
                                                            dSum2aX += CInt(val2)
                                                            w9 += 1
                                                        End If
                                                        c2 += 1
                                                    End If
                                                    If .Emp_Bio_Device_Users.Attendence_Status_ID = 6 Then
                                                        If Not val1 = "" And IsNumeric(val1) Then
                                                            dSum3X += CInt(val1)
                                                        End If
                                                        If Not val2 = "" And IsNumeric(val2) Then
                                                            dSum3aX += CInt(val2)
                                                            w10 += 1
                                                        End If
                                                        c3 += 1
                                                    End If

                                                    If .Emp_Bio_Device_Users.Attendence_Status_ID = 8 Then
                                                        If hhhg = False Then
                                                            Dim dtm = (From a In db.Emp_Attendence_Device
                                                                       Where a.Emp_Attendence_Device_Status = True And
                                                                           a.Emp_Bio_Device_Users.Emp_ID = emp.Emp_ID And
                                                                      a.Emp_Attendence_Device_DateTime >= thisDate And
                                                                      a.Emp_Attendence_Device_DateTime <= toDate And
                                                                           a.Emp_Bio_Device_Users.Attendence_Status_ID = 8
                                                                       Select a.Emp_Attendence_Device_ID).Max
                                                            If Not IsNothing(dtm) Then
                                                                Dim dtn = (From a In db.Emp_Attendence_Device Where a.Emp_Attendence_Device_Status = True And
                                                                                                                      a.Emp_Attendence_Device_ID = dtm
                                                                           Select a).FirstOrDefault
                                                                If dtn IsNot Nothing Then
                                                                    Dim kop As String = dtn.Emp_Attendence_Device_Cal2
                                                                    If Not kop = "" And IsNumeric(kop) Then
                                                                        If CDbl(kop) > 0 Then
                                                                            w11 += 1
                                                                            dSum4aX += CInt(kop)
                                                                        End If
                                                                        If CDbl(kop) < 0 Then
                                                                            dSum6aX += CInt(kop)
                                                                            w16 += 1
                                                                        End If
                                                                    End If
                                                                End If
                                                            End If
                                                            If Not val1 = "" And IsNumeric(val1) Then
                                                                dSum4X += CInt(val1)
                                                            End If
                                                            hhhg = True
                                                        End If
                                                        c4 += 1
                                                    End If

                                                    If .Emp_Bio_Device_Users.Attendence_Status_ID = 10 Then
                                                        If Not val1 = "" And IsNumeric(val1) Then
                                                            dSum5X += CInt(val1)
                                                        End If
                                                        If Not val2 = "" And IsNumeric(val2) Then
                                                            dSum5aX += CInt(val2)
                                                            w12 += 1
                                                        End If
                                                        c5 += 1
                                                    End If
                                                Else


                                                End If
                                            End With
                                            'Emp_Name.Text = dts.Employee.Emp_Name
                                        Next
                                    Else
                                        If thisDate.DayOfWeek = DayOfWeek.Friday Then
                                            x2 += 1
                                        Else
                                            x1 += 1
                                        End If
                                    End If
                                Next

                                Emp_Att_Payment_Fix = CDec(If(emp.Emp_Salary IsNot Nothing, emp.Emp_Salary, 0))


                                'H1.Text =  CsmdDateTime.TotalHours(CInt(w1 * duration))
                                'H2.Text =  CsmdDateTime.TotalHours(CInt(w2 * duration2))
                                'D1.Text = CStr(w1)
                                'D2.Text = CStr(w2)
                                Tim = CInt((w1 * duration) + (w2 * duration2))
                                dc.Emp_Att_Payment_Total_Hours = CsmdDateTime.TotalHours(Tim)
                                Tdm = CDec(w1 + w2)

                                Dim minR As Decimal = Emp_Att_Payment_Fix / Tim
                                dc.Emp_Att_Payment_Total_MinRate = minR

                                Dim md As Decimal = CDate(CsmdDateTime.LastDayOfMonth(CDate(Issue_Date.EditValue))).Day
                                dc.Emp_Att_Payment_Total_MonthDays = md
                                Dim ofd As Decimal = md - Tdm
                                dc.Emp_Att_Payment_Total_OffDays = ofd
                                dc.Emp_Att_Payment_Total_Days = Tdm

                                dc.Emp_Att_Payment_Total_Salaray_Days = md
                                dc.Emp_Att_Payment_Total_DayRate = Emp_Att_Payment_Fix / dc.Emp_Att_Payment_Total_Salaray_Days

                                dc.Emp_Att_Payment_Fix = Emp_Att_Payment_Fix
                                'Tim = CInt((w1 * duration) + (w2 * duration2))
                                'H3.Text =  CsmdDateTime.TotalHours(Tim)
                                'Tdm = CInt(w1 + w2)
                                'D3.Text = CStr(Tdm)


                                'Dim gg As Integer = CInt((x1 * duration) + (x2 * duration2))
                                'H15.Text =  CsmdDateTime.TotalHours(gg)
                                Abse = CDec(x1 + x2)
                                'H4.Text =  CsmdDateTime.TotalHours(dSum1X)
                                'dc.Emp_Att_Payment_InOutDays = CInt(w4)



                                dc.Emp_Att_Payment_Absent_D = If(dc.Emp_Att_Payment_Add_Days IsNot Nothing, (Tdm - w4) - dc.Emp_Att_Payment_Add_Days, Tdm - w4)
                                Dim mkmkmk As Decimal = CDec(CType(dc.Emp_Att_Payment_Absent_D, Decimal?) * dc.Emp_Att_Payment_Total_DayRate)
                                Dim hhh As Decimal = CDec(ofd * dc.Emp_Att_Payment_Total_DayRate)
                                dc.Emp_Att_Payment_Absent_Amount = -(mkmkmk) ' CType(-(CType(dc.Emp_Att_Payment_Absent_D, Decimal?) * dc.Emp_Att_Payment_Total_DayRate), Decimal?)
                                'Dim gg As Integer = CInt((x1 * duration) + (x2 * duration2))
                                'H15.Text =  CsmdDateTime.TotalHours(gg)
                                'Abse = CInt(x1 + x2)
                                'H4.Text =  CsmdDateTime.TotalHours(dSum1X)
                                'D4.Text = CStr(w4)
                                dc.Emp_Att_Payment_Total_OffDays_Amount = -hhh

                                dc.Emp_Att_Payment_InOutDays = CInt(w4)
                                dc.Emp_Att_Payment_InOutDays_Amount = CInt(w4) * dc.Emp_Att_Payment_Total_DayRate

                                'dc.Emp_Att_Payment_ExtraDays = 0
                                'dc.Emp_Att_Payment_ExtraDays_Amount = 0 * dc.Emp_Att_Payment_Total_DayRate

                                Dim TotAmount As Decimal = dc.Emp_Att_Payment_ExtraDays_Amount + dc.Emp_Att_Payment_InOutDays_Amount

                                dc.Emp_Att_Payment_Salaray_Total = TotAmount


                                dc.Emp_Att_Payment_Late_H = CsmdDateTime.TotalHours(dSum1aX)
                                dc.Emp_Att_Payment_Late_D = w5
                                If dc.Emp_Att_Payment_Late Is Nothing Or dc.Emp_Att_Payment_Late = 0 Then
                                    dc.Emp_Att_Payment_Late = minR

                                End If
                                'dc.Emp_Att_Payment_Late = If(Not isnothing( dc.Emp_Att_Payment_Late ), dc.Emp_Att_Payment_Late, minR)
                                dc.Emp_Att_Payment_Late_Amount = -(dSum1aX * If(ck8 = True, minR, 0))

                                dc.Emp_Att_Payment_Early_H = CsmdDateTime.TotalHours(dSum1bX)
                                dc.Emp_Att_Payment_Early_D = w6
                                dc.Emp_Att_Payment_Early_Amount = -(dSum1bX * If(ck1 = True, minR, 0))


                                dc.Emp_Att_Payment_OverTime_H = CsmdDateTime.TotalHours(dSum1cX)
                                dc.Emp_Att_Payment_OverTime_D = w7
                                dc.Emp_Att_Payment_OverTime_Amount = Math.Abs(dSum1cX * If(ck2 = True, minR, 0))
                                'H5.Text =  CsmdDateTime.TotalHours(dSum1aX)
                                'D5.Text = CStr(w5)
                                'H6.Text =  CsmdDateTime.TotalHours(dSum1bX)
                                'D6.Text = CStr(w6)
                                'H7.Text =  CsmdDateTime.TotalHours(dSum1cX)
                                'D7.Text = CStr(w7)

                                dc.Emp_Att_Payment_Prayer_Late_H = CsmdDateTime.TotalHours(dSum2aX)
                                dc.Emp_Att_Payment_Prayer_Late_D = w9
                                dc.Emp_Att_Payment_Prayer_Late_Amount = -(dSum2aX * If(ck3 = True, minR, 0))

                                dc.Emp_Att_Payment_Short_H = CsmdDateTime.TotalHours(dSum3aX)
                                dc.Emp_Att_Payment_Short_D = w10
                                dc.Emp_Att_Payment_Short_Amount = -(dSum3aX * If(ck4 = True, minR, 0))

                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                dc.Emp_Att_Payment_Lunch_Late_H = CsmdDateTime.TotalHours(dSum4aX)
                                dc.Emp_Att_Payment_Lunch_Late_D = w11
                                dc.Emp_Att_Payment_Lunch_Late_Amount = -(dSum4aX * If(ck5 = True, minR, 0))

                                dc.Emp_Att_Payment_Lunch_OverTime_H = CsmdDateTime.TotalHours(Math.Abs(dSum6aX))
                                dc.Emp_Att_Payment_Lunch_OverTime_D = w16
                                dc.Emp_Att_Payment_Lunch_OverTime_Amount = Math.Abs(dSum6aX * If(ck6 = True, minR, 0))

                                dc.Emp_Att_Payment_Private_Late_H = CsmdDateTime.TotalHours(dSum5aX)
                                dc.Emp_Att_Payment_Private_Late_D = w12
                                dc.Emp_Att_Payment_Private_Late_Amount = -(dSum5aX * If(ck7 = True, minR, 0))

                                dc.Emp_Att_Payment_Prayer_Late_D_T = c2
                                dc.Emp_Att_Payment_Short_D_T = c3
                                dc.Emp_Att_Payment_Lunch_Late_D_T = c4
                                dc.Emp_Att_Payment_Private_Late_D_T = c5

                                'Dim R6 As Decimal = Math.Abs(CDec(dc.Emp_Att_Payment_Absent_Amount))
                                Dim R7 As Decimal = Math.Abs(CDec(dc.Emp_Att_Payment_Late_Amount))
                                Dim R8 As Decimal = Math.Abs(CDec(dc.Emp_Att_Payment_Early_Amount))
                                Dim R9 As Decimal = Math.Abs(CDec(dc.Emp_Att_Payment_OverTime_Amount))
                                Dim R10 As Decimal = Math.Abs(CDec(dc.Emp_Att_Payment_Prayer_Late_Amount))
                                Dim R11 As Decimal = Math.Abs(CDec(dc.Emp_Att_Payment_Short_Amount))
                                Dim R12 As Decimal = Math.Abs(CDec(dc.Emp_Att_Payment_Lunch_Late_Amount))
                                Dim R13 As Decimal = Math.Abs(CDec(dc.Emp_Att_Payment_Lunch_OverTime_Amount))
                                Dim R14 As Decimal = Math.Abs(CDec(dc.Emp_Att_Payment_Private_Late_Amount))

                                Dim over As Decimal = R9 + R13
                                Dim mins As Decimal = (R7 + R8) + (R10 + R11) + (R12 + R14) '+ R6

                                Dim salTot As Decimal = (TotAmount + over) - mins

                                dc.Emp_Att_Payment_Amount = salTot
                                dc.Emp_Att_Payment_Beg = Emp_Att_Payment_BegX
                                Dim bn1 As Decimal = CDec(If(dc.Emp_Att_Payment_Bonus IsNot Nothing, dc.Emp_Att_Payment_Bonus, 0))
                                Dim bn2 As Decimal = CDec(If(dc.Emp_Att_Payment_Advance IsNot Nothing, dc.Emp_Att_Payment_Advance, 0))
                                Dim bn3 As Decimal = CDec(If(dc.Emp_Att_Payment_Fine IsNot Nothing, dc.Emp_Att_Payment_Fine, 0))
                                Dim bn6 As Decimal = CDec(If(dc.Emp_Att_Payment_Paid IsNot Nothing, dc.Emp_Att_Payment_Paid, 0))

                                dc.Emp_Att_Payment_Bonus = bn1
                                dc.Emp_Att_Payment_Advance = bn2
                                dc.Emp_Att_Payment_Fine = bn3
                                dc.Emp_Att_Payment_Paid = bn6

                                Dim bnTOT As Decimal = bn1 - (bn2 + bn3)

                                dc.Emp_Att_Payment_Total = (salTot + Emp_Att_Payment_BegX + bnTOT) ' - (dc.Emp_Att_Payment_Advance + dc.Emp_Att_Payment_Fine)
                                Dim bn5 As Decimal = CDec(If(dc.Emp_Att_Payment_Total IsNot Nothing, dc.Emp_Att_Payment_Total, 0))
                                dc.Emp_Att_Payment_Balance = bn5 - bn6

                                'VGridControl1.SetCellValue(rowEmp_Att_Payment_Amount, e.RecordIndex, salTot)


                                db.SaveChanges()
                            Catch ex As Exception
                                Exit Try
                            End Try

                        Else
                            Try
                                Dim dcNew = New Emp_Att_Payment
                                dcNew.Emp_ID = emp.Emp_ID
                                dcNew.User_ID = CsmdVarible.PlazaUserID
                                dcNew.Emp_Att_Payment_Issue_Date = datX.Date

                                DutyOn1X = CDate(CDate(emp.Emp_DutyOn).ToString("HH:mm"))
                                DutyOn2X = CDate(CDate(emp.Emp_DutyOn).ToString("HH:mm"))
                                DutyOffX = CDate(CDate(emp.Emp_Duty_Off).ToString("HH:mm"))

                                dcNew.Emp_Att_Payment_DutyOn = DutyOn1X.ToString("HH:mm")
                                dcNew.Emp_Att_Payment_DutyOff = DutyOffX.ToString("HH:mm")
                                dcNew.Emp_Att_Payment_DutyFriOff = DutyFriX.ToString("HH:mm")

                                duration = CInt(DateDiff(DateInterval.Minute, DutyOn1X, DutyOffX))
                                duration2 = CInt(DateDiff(DateInterval.Minute, DutyOn2X, DutyOffX)) ' Change for rawayat

                                Dim Emp_Att_Payment_From_Date As Date
                                Dim Emp_Att_Payment_To_Date As Date
                                Dim frmD As DateTime = datX
                                Dim dtMin = (From a In db.Emp_Attendence_Device
                                             Where a.Emp_Attendence_Device_Status = True And a.Emp_Bio_Device_Users.Emp_ID = emp.Emp_ID And a.Emp_Attendence_Device_Date.Value.Month = frmD.Month And a.Emp_Attendence_Device_Date.Value.Year = frmD.Year Select a.Emp_Attendence_Device_Date).Min
                                If dtMin IsNot Nothing Then
                                    Emp_Att_Payment_From_Date = CsmdDateTime.FirstDayOfMonth(CDate(dtMin))
                                Else
                                    Emp_Att_Payment_From_Date = CsmdDateTime.FirstDayOfMonth(CDate(Issue_Date.EditValue))
                                End If

                                Dim dtMax = (From a In db.Emp_Attendence_Device
                                             Where a.Emp_Attendence_Device_Status = True And a.Emp_Bio_Device_Users.Emp_ID = emp.Emp_ID And a.Emp_Attendence_Device_Date.Value.Month = frmD.Month And a.Emp_Attendence_Device_Date.Value.Year = frmD.Year Select a.Emp_Attendence_Device_Date).Max
                                If dtMax IsNot Nothing Then
                                    Emp_Att_Payment_To_Date = CDate(dtMax)
                                Else
                                    Emp_Att_Payment_To_Date = CDate(CsmdDateTime.LastDayOfMonth(CDate(Issue_Date.EditValue)))
                                End If

                                Dim fff As DateTime = Emp_Att_Payment_From_Date
                                Dim ggg As DateTime = Emp_Att_Payment_To_Date

                                dcNew.Emp_Att_Payment_From_Date = fff.Date
                                dcNew.Emp_Att_Payment_To_Date = ggg.Date

                                Dim x1 As Double = 0
                                Dim x2 As Double = 0
                                Dim w1 As Double = 0
                                Dim w2 As Double = 0
                                Dim w3 As Double = 0
                                Dim w4 As Double = 0
                                Dim w5 As Double = 0
                                Dim w6 As Double = 0
                                Dim w7 As Double = 0
                                Dim w8 As Double = 0
                                Dim w9 As Double = 0
                                Dim w10 As Double = 0
                                Dim w11 As Double = 0
                                Dim w12 As Double = 0
                                Dim w13 As Double = 0
                                Dim w14 As Double = 0
                                Dim w15 As Double = 0
                                Dim w16 As Double = 0
                                Dim c1 As Double = 0
                                Dim c2 As Double = 0
                                Dim c3 As Double = 0
                                Dim c4 As Double = 0
                                Dim c5 As Double = 0
                                For loopDate As Double = fff.ToOADate To ggg.ToOADate
                                    Dim nn As Integer = 0
                                    dSum4X = 0
                                    Dim thisDate As Date = CDate(DateTime.FromOADate(loopDate) & " " & CsmdDateTime.StartDayTime(datX.Date))
                                    Dim toDate As Date = CDate(thisDate.AddDays(1).Date & " " & CsmdDateTime.EndDayTime(datX.Date))
                                    If thisDate.DayOfWeek = DayOfWeek.Friday Then
                                        w2 += 1
                                    Else
                                        w1 += 1
                                    End If
                                    Dim dt = (From a In db.Emp_Attendence_Device
                                              Where a.Emp_Attendence_Device_Status = True And
                                                  a.Emp_Bio_Device_Users.Emp_ID = emp.Emp_ID And
                                                                      a.Emp_Attendence_Device_DateTime >= thisDate And
                                                                      a.Emp_Attendence_Device_DateTime <= toDate
                                              Select a).ToList
                                    If dt.Count > 0 Then
                                        Dim hhhg As Boolean = False
                                        For Each dts In dt
                                            With dts

                                                Dim datet As DateTime = CDate(CStr(.Emp_Attendence_Device_DateTime).ToString)
                                                If datet.ToString("yyyy/MM/dd HH:mm") >= thisDate.ToString("yyyy/MM/dd HH:mm") And datet.ToString("yyyy/MM/dd HH:mm") <= toDate.ToString("yyyy/MM/dd HH:mm") Then

                                                    Dim val1 As String = .Emp_Attendence_Device_Cal1
                                                    Dim val2 As String = .Emp_Attendence_Device_Cal2
                                                    Dim val3 As String = .Emp_Attendence_Device_Cal3
                                                    Dim val4 As String = .Emp_Attendence_Device_Cal4
                                                    Dim val5 As String = .Emp_Attendence_Device_Cal5

                                                    'If Not val4 = "" And IsNumeric(val4) Then
                                                    '    dSumDutyX += val4
                                                    '    w4 += 1
                                                    'End If

                                                    If Not val3 = "" And IsNumeric(val3) Then
                                                        dSum1X += CInt(val3)
                                                        w4 += 1
                                                    End If
                                                    If Not val2 = "" And IsNumeric(val2) Then
                                                        '
                                                        If .Emp_Bio_Device_Users.Attendence_Status_ID = 1 Then
                                                            dSum1aX += CInt(val2)
                                                            w5 += 1
                                                        End If
                                                        If .Emp_Bio_Device_Users.Attendence_Status_ID = 2 Then
                                                            If CInt(val2) > 0 Then
                                                                dSum1bX += CInt(val2)
                                                                w6 += 1
                                                            Else
                                                                dSum1cX -= CInt(val2)
                                                                w7 += 1
                                                            End If

                                                        End If
                                                    End If
                                                    'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                                    If .Emp_Bio_Device_Users.Attendence_Status_ID = 4 Then
                                                        If Not val1 = "" And IsNumeric(val1) Then
                                                            dSum2X += CInt(val1)
                                                        End If
                                                        If Not val2 = "" And IsNumeric(val2) Then
                                                            dSum2aX += CInt(val2)
                                                            w9 += 1
                                                        End If
                                                        c2 += 1
                                                    End If
                                                    If .Emp_Bio_Device_Users.Attendence_Status_ID = 6 Then
                                                        If Not val1 = "" And IsNumeric(val1) Then
                                                            dSum3X += CInt(val1)
                                                        End If
                                                        If Not val2 = "" And IsNumeric(val2) Then
                                                            dSum3aX += CInt(val2)
                                                            w10 += 1
                                                        End If
                                                        c3 += 1
                                                    End If

                                                    If .Emp_Bio_Device_Users.Attendence_Status_ID = 8 Then
                                                        If hhhg = False Then
                                                            Dim dtm = (From a In db.Emp_Attendence_Device
                                                                       Where a.Emp_Attendence_Device_Status = True And
                                                                           a.Emp_Bio_Device_Users.Emp_ID = emp.Emp_ID And
                                                                      a.Emp_Attendence_Device_DateTime >= thisDate And
                                                                      a.Emp_Attendence_Device_DateTime <= toDate And
                                                                           a.Emp_Bio_Device_Users.Attendence_Status_ID = 8
                                                                       Select a.Emp_Attendence_Device_ID).Max
                                                            If Not IsNothing(dtm) Then
                                                                Dim dtn = (From a In db.Emp_Attendence_Device Where a.Emp_Attendence_Device_Status = True And a.Emp_Attendence_Device_ID = dtm
                                                                           Select a).FirstOrDefault
                                                                If dtn IsNot Nothing Then
                                                                    Dim kop As String = dtn.Emp_Attendence_Device_Cal2
                                                                    If Not kop = "" And IsNumeric(kop) Then
                                                                        If CDbl(kop) > 0 Then
                                                                            w11 += 1
                                                                            dSum4aX += CInt(kop)
                                                                        End If
                                                                        If CDbl(kop) < 0 Then
                                                                            dSum6aX += CInt(kop)
                                                                            w16 += 1
                                                                        End If
                                                                    End If
                                                                End If
                                                            End If
                                                            If Not val1 = "" And IsNumeric(val1) Then
                                                                dSum4X += CInt(val1)
                                                            End If
                                                            hhhg = True
                                                        End If
                                                        c4 += 1

                                                    End If

                                                    If .Emp_Bio_Device_Users.Attendence_Status_ID = 10 Then
                                                        If Not val1 = "" And IsNumeric(val1) Then
                                                            dSum5X += CInt(val1)
                                                        End If
                                                        If Not val2 = "" And IsNumeric(val2) Then
                                                            dSum5aX += CInt(val2)
                                                            w12 += 1
                                                        End If
                                                        c5 += 1
                                                    End If
                                                Else


                                                End If
                                            End With
                                            'Emp_Name.Text = dts.Employee.Emp_Name
                                        Next
                                    Else
                                        If thisDate.DayOfWeek = DayOfWeek.Friday Then
                                            x2 += 1
                                        Else
                                            x1 += 1
                                        End If
                                    End If
                                Next

                                Emp_Att_Payment_Fix = CDec(If(emp.Emp_Salary IsNot Nothing, emp.Emp_Salary, 0))


                                'H1.Text =  CsmdDateTime.TotalHours(CInt(w1 * duration))
                                'H2.Text =  CsmdDateTime.TotalHours(CInt(w2 * duration2))
                                'D1.Text = CStr(w1)
                                'D2.Text = CStr(w2)
                                Tim = CInt((w1 * duration) + (w2 * duration2))
                                dcNew.Emp_Att_Payment_Total_Hours = CsmdDateTime.TotalHours(Tim)
                                Tdm = CDec(w1 + w2)

                                Dim minR As Decimal = Emp_Att_Payment_Fix / Tim
                                dcNew.Emp_Att_Payment_Total_MinRate = minR

                                Dim md As Decimal = CDate(CsmdDateTime.LastDayOfMonth(CDate(Issue_Date.EditValue))).Day
                                dcNew.Emp_Att_Payment_Total_MonthDays = md
                                Dim ofd As Decimal = md - Tdm
                                dcNew.Emp_Att_Payment_Total_OffDays = ofd
                                dcNew.Emp_Att_Payment_Total_Days = Tdm

                                dcNew.Emp_Att_Payment_Total_Salaray_Days = md

                                dcNew.Emp_Att_Payment_Total_DayRate = Emp_Att_Payment_Fix / dcNew.Emp_Att_Payment_Total_Salaray_Days

                                dcNew.Emp_Att_Payment_Fix = Emp_Att_Payment_Fix
                                'Tim = CInt((w1 * duration) + (w2 * duration2))
                                'H3.Text =  CsmdDateTime.TotalHours(Tim)
                                'Tdm = CInt(w1 + w2)
                                'D3.Text = CStr(Tdm)


                                'Dim gg As Integer = CInt((x1 * duration) + (x2 * duration2))
                                'H15.Text =  CsmdDateTime.TotalHours(gg)
                                Abse = CDec(x1 + x2)
                                'H4.Text =  CsmdDateTime.TotalHours(dSum1X)
                                'dcNew.Emp_Att_Payment_InOutDays = CInt(w4)

                                dcNew.Emp_Att_Payment_Absent_D = If(dcNew.Emp_Att_Payment_Add_Days IsNot Nothing, (Tdm - w4) - dcNew.Emp_Att_Payment_Add_Days, Tdm - w4)
                                Dim mkmkmk As Decimal = CDec(CType(dcNew.Emp_Att_Payment_Absent_D, Decimal?) * dcNew.Emp_Att_Payment_Total_DayRate)
                                Dim hhh As Decimal = CDec(ofd * dcNew.Emp_Att_Payment_Total_DayRate)
                                dcNew.Emp_Att_Payment_Absent_Amount = -(mkmkmk) ' CType(-(CType(dc.Emp_Att_Payment_Absent_D, Decimal?) * dc.Emp_Att_Payment_Total_DayRate), Decimal?)


                                dcNew.Emp_Att_Payment_Total_OffDays_Amount = -hhh

                                dcNew.Emp_Att_Payment_InOutDays = CInt(w4)
                                dcNew.Emp_Att_Payment_InOutDays_Amount = CInt(w4) * dcNew.Emp_Att_Payment_Total_DayRate

                                dcNew.Emp_Att_Payment_ExtraDays = 0
                                dcNew.Emp_Att_Payment_ExtraDays_Amount = 0 * dcNew.Emp_Att_Payment_Total_DayRate
                                'sssssssssssss

                                'Dim ExtraDay As Integer = CInt(If(e.Value.ToString = "", 0, e.Value))
                                'Dim AbsDay As Integer = InoutDays + ExtraDay
                                'Dim totDa As Integer = TotDays - AbsDay

                                'If TotDays >= AbsDay Then
                                'VGridControl1.SetCellValue(row6.PropertiesCollection.Item("Emp_Att_Payment_Absent_D"), e.RecordIndex, totDa)

                                'Dim DayRate As Decimal = CInt(VGridControl1.GetCellValue(row31.PropertiesCollection.Item("Cg3"), e.RecordIndex))

                                'Dim sds As Decimal = ExtraDay * DayRate
                                'Dim sas As Decimal = totDa * DayRate
                                Dim TotAmount As Decimal = dcNew.Emp_Att_Payment_ExtraDays_Amount + dcNew.Emp_Att_Payment_InOutDays_Amount

                                dcNew.Emp_Att_Payment_Salaray_Total = TotAmount
                                ''''''''dcNew.Emp_Att_Payment_Absent_D = If(dcNew.Emp_Att_Payment_Add_Days IsNot Nothing, (Tdm - w4) - dcNew.Emp_Att_Payment_Add_Days, Tdm - w4)

                                ''''''''dcNew.Emp_Att_Payment_Absent_Amount = CType(-(CType(dcNew.Emp_Att_Payment_Absent_D, Decimal?) * dcNew.Emp_Att_Payment_Total_DayRate), Decimal?)
                                'Dim gg As Integer = CInt((x1 * duration) + (x2 * duration2))
                                'H15.Text =  CsmdDateTime.TotalHours(gg)
                                'Abse = CInt(x1 + x2)
                                'H4.Text =  CsmdDateTime.TotalHours(dSum1X)
                                'D4.Text = CStr(w4)


                                dcNew.Emp_Att_Payment_Late_H = CsmdDateTime.TotalHours(dSum1aX)
                                dcNew.Emp_Att_Payment_Late_D = w5
                                If dcNew.Emp_Att_Payment_Late Is Nothing Or dcNew.Emp_Att_Payment_Late = 0 Then
                                    dcNew.Emp_Att_Payment_Late = CType(minR, Decimal?)

                                End If
                                'dcnew.Emp_Att_Payment_Late = If(Not isnothing( dcnew.Emp_Att_Payment_Late ), dcnew.Emp_Att_Payment_Late, minR)
                                dcNew.Emp_Att_Payment_Late_Amount = -(dSum1aX * If(ck8 = True, minR, 0))

                                dcNew.Emp_Att_Payment_Early_H = CsmdDateTime.TotalHours(dSum1bX)
                                dcNew.Emp_Att_Payment_Early_D = w6
                                dcNew.Emp_Att_Payment_Early_Amount = -(dSum1bX * If(ck1 = True, minR, 0))


                                dcNew.Emp_Att_Payment_OverTime_H = CsmdDateTime.TotalHours(dSum1cX)
                                dcNew.Emp_Att_Payment_OverTime_D = w7
                                dcNew.Emp_Att_Payment_OverTime_Amount = Math.Abs(dSum1cX * If(ck2 = True, minR, 0))
                                'H5.Text =  CsmdDateTime.TotalHours(dSum1aX)
                                'D5.Text = CStr(w5)
                                'H6.Text =  CsmdDateTime.TotalHours(dSum1bX)
                                'D6.Text = CStr(w6)
                                'H7.Text =  CsmdDateTime.TotalHours(dSum1cX)
                                'D7.Text = CStr(w7)

                                dcNew.Emp_Att_Payment_Prayer_Late_H = CsmdDateTime.TotalHours(dSum2aX)
                                dcNew.Emp_Att_Payment_Prayer_Late_D = w9
                                dcNew.Emp_Att_Payment_Prayer_Late_Amount = -(dSum2aX * If(ck3 = True, minR, 0))

                                dcNew.Emp_Att_Payment_Short_H = CsmdDateTime.TotalHours(dSum3aX)
                                dcNew.Emp_Att_Payment_Short_D = w10
                                dcNew.Emp_Att_Payment_Short_Amount = (dSum3aX * If(ck4 = True, minR, 0))

                                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
                                dcNew.Emp_Att_Payment_Lunch_Late_H = CsmdDateTime.TotalHours(dSum4aX)
                                dcNew.Emp_Att_Payment_Lunch_Late_D = w11
                                dcNew.Emp_Att_Payment_Lunch_Late_Amount = -(dSum4aX * If(ck5 = True, minR, 0))

                                dcNew.Emp_Att_Payment_Lunch_OverTime_H = CsmdDateTime.TotalHours(Math.Abs(dSum6aX))
                                dcNew.Emp_Att_Payment_Lunch_OverTime_D = w16
                                dcNew.Emp_Att_Payment_Lunch_OverTime_Amount = Math.Abs(dSum6aX * If(ck6 = True, minR, 0))

                                dcNew.Emp_Att_Payment_Private_Late_H = CsmdDateTime.TotalHours(dSum5aX)
                                dcNew.Emp_Att_Payment_Private_Late_D = w12
                                dcNew.Emp_Att_Payment_Private_Late_Amount = -(dSum5aX * If(ck7 = True, minR, 0))


                                dcNew.Emp_Att_Payment_Prayer_Late_D_T = c2
                                dcNew.Emp_Att_Payment_Short_D_T = c3
                                dcNew.Emp_Att_Payment_Lunch_Late_D_T = c4
                                dcNew.Emp_Att_Payment_Private_Late_D_T = c5


                                'Dim R6 As Decimal = Math.Abs(CDec(dcNew.Emp_Att_Payment_Absent_Amount))
                                Dim R7 As Decimal = Math.Abs(CDec(dcNew.Emp_Att_Payment_Late_Amount))
                                Dim R8 As Decimal = Math.Abs(CDec(dcNew.Emp_Att_Payment_Early_Amount))
                                Dim R9 As Decimal = Math.Abs(CDec(dcNew.Emp_Att_Payment_OverTime_Amount))
                                Dim R10 As Decimal = Math.Abs(CDec(dcNew.Emp_Att_Payment_Prayer_Late_Amount))
                                Dim R11 As Decimal = Math.Abs(CDec(dcNew.Emp_Att_Payment_Short_Amount))
                                Dim R12 As Decimal = Math.Abs(CDec(dcNew.Emp_Att_Payment_Lunch_Late_Amount))
                                Dim R13 As Decimal = Math.Abs(CDec(dcNew.Emp_Att_Payment_Lunch_OverTime_Amount))
                                Dim R14 As Decimal = Math.Abs(CDec(dcNew.Emp_Att_Payment_Private_Late_Amount))

                                Dim over As Decimal = R9 + R13
                                Dim mins As Decimal = (R7 + R8) + (R10 + R11) + (R12 + R14) '+ R6

                                Dim salTot As Decimal = (TotAmount + over) - mins

                                dcNew.Emp_Att_Payment_Amount = salTot
                                dcNew.Emp_Att_Payment_Beg = Emp_Att_Payment_BegX
                                Dim bn1 As Decimal = CDec(If(dcNew.Emp_Att_Payment_Bonus IsNot Nothing, dcNew.Emp_Att_Payment_Bonus, 0))
                                Dim bn2 As Decimal = CDec(If(dcNew.Emp_Att_Payment_Advance IsNot Nothing, dcNew.Emp_Att_Payment_Advance, 0))
                                Dim bn3 As Decimal = CDec(If(dcNew.Emp_Att_Payment_Fine IsNot Nothing, dcNew.Emp_Att_Payment_Fine, 0))
                                Dim bn6 As Decimal = CDec(If(dcNew.Emp_Att_Payment_Paid IsNot Nothing, dcNew.Emp_Att_Payment_Paid, 0))

                                dcNew.Emp_Att_Payment_Bonus = bn1
                                dcNew.Emp_Att_Payment_Advance = bn2
                                dcNew.Emp_Att_Payment_Fine = bn3
                                dcNew.Emp_Att_Payment_Paid = bn6


                                Dim bnTOT As Decimal = bn1 - (bn2 + bn3)

                                dcNew.Emp_Att_Payment_Total = (salTot + Emp_Att_Payment_BegX + bnTOT) ' - (dcnew.Emp_Att_Payment_Advance + dcnew.Emp_Att_Payment_Fine)
                                Dim bn5 As Decimal = CDec(If(dcNew.Emp_Att_Payment_Total IsNot Nothing, dcNew.Emp_Att_Payment_Total, 0))
                                dcNew.Emp_Att_Payment_Balance = bn5 - bn6
                                'VGridControl1.SetCellValue(rowEmp_Att_Payment_Amount, e.RecordIndex, salTot)
                                db.Emp_Att_Payment.Add(dcNew)
                                db.SaveChanges()
                                SaveUpdate_Att_Setting()
                            Catch ex As Exception
                                'MsgBox("Please set Duty Times of this Employee " & emp.Emp_Name)
                                Exit Try
                            End Try
                        End If

                    End If
                Next
                MsgBox("Selected IDs (" & intList.Count & ") Create Invoices is Successfull")
                ProgressBarControl1.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl1.Update()
                ProgressBarControl2.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl2.Update()
                ProgressBarControl3.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl3.Update()
                LoadEmp(CDate(Issue_Date.EditValue))

                'Load_Payment_Month_Multi(CDate(Issue_Date.EditValue))
            Else
                MsgBox("Please Select Record for Create Invoices", MsgBoxStyle.Critical, "Selection Error")
            End If
        End Using
    End Sub

#Region "Gridview1"


    Private Sub GridView1_DoubleClick(sender As Object, e As EventArgs) Handles GridView1.DoubleClick
        RibbonMiniToolbar2.Show(MousePosition)
    End Sub

    Dim sum As Double = 0
    Dim intr As Integer = 0
    Private Sub GridView1_CustomSummaryCalculate(sender As Object, e As DevExpress.Data.CustomSummaryEventArgs) Handles GridView1.CustomSummaryCalculate
        Try
            Dim view As GridView = TryCast(sender, GridView)

            If e.IsTotalSummary AndAlso (TryCast(e.Item, GridSummaryItem)).FieldName = "Emp_Attendence_Device_Cal1" Then
                Dim item As GridSummaryItem = TryCast(e.Item, GridSummaryItem)
                If item.FieldName = "Emp_Attendence_Device_Cal1" Then
                    Select Case e.SummaryProcess
                        Case CustomSummaryProcess.Start
                            sum = 0
                        Case CustomSummaryProcess.Calculate
                            Dim strr As String = CType(view.GetRowCellValue(e.RowHandle, "Emp_Attendence_Device_Cal1"), String)
                            If Not strr = "" Then
                                If IsNumeric(strr) Then
                                    'If shouldSum Then
                                    sum += CDbl(e.FieldValue)
                                End If
                            End If
                        Case CustomSummaryProcess.Finalize
                            Dim hours As Integer = CInt(sum) \ 60
                            Dim minutes As Integer = CInt(sum - (hours * 60))
                            Dim timeElapsed As String = "PHPL= " & CType(hours, String) & ":" & CType(minutes, String)
                            e.TotalValue = timeElapsed
                    End Select
                End If
            End If
            If e.IsTotalSummary AndAlso (TryCast(e.Item, GridSummaryItem)).FieldName = "Emp_Attendence_Device_Cal2" Then
                Dim item As GridSummaryItem = TryCast(e.Item, GridSummaryItem)
                If item.FieldName = "Emp_Attendence_Device_Cal2" Then
                    Select Case e.SummaryProcess
                        Case CustomSummaryProcess.Start
                            sum = 0
                        Case CustomSummaryProcess.Calculate
                            Dim strr As String = CType(view.GetRowCellValue(e.RowHandle, "Emp_Attendence_Device_Cal2"), String)
                            If Not strr = "" Then
                                If IsNumeric(strr) Then
                                    'If shouldSum Then
                                    sum += CDbl(e.FieldValue)
                                End If
                            End If
                        Case CustomSummaryProcess.Finalize
                            Dim hours As Integer = CInt(sum) \ 60
                            Dim minutes As Integer = CInt(sum - (hours * 60))
                            Dim timeElapsed As String = "Sub= " & CType(hours, String) & ":" & CType(minutes, String)
                            e.TotalValue = timeElapsed
                    End Select
                End If
            End If
            If e.IsTotalSummary AndAlso (TryCast(e.Item, GridSummaryItem)).FieldName = "Emp_Attendence_Device_Cal3" Then
                Dim item As GridSummaryItem = TryCast(e.Item, GridSummaryItem)
                If item.FieldName = "Emp_Attendence_Device_Cal3" Then
                    Select Case e.SummaryProcess
                        Case CustomSummaryProcess.Start
                            sum = 0
                        Case CustomSummaryProcess.Calculate
                            Dim strr As String = CType(view.GetRowCellValue(e.RowHandle, "Emp_Attendence_Device_Cal3"), String)
                            If Not strr = "" Then
                                If IsNumeric(strr) Then
                                    'If shouldSum Then
                                    sum += CDbl(e.FieldValue)
                                End If
                            End If
                        Case CustomSummaryProcess.Finalize
                            Dim hours As Integer = CInt(sum) \ 60
                            Dim minutes As Integer = CInt(sum - (hours * 60))
                            Dim timeElapsed As String = "InOut= " & CType(hours, String) & ":" & CType(minutes, String)
                            e.TotalValue = timeElapsed
                    End Select
                End If
            End If
            If e.IsTotalSummary AndAlso (TryCast(e.Item, GridSummaryItem)).FieldName = "Emp_Attendence_Device_Cal4" Then
                Dim item As GridSummaryItem = TryCast(e.Item, GridSummaryItem)
                If item.FieldName = "Emp_Attendence_Device_Cal4" Then
                    Select Case e.SummaryProcess
                        Case CustomSummaryProcess.Start
                            sum = 0
                        Case CustomSummaryProcess.Calculate
                            Dim strr As String = CType(view.GetRowCellValue(e.RowHandle, "Emp_Attendence_Device_Cal4"), String)
                            If Not strr = "" Then
                                If IsNumeric(strr) Then
                                    'If shouldSum Then
                                    sum += CDbl(e.FieldValue)
                                End If
                            End If
                        Case CustomSummaryProcess.Finalize
                            Dim hours As Integer = CInt(sum) \ 60
                            Dim minutes As Integer = CInt(sum - (hours * 60))
                            Dim timeElapsed As String = "DutyTime= " & CType(hours, String) & ":" & CType(minutes, String)
                            e.TotalValue = timeElapsed
                    End Select
                End If
            End If
        Catch ex As Exception

        End Try

    End Sub
    Private Sub GridView1_RowCellStyle(sender As Object, e As DevExpress.XtraGrid.Views.Grid.RowCellStyleEventArgs) Handles GridView1.RowCellStyle


        If e.Column.FieldName = "Attendence_Status_ID" Then
            Select Case CInt(e.CellValue)
                Case 1 '"RT-Check In"
                    e.Appearance.BackColor = Color.Aqua
                    e.Appearance.BackColor2 = Color.Bisque
                Case 2 '"LT-Check Out"
                    e.Appearance.BackColor = Color.Aqua
                    e.Appearance.BackColor2 = Color.Bisque
                Case 3 '"RI-Prayer A"
                    e.Appearance.BackColor = Color.Lime
                    e.Appearance.BackColor2 = Color.RosyBrown
                Case 4 '"LI-Prayer B"
                    e.Appearance.BackColor = Color.Lime
                    e.Appearance.BackColor2 = Color.RosyBrown
                Case 5 '"RM-Short Leave A"
                    e.Appearance.BackColor = Color.Orchid
                    e.Appearance.BackColor2 = Color.OrangeRed
                Case 6 '"LM-Short Leave B"
                    e.Appearance.BackColor = Color.Orchid
                    e.Appearance.BackColor2 = Color.OrangeRed

                Case 7 '"RR-Lunch A"
                    e.Appearance.BackColor = Color.Yellow
                    e.Appearance.BackColor2 = Color.RosyBrown
                Case 8 '"LR-Lunch B"
                    e.Appearance.BackColor = Color.Yellow
                    e.Appearance.BackColor2 = Color.RosyBrown
                Case 9 '"RP-Private A"
                    e.Appearance.BackColor = Color.Wheat
                    e.Appearance.BackColor2 = Color.Tomato
                Case 10 '"LP-Private B"
                    e.Appearance.BackColor = Color.Tomato
                    e.Appearance.BackColor2 = Color.Wheat
                Case Else
                    e.Appearance.BackColor = Color.Pink
                    e.Appearance.BackColor2 = Color.LightPink
                    e.Appearance.FontStyleDelta = FontStyle.Bold
                    e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
                    e.Appearance.FontSizeDelta = 2
            End Select
        End If
        If e.Column.FieldName = "Emp_Attendence_Device_Duty_On_Off" Then
            Dim val As Integer = CInt(GridView1.GetRowCellValue(e.RowHandle, "Attendence_Status_ID"))
            If Not IsDBNull(e.CellValue) AndAlso Not CStr(e.CellValue) = "" Then
                Select Case val
                    Case 1 '"RT-Check In"
                        e.Appearance.BackColor = Color.Bisque
                        e.Appearance.BackColor2 = Color.Bisque
                    Case 2 '"LT-Check Out"
                        e.Appearance.BackColor = Color.Bisque
                        e.Appearance.BackColor2 = Color.Bisque

                End Select
            End If
        End If
        If e.Column.FieldName = "Emp_Attendence_Device_Time" Then
            Dim val As Integer = CInt(GridView1.GetRowCellValue(e.RowHandle, "Attendence_Status_ID"))
            Select Case val
                Case 1 '"RT-Check In"
                    e.Appearance.BackColor = Color.Bisque
                    e.Appearance.BackColor2 = Color.Aqua
                Case 2 '"LT-Check Out"
                    e.Appearance.BackColor = Color.Bisque
                    e.Appearance.BackColor2 = Color.Aqua
                Case 3 '"RI-Prayer A"
                    e.Appearance.BackColor = Color.RosyBrown
                    e.Appearance.BackColor2 = Color.Lime
                Case 4 '"LI-Prayer B"
                    e.Appearance.BackColor = Color.RosyBrown
                    e.Appearance.BackColor2 = Color.Lime
                Case 5 '"RM-Short Leave A"
                    e.Appearance.BackColor = Color.OrangeRed
                    e.Appearance.BackColor2 = Color.Orchid
                Case 6 '"LM-Short Leave B"
                    e.Appearance.BackColor = Color.OrangeRed
                    e.Appearance.BackColor2 = Color.Orchid

                Case 7 '"RR-Lunch A"
                    e.Appearance.BackColor = Color.RosyBrown
                    e.Appearance.BackColor2 = Color.Yellow
                Case 8 '"LR-Lunch B"
                    e.Appearance.BackColor = Color.RosyBrown
                    e.Appearance.BackColor2 = Color.Yellow
                Case 9 '"RP-Private A"
                    e.Appearance.BackColor = Color.Tomato
                    e.Appearance.BackColor2 = Color.Wheat
                Case 10 '"LP-Private B"
                    e.Appearance.BackColor = Color.Wheat
                    e.Appearance.BackColor2 = Color.Tomato
            End Select
            Dim dis As String = GridView1.GetRowCellDisplayText(e.RowHandle, "Attendence_Status_ID")
            If dis = "Total= " Then
                e.Appearance.BackColor = Color.Pink
                e.Appearance.BackColor2 = Color.LightPink
                e.Appearance.ForeColor = Color.Pink
                e.Appearance.FontStyleDelta = FontStyle.Bold
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
                e.Appearance.FontSizeDelta = 2
            End If
        End If
        If e.Column.FieldName = "Emp_Attendence_Device_Cal2" Then
            Dim val As Integer = CInt(GridView1.GetRowCellValue(e.RowHandle, "Attendence_Status_ID"))
            Select Case val
                Case 1 '"RT-Check In"
                        'e.Appearance.BackColor = Color.Bisque
                        'e.Appearance.BackColor2 = Color.Aqua
                Case 2 '"LT-Check Out"
                    e.Appearance.BackColor = Color.Bisque
                    e.Appearance.BackColor2 = Color.Aqua
                    'Case 3 '"RI-Prayer A"
                    'e.Appearance.BackColor = Color.RosyBrown
                    'e.Appearance.BackColor2 = Color.Lime
                    'Case 4 '"LI-Prayer B"
                    '    e.Appearance.BackColor = Color.RosyBrown
                    '    e.Appearance.BackColor2 = Color.Lime
                    'Case 5 '"RM-Short Leave A"
                    '    'e.Appearance.BackColor = Color.OrangeRed
                    '    'e.Appearance.BackColor2 = Color.Orchid
                    'Case 6 '"LM-Short Leave B"
                    '    e.Appearance.BackColor = Color.OrangeRed
                    '    e.Appearance.BackColor2 = Color.Orchid

                    'Case 7 '"RR-Lunch A"
                    '    'e.Appearance.BackColor = Color.RosyBrown
                    '    'e.Appearance.BackColor2 = Color.Yellow
                    'Case 8 '"LR-Lunch B"
                    '    e.Appearance.BackColor = Color.RosyBrown
                    '    e.Appearance.BackColor2 = Color.Yellow
                    'Case 9 '"RP-Private A"
                    '    'e.Appearance.BackColor = Color.Tomato
                    '    'e.Appearance.BackColor2 = Color.MediumPurple
                    'Case 10 '"LP-Private B"
                    '    e.Appearance.BackColor = Color.MediumPurple
                    '    e.Appearance.BackColor2 = Color.Tomato
                    'Case Else
                    '    e.Appearance.BackColor = Color.Pink
                    '    e.Appearance.BackColor2 = Color.LightPink
            End Select
            Dim dis As String = GridView1.GetRowCellDisplayText(e.RowHandle, "Attendence_Status_ID")
            If dis = "Total= " Then
                e.Appearance.BackColor = Color.Pink
                e.Appearance.BackColor2 = Color.LightPink
                e.Appearance.FontStyleDelta = FontStyle.Bold
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
                e.Appearance.FontSizeDelta = 2
            End If
        End If

        If e.Column.FieldName = "Emp_Attendence_Device_Cal1" Then
            'If e.CellValue IsNot Nothing Then
            '    e.Appearance.BackColor = Color.Lime
            '    e.Appearance.BackColor2 = Color.RosyBrown
            'End If
            Dim val As Integer = CInt(GridView1.GetRowCellValue(e.RowHandle, "Attendence_Status_ID"))
            Select Case val
                Case 1 '"RT-Check In"
                        'e.Appearance.BackColor = Color.Bisque
                        'e.Appearance.BackColor2 = Color.Aqua
                Case 2 '"LT-Check Out"
                        'e.Appearance.BackColor = Color.Bisque
                        'e.Appearance.BackColor2 = Color.Aqua
                Case 3 '"RI-Prayer A"
                        'e.Appearance.BackColor = Color.RosyBrown
                        'e.Appearance.BackColor2 = Color.Lime
                Case 4 '"LI-Prayer B"
                    e.Appearance.BackColor = Color.RosyBrown
                    e.Appearance.BackColor2 = Color.Lime
                Case 5 '"RM-Short Leave A"
                        'e.Appearance.BackColor = Color.OrangeRed
                        'e.Appearance.BackColor2 = Color.Orchid
                Case 6 '"LM-Short Leave B"
                    e.Appearance.BackColor = Color.OrangeRed
                    e.Appearance.BackColor2 = Color.Orchid

                Case 7 '"RR-Lunch A"
                        'e.Appearance.BackColor = Color.RosyBrown
                        'e.Appearance.BackColor2 = Color.Yellow
                Case 8 '"LR-Lunch B"
                    e.Appearance.BackColor = Color.RosyBrown
                    e.Appearance.BackColor2 = Color.Yellow
                Case 9 '"RP-Private A"
                        'e.Appearance.BackColor = Color.Tomato
                        'e.Appearance.BackColor2 = Color.MediumPurple
                Case 10 '"LP-Private B"
                    e.Appearance.BackColor = Color.Tomato
                    e.Appearance.BackColor2 = Color.Wheat
                    'Case Else
                    '    e.Appearance.BackColor = Color.Pink
                    '    e.Appearance.BackColor2 = Color.LightPink
            End Select
            Dim dis As String = GridView1.GetRowCellDisplayText(e.RowHandle, "Attendence_Status_ID")
            If dis = "Total= " Then
                e.Appearance.BackColor = Color.Pink
                e.Appearance.BackColor2 = Color.LightPink
                e.Appearance.FontStyleDelta = FontStyle.Bold
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
                e.Appearance.FontSizeDelta = 2
            End If
        End If
        If e.Column.FieldName = "Emp_Attendence_Device_Cal3" Then
            Dim dis As String = GridView1.GetRowCellDisplayText(e.RowHandle, "Attendence_Status_ID")
            If dis = "Total= " Then
                e.Appearance.BackColor = Color.Pink
                e.Appearance.BackColor2 = Color.LightPink
                e.Appearance.FontStyleDelta = FontStyle.Bold
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
                e.Appearance.FontSizeDelta = 2
            End If
        End If
        If e.Column.FieldName = "Emp_Attendence_Device_Cal4" Then
            Dim val As Integer = CInt(GridView1.GetRowCellValue(e.RowHandle, "Attendence_Status_ID"))
            If Not IsDBNull(e.CellValue) AndAlso Not CStr(e.CellValue) = "" Then
                Select Case val
                    Case 1 '"RT-Check In"
                        e.Appearance.BackColor = Color.Aqua
                        e.Appearance.BackColor2 = Color.Bisque
                    Case 2 '"LT-Check Out"
                        e.Appearance.BackColor = Color.Aqua
                        e.Appearance.BackColor2 = Color.Bisque
                    Case 3 '"RI-Prayer A"
                            'e.Appearance.BackColor = Color.RosyBrown
                            'e.Appearance.BackColor2 = Color.Lime
                    Case 4 '"LI-Prayer B"
                        e.Appearance.BackColor = Color.Lime
                        e.Appearance.BackColor2 = Color.RosyBrown
                    Case 5 '"RM-Short Leave A"
                            'e.Appearance.BackColor = Color.OrangeRed
                            'e.Appearance.BackColor2 = Color.Orchid
                    Case 6 '"LM-Short Leave B"
                        e.Appearance.BackColor = Color.Orchid
                        e.Appearance.BackColor2 = Color.OrangeRed

                    Case 7 '"RR-Lunch A"
                            'e.Appearance.BackColor = Color.RosyBrown
                            'e.Appearance.BackColor2 = Color.Yellow
                    Case 8 '"LR-Lunch B"
                        e.Appearance.BackColor = Color.Yellow
                        e.Appearance.BackColor2 = Color.RosyBrown
                    Case 9 '"RP-Private A"
                            'e.Appearance.BackColor = Color.Tomato
                            'e.Appearance.BackColor2 = Color.MediumPurple
                    Case 10 '"LP-Private B"
                        e.Appearance.BackColor = Color.Wheat
                        e.Appearance.BackColor2 = Color.Tomato
                        'Case Else
                        '    e.Appearance.BackColor = Color.Pink
                        '    e.Appearance.BackColor2 = Color.LightPink
                End Select
            End If
        End If
        If e.Column.FieldName = "Emp_Attendence_Device_Date" Then
            Dim dis As String = GridView1.GetRowCellDisplayText(e.RowHandle, "Attendence_Status_ID")
            If dis = "Total= " Then
                e.Appearance.BackColor = Color.Pink
                e.Appearance.BackColor2 = Color.LightPink
                e.Appearance.FontStyleDelta = FontStyle.Bold
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
                e.Appearance.FontSizeDelta = 2
            End If
        End If
        'If e.Column.FieldName = "Emp_Attendence_Device_Cal4" Then
        '    Dim dis As String = GridView1.GetRowCellDisplayText(e.RowHandle, "Attendence_Status_ID")
        '    If dis = "Total= " Then
        '        e.Appearance.BackColor = Color.Pink
        '        e.Appearance.BackColor2 = Color.LightPink
        '        e.Appearance.FontStyleDelta = FontStyle.Bold
        '    End If
        'End If
        'If e.Column.FieldName = "Emp_Attendence_Device_Cal5" Then
        '    If e.CellValue IsNot Nothing Then
        '        e.Appearance.BackColor = Color.Tomato
        '        e.Appearance.BackColor2 = Color.MediumPurple
        '    End If
        'End If
    End Sub


    Private Sub GridView1_RowClick(sender As Object, e As RowClickEventArgs) Handles GridView1.RowClick
        intr = e.RowHandle
    End Sub
    Private Sub gridView1_SelectionChanged(sender As Object, e As DevExpress.Data.SelectionChangedEventArgs) Handles GridView1.SelectionChanged
        Call ShowSelection()
    End Sub

    Private Sub ShowSelection()
        Try
            Dim RowCount As Integer = GridView1.SelectedRowsCount - 1
            ReDim intList(RowCount)
            For i As Integer = 0 To RowCount
                Dim row As Integer = (GridView1.GetSelectedRows()(i))
                Dim obj As Object = TryCast(GridView1.GetRowCellValue(row, "Emp_Attendence_Device_ID"), Object)
                If obj Is Nothing Then
                    Return
                End If
                intList(i) = CInt(obj)
            Next i
        Catch ex As Exception

        End Try
    End Sub

    Public Sub LoadAtt(Emp As Integer, FromDat As DateTime)
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            'Dim dt = (From a In db.Emp_Attendence_Device Where a.Emp_Attendence_Device_Status = True And a.Emp_Bio_Device_Users.Emp_ID = Emp And a.Emp_Attendence_Device_Date.Value.Month = FromDat.Month And a.Emp_Attendence_Device_Date.Value.Year = FromDat.Year
            '          Order By a.Emp_Bio_Device_Users.Employee.Emp_Name Let gg = CType(a.Emp_Attendence_Device_Date.Value("ddd"), String)
            '          Select New With {a.Emp_Attendence_Device_ID,
            '                           a.Emp_Bio_Device_Users.Emp_ID,
            '                           .Emp_Attendence_Device_Date = CType(a.Emp_Attendence_Device_Date & " - " & gg, String),
            '                           a.Emp_Attendence_Device_Time, a.Emp_Attendence_Device_Duty_On_Off,
            '                           a.Emp_Bio_Device_Users.Attendence_Status_ID,
            '                           a.Emp_Attendence_Device_Cal1,
            '                           a.Emp_Attendence_Device_Cal2,
            '                           a.Emp_Attendence_Device_Cal3,
            '                           a.Emp_Attendence_Device_Cal4,
            '                           a.Emp_Attendence_Device_Cal5})
            'If dt.Count > 0 Then
            '    GridControl1.DataSource = dt.ToList
            '    GridView1.Columns("Emp_Attendence_Device_Date").SortOrder = DevExpress.Data.ColumnSortOrder.Ascending
            '    GridView1.Columns("Emp_Attendence_Device_Time").SortOrder = DevExpress.Data.ColumnSortOrder.Ascending
            '    'GridView1.FocusedRowHandle = (intr)
            'Else
            '    GridControl1.DataSource = Nothing
            'End If

            Dim DBCon2 As New SqlConnection(CsmdCon.ConSqlDB)
            Dim da2 As SqlDataAdapter = New SqlDataAdapter("SELECT [Emp_Attendence_Device_ID]
      ,[Emp_Attendence_Device_DateTime]
	  ,[Emp_Attendence_Device_DateTime]
      ,[Emp_Attendence_Device_Duty_On_Off]
       ,Emp_Bio_Device_Users.Attendence_Status_ID
      ,Convert(nvarchar(50),[Emp_Attendence_Device_Date]) +'-'+ Convert(nvarchar(50),DATENAME(dw,[Emp_Attendence_Device_DateTime])) as DateDayofWeek
	  ,[Emp_Attendence_Device_Date]
      ,[Emp_Attendence_Device_Time]
      ,[Emp_Attendence_Device_Cal1]
      ,[Emp_Attendence_Device_Cal2]
      ,[Emp_Attendence_Device_Cal3]
      ,[Emp_Attendence_Device_Cal4]
      ,[Emp_Attendence_Device_Cal5]
      ,[Emp_Attendence_Device_Cal6]
      ,[Emp_Attendence_Device_Cal7]
      ,[Emp_Attendence_Device_Status]
	  ,Emp_Bio_Device_Users.Emp_ID
  FROM [dbo].[Emp_Attendence_Device]
  inner join Emp_Bio_Device_Users  on Emp_Bio_Device_Users.Emp_Bio_Device_Users_UserID  = Emp_Attendence_Device .Emp_Bio_Device_Users_UserID 
  inner join Employees on Employees.Emp_ID = Emp_Bio_Device_Users.Emp_ID  
  where Employees.Emp_Status ='true' and Emp_Attendence_Device_Status = 'true' and Emp_Bio_Device_Users.Emp_ID = " & Emp & " and Emp_Attendence_Device_Date like '%" & CDate(Issue_Date.EditValue.ToString).Date.ToString("yyyy-MM") & "%'", DBCon2)
            'CDate(Dtp1.EditValue.ToString).Date.ToString("yyyy/MM/dd")
            Dim ds2 As New DataSet()
            da2.Fill(ds2)
            If ds2.Tables(0).Rows.Count > 0 Then
                GridControl1.DataSource = ds2.Tables(0)
                GridView1.Columns("DateDayofWeek").SortOrder = DevExpress.Data.ColumnSortOrder.Ascending
                GridView1.Columns("Emp_Attendence_Device_Time").SortOrder = DevExpress.Data.ColumnSortOrder.Ascending
            Else
                GridControl1.DataSource = Nothing
            End If
        End Using
    End Sub
#End Region
#Region "Gridview2"

    Private Sub GridView2_DoubleClick(sender As Object, e As EventArgs) Handles GridView2.DoubleClick

        GridView2.ClearSelection()
        GridView2.SelectRow(GridView2.FocusedRowHandle)

        Dim OnT As String = CStr(GridView2.GetFocusedRowCellValue("On"))
        Dim A1T As String = CStr(GridView2.GetFocusedRowCellValue("A1"))

        'RibbonMiniToolbar1.Show(MousePosition)

        CsmdVarible.intEmpID = CInt(GridView2.GetFocusedRowCellValue("ID"))

        LoadAtt(CsmdVarible.intEmpID, CDate(Issue_Date.EditValue))
        Load_Payment_Month_Single(CsmdVarible.intEmpID, CDate(Issue_Date.EditValue))
        RibbonMiniToolbar1.Show(MousePosition)


    End Sub
    Private Sub GridView2_MouseDown(sender As Object, e As MouseEventArgs) Handles GridView2.MouseDown
        'If e.Button = MouseButtons.Right Then
        '    RibbonMiniToolbar1.Show(MousePosition)
        'End If
    End Sub
    Private Sub GridView2_RowCellStyle(sender As Object, e As RowCellStyleEventArgs) Handles GridView2.RowCellStyle
        If e.Column.FieldName = "On" Or e.Column.FieldName = "Off" Then
            If e.CellValue Is Nothing Then
                e.Appearance.BackColor = Color.Red
            End If
        End If
        If e.Column.FieldName = "A1" Then
            If CInt(e.CellValue.ToString) = 0 Or e.CellValue Is Nothing Then
                e.Appearance.BackColor = Color.Red
            End If
        End If
        If e.Column.FieldName = "A3" Then
            If e.CellValue Is Nothing Then
                e.Appearance.BackColor = Color.Red
            End If
        End If
    End Sub

    Private Sub GridView2_RowClick(sender As Object, e As RowClickEventArgs) Handles GridView2.RowClick
        'Dim IDs As Integer = GridView2.GetFocusedRowCellValue("ID")
        'EmpIDs =
        Dim OnT As String = CStr(GridView2.GetFocusedRowCellValue("On"))
        Dim A1T As String = CStr(GridView2.GetFocusedRowCellValue("A1"))

        'RibbonMiniToolbar1.Show(MousePosition)

        CsmdVarible.intEmpID = CInt(GridView2.GetFocusedRowCellValue("ID"))

        LoadAtt(CsmdVarible.intEmpID, CDate(Issue_Date.EditValue))
        Load_Payment_Month_Single(CsmdVarible.intEmpID, CDate(Issue_Date.EditValue))

    End Sub

    Private Sub GridView2_CustomDrawCell(sender As Object, e As RowCellCustomDrawEventArgs) Handles GridView2.CustomDrawCell
        If e.Column.FieldName = "A1" Then
            If CInt(e.CellValue) = 0 Then
                e.DisplayText = "Empty"
            End If
        End If
    End Sub

    Private Sub GridView2_SelectionChanged(sender As Object, e As SelectionChangedEventArgs) Handles GridView2.SelectionChanged
        ShowSelectionAtt()
    End Sub
    Dim intList() As Integer
    Dim intLists() As String
    Dim intListRow As List(Of Integer) = New List(Of Integer)
    'Dim intListsX() As String
    Dim intListRows As List(Of Integer) = New List(Of Integer)
    Private Sub ShowSelectionAtt()
        'Try
        Dim RowCount As Integer = GridView2.SelectedRowsCount - 1
        ReDim intList(RowCount)
        ReDim intLists(RowCount)
        'ReDim intListRow(RowCount)
        intListRow.Clear()
        For i As Integer = 0 To RowCount
            Dim row As Integer = (GridView2.GetSelectedRows()(i))
            intListRow.Add(row)
            Dim obj As Object = TryCast(GridView2.GetRowCellValue(row, "ID"), Object)
            Dim objs As Object = TryCast(GridView2.GetRowCellValue(row, "Emp_Name"), Object)
            'Dim objsx As Object = TryCast(GridView2.GetRowCellValue(row, "Sn1"), Object)
            If obj Is Nothing Then
                Return
            End If
            If objs Is Nothing Then
                Return
            End If
            'If objsx Is Nothing Then
            '    Return
            'End If
            intList(i) = CInt(obj)
            intLists(i) = objs.ToString
            'intListsX(i) = objsx.ToString
        Next i
        If intListRow.Count > 0 Then
            BarButtonItem3.Enabled = True
            b_Delete.Enabled = True
            b_Import.Enabled = True
            b_Update.Enabled = True
            b_Create.Enabled = True
            SimpleButton1.Enabled = True
        Else
            BarButtonItem3.Enabled = False
            b_Delete.Enabled = False
            b_Import.Enabled = False
            b_Update.Enabled = False
            b_Create.Enabled = False
            SimpleButton1.Enabled = False
        End If
        'Catch ex As Exception

        'End Try
    End Sub
    Private Sub ShowSelectionAtt00000000()
        Try
            intListRows.Clear()
            For i As Integer = 0 To intListRow.Count - 1
                intListRows.Add(intListRow.Item(i))
            Next
            'Dim RowCount As Integer = GridView2.SelectedRowsCount - 1
            'ReDim intList(RowCount)
            'ReDim intLists(RowCount)
            'ReDim intListsX(RowCount)

            For i As Integer = 0 To intListRows.Count - 1
                'Dim row As Integer = (GridView2.GetSelectedRows()(i))
                GridView2.SelectRow(intListRows.Item(i))
                'Dim obj As Object = TryCast(GridView2.GetRowCellValue(row, "ID"), Object)
                'If obj Is Nothing Then
                '    Return
                'End If
                'intList(i) = CInt(obj)
            Next i
            If intListRows.Count > 0 Then
                CsmdVarible.intEmpID = CInt(GridView2.GetRowCellValue(intListRows.Item(0), "ID"))

                LoadAtt(CsmdVarible.intEmpID, CDate(Issue_Date.EditValue))
                Load_Payment_Month_Single(CsmdVarible.intEmpID, CDate(Issue_Date.EditValue))
            End If
        Catch ex As Exception

        End Try
    End Sub

#End Region
#Region "VGridControl1"
    Private Sub VGridControl1_DoubleClick(sender As Object, e As EventArgs) Handles VGridControl1.DoubleClick
        'MsgBox(rowEmp_Att_Payment_ID.Properties.Value.ToString)
        PayID = CInt(rowEmp_Att_Payment_ID.Properties.Value)
        RibbonMiniToolbar3.Show(MousePosition)
    End Sub
    Private Sub VGridControl1_CellValueChanged(sender As Object, e As DevExpress.XtraVerticalGrid.Events.CellValueChangedEventArgs) Handles VGridControl1.CellValueChanged
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim ID As Integer = CInt(VGridControl1.GetCellValue(rowEmp_Att_Payment_ID, e.RecordIndex))
            Dim Salar As Decimal = CInt(VGridControl1.GetCellValue(row32.PropertiesCollection.Item("Ch2"), e.RecordIndex))
            If e.Row Is row31 Then
                If e.CellIndex = 1 Then
                    Dim InOutAmt As Integer = CInt(VGridControl1.GetCellValue(row30.PropertiesCollection.Item("Cf4"), e.RecordIndex))
                    'Dim TotDays As Integer = CInt(VGridControl1.GetCellValue(row5.PropertiesCollection.Item("Emp_Att_Payment_Total_Days"), e.RecordIndex))
                    'Dim InoutDays As Integer = CInt(VGridControl1.GetCellValue(row5.PropertiesCollection.Item("Emp_Att_Payment_InOutDays"), e.RecordIndex))
                    Dim ExtraDay As Integer = CInt(If(e.Value.ToString = "", 0, e.Value))
                    'Dim AbsDay As Integer = InoutDays + ExtraDay
                    'Dim totDa As Integer = TotDays - AbsDay

                    'If TotDays >= AbsDay Then
                    'VGridControl1.SetCellValue(row6.PropertiesCollection.Item("Emp_Att_Payment_Absent_D"), e.RecordIndex, totDa)

                    Dim DayRate As Decimal = CInt(VGridControl1.GetCellValue(row31.PropertiesCollection.Item("Cg3"), e.RecordIndex))

                    Dim sds As Decimal = ExtraDay * DayRate
                    'Dim sas As Decimal = totDa * DayRate
                    Dim TotAmount As Decimal = sds + InOutAmt

                    VGridControl1.SetCellValue(row31.PropertiesCollection.Item("Cg4"), e.RecordIndex, sds)
                    VGridControl1.SetCellValue(row32.PropertiesCollection.Item("Ch2"), e.RecordIndex, TotAmount)


                    Dim R7 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row7.PropertiesCollection.Item("Emp_Att_Payment_Late_Amount"), e.RecordIndex)))
                    Dim R8 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row8.PropertiesCollection.Item("Emp_Att_Payment_Early_Amount"), e.RecordIndex)))
                    Dim R9 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row9.PropertiesCollection.Item("Emp_Att_Payment_OverTime_Amount"), e.RecordIndex)))
                    Dim R10 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row10.PropertiesCollection.Item("Emp_Att_Payment_Prayer_Late_Amount"), e.RecordIndex)))
                    Dim R11 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row11.PropertiesCollection.Item("Emp_Att_Payment_Short_Amount"), e.RecordIndex)))
                    Dim R12 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row12.PropertiesCollection.Item("Emp_Att_Payment_Lunch_Late_Amount"), e.RecordIndex)))
                    Dim R13 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row13.PropertiesCollection.Item("Emp_Att_Payment_Lunch_OverTime_Amount"), e.RecordIndex)))
                    Dim R14 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row14.PropertiesCollection.Item("Emp_Att_Payment_Private_Late_Amount"), e.RecordIndex)))

                    Dim over As Decimal = R9 + R13
                    Dim mins As Decimal = (R7 + R8) + (R10 + R11) + (R12 + R14)

                    Dim salTot As Decimal = (TotAmount + over) - mins



                    VGridControl1.SetCellValue(row4.PropertiesCollection.Item("Emp_Att_Payment_Amount"), e.RecordIndex, salTot)

                    Dim P1 As Decimal = CDec(VGridControl1.GetCellValue(row15.PropertiesCollection.Item("Emp_Att_Payment_Beg"), e.RecordIndex))
                    Dim P3 As Decimal = CDec(VGridControl1.GetCellValue(row16.PropertiesCollection.Item("Emp_Att_Payment_Advance"), e.RecordIndex))
                    Dim P4 As Decimal = CDec(VGridControl1.GetCellValue(row17.PropertiesCollection.Item("Emp_Att_Payment_Fine"), e.RecordIndex))
                    Dim P2 As Decimal = CDec(VGridControl1.GetCellValue(row18.PropertiesCollection.Item("Emp_Att_Payment_Bonus"), e.RecordIndex))

                    Dim P5 As Decimal = CDec(VGridControl1.GetCellValue(row20.PropertiesCollection.Item("Emp_Att_Payment_Paid"), e.RecordIndex))

                    Dim pTOT As Decimal = salTot + (P1 + P2) - (P3 + P4)
                    VGridControl1.SetCellValue(row19.PropertiesCollection.Item("Emp_Att_Payment_Total"), e.RecordIndex, pTOT)

                    VGridControl1.SetCellValue(row21.PropertiesCollection.Item("Emp_Att_Payment_Balance"), e.RecordIndex, pTOT - P5)

                    Dim dts = (From a In db.Emp_Att_Payment Where a.Emp_Att_Payment_ID = ID Select a).FirstOrDefault
                    If dts IsNot Nothing Then
                        'dts.Emp_Att_Payment_Add_Days = ExtraDay
                        'dts.Emp_Att_Payment_Absent_D = totDa
                        'dts.Emp_Att_Payment_Absent_Amount = -TotAmount
                        dts.Emp_Att_Payment_ExtraDays = ExtraDay
                        dts.Emp_Att_Payment_ExtraDays_Amount = sds
                        dts.Emp_Att_Payment_Salaray_Total = TotAmount
                        dts.Emp_Att_Payment_Amount = salTot
                        dts.Emp_Att_Payment_Total = pTOT
                        dts.Emp_Att_Payment_Balance = pTOT - P5
                        db.SaveChanges()
                    End If

                    LoadEmp(CDate(Issue_Date.EditValue))

                    'Else
                    '    MsgBox("Not Allowed")
                    '    VGridControl1.SetCellValue(row6.PropertiesCollection.Item("Emp_Att_Payment_Add_Days"), e.RecordIndex, 0)
                    'End If

                End If

            End If
            If e.Row Is row7 Then

                If e.CellIndex = 4 Then

                    Dim LateDay As String = CStr(VGridControl1.GetCellValue(row7.PropertiesCollection.Item("Emp_Att_Payment_Late_H"), e.RecordIndex))


                    Dim kl As Integer = CInt(LateDay.Split(CType(":", Char()))(0)) * 60 + CInt(LateDay.Split(CType(":", Char()))(1))

                    Dim MinRate As Decimal = CDec(If(e.Value.ToString = "", 0, e.Value))

                    Dim LateAmount As Decimal = kl * MinRate


                    VGridControl1.SetCellValue(row7.PropertiesCollection.Item(5), e.RecordIndex, -LateAmount)


                    'Dim R6 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row6.PropertiesCollection.Item("Emp_Att_Payment_Absent_Amount"), e.RecordIndex)))
                    Dim R7 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row7.PropertiesCollection.Item("Emp_Att_Payment_Late_Amount"), e.RecordIndex)))
                    Dim R8 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row8.PropertiesCollection.Item("Emp_Att_Payment_Early_Amount"), e.RecordIndex)))
                    Dim R9 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row9.PropertiesCollection.Item("Emp_Att_Payment_OverTime_Amount"), e.RecordIndex)))
                    Dim R10 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row10.PropertiesCollection.Item("Emp_Att_Payment_Prayer_Late_Amount"), e.RecordIndex)))
                    Dim R11 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row11.PropertiesCollection.Item("Emp_Att_Payment_Short_Amount"), e.RecordIndex)))
                    Dim R12 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row12.PropertiesCollection.Item("Emp_Att_Payment_Lunch_Late_Amount"), e.RecordIndex)))
                    Dim R13 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row13.PropertiesCollection.Item("Emp_Att_Payment_Lunch_OverTime_Amount"), e.RecordIndex)))
                    Dim R14 As Decimal = Math.Abs(CInt(VGridControl1.GetCellValue(row14.PropertiesCollection.Item("Emp_Att_Payment_Private_Late_Amount"), e.RecordIndex)))

                    Dim over As Decimal = R9 + R13
                    Dim mins As Decimal = (R7 + R8) + (R10 + R11) + (R12 + R14) '+ R6

                    Dim salTot As Decimal = (Salar + over) - mins


                    VGridControl1.SetCellValue(row4.PropertiesCollection.Item("Emp_Att_Payment_Amount"), e.RecordIndex, salTot)

                    Dim P1 As Decimal = CDec(VGridControl1.GetCellValue(row15.PropertiesCollection.Item("Emp_Att_Payment_Beg"), e.RecordIndex))
                    Dim P3 As Decimal = CDec(VGridControl1.GetCellValue(row16.PropertiesCollection.Item("Emp_Att_Payment_Advance"), e.RecordIndex))
                    Dim P4 As Decimal = CDec(VGridControl1.GetCellValue(row17.PropertiesCollection.Item("Emp_Att_Payment_Fine"), e.RecordIndex))
                    Dim P2 As Decimal = CDec(VGridControl1.GetCellValue(row18.PropertiesCollection.Item("Emp_Att_Payment_Bonus"), e.RecordIndex))

                    Dim P5 As Decimal = CDec(VGridControl1.GetCellValue(row20.PropertiesCollection.Item("Emp_Att_Payment_Paid"), e.RecordIndex))

                    Dim pTOT As Decimal = salTot + (P1 + P2) - (P3 + P4)
                    VGridControl1.SetCellValue(row19.PropertiesCollection.Item("Emp_Att_Payment_Total"), e.RecordIndex, pTOT)

                    VGridControl1.SetCellValue(row21.PropertiesCollection.Item("Emp_Att_Payment_Balance"), e.RecordIndex, pTOT - P5)

                    Dim dts = (From a In db.Emp_Att_Payment Where a.Emp_Att_Payment_ID = ID Select a).FirstOrDefault
                    If dts IsNot Nothing Then
                        dts.Emp_Att_Payment_Late = MinRate
                        dts.Emp_Att_Payment_Late_Amount = -LateAmount
                        dts.Emp_Att_Payment_Amount = salTot
                        dts.Emp_Att_Payment_Total = pTOT
                        dts.Emp_Att_Payment_Balance = pTOT - P5
                        db.SaveChanges()
                    End If
                    LoadEmp(CDate(Issue_Date.EditValue))
                End If
            End If
            If e.Row Is row16 Then

                If e.CellIndex = 1 Then
                    Dim Advanced As Decimal = CDec(If(e.Value.ToString = "", 0, e.Value))
                    'VGridControl1.SetCellValue(row4.PropertiesCollection.Item("Emp_Att_Payment_Amount"), e.RecordIndex, salTot)

                    Dim P0 As Decimal = CInt(VGridControl1.GetCellValue(row4.PropertiesCollection.Item("Emp_Att_Payment_Amount"), e.RecordIndex))
                    Dim P1 As Decimal = CInt(VGridControl1.GetCellValue(row15.PropertiesCollection.Item("Emp_Att_Payment_Beg"), e.RecordIndex))
                    'Dim P3 As Decimal = Advanced ' CInt(VGridControl1.GetCellValue(row16.PropertiesCollection.Item("Emp_Att_Payment_Advance"), e.RecordIndex))
                    Dim P4 As Decimal = CInt(VGridControl1.GetCellValue(row17.PropertiesCollection.Item("Emp_Att_Payment_Fine"), e.RecordIndex))
                    Dim P2 As Decimal = CInt(VGridControl1.GetCellValue(row18.PropertiesCollection.Item("Emp_Att_Payment_Bonus"), e.RecordIndex))

                    Dim P5 As Decimal = CInt(VGridControl1.GetCellValue(row20.PropertiesCollection.Item("Emp_Att_Payment_Paid"), e.RecordIndex))

                    Dim pTOT As Decimal = P0 + (P1 + P2) - (Advanced + P4)
                    VGridControl1.SetCellValue(row19.PropertiesCollection.Item("Emp_Att_Payment_Total"), e.RecordIndex, pTOT)

                    VGridControl1.SetCellValue(row21.PropertiesCollection.Item("Emp_Att_Payment_Balance"), e.RecordIndex, pTOT - P5)

                    Dim dts = (From a In db.Emp_Att_Payment Where a.Emp_Att_Payment_ID = ID Select a).FirstOrDefault
                    If dts IsNot Nothing Then
                        dts.Emp_Att_Payment_Advance = Advanced
                        dts.Emp_Att_Payment_Total = pTOT
                        dts.Emp_Att_Payment_Balance = pTOT - P5
                        db.SaveChanges()
                    End If
                    LoadEmp(CDate(Issue_Date.EditValue))
                End If

            End If
            If e.Row Is row17 Then

                If e.CellIndex = 1 Then
                    Dim Fined As Decimal = CDec(If(e.Value.ToString = "", 0, e.Value))
                    'VGridControl1.SetCellValue(row4.PropertiesCollection.Item("Emp_Att_Payment_Amount"), e.RecordIndex, salTot)

                    Dim P0 As Decimal = CDec(VGridControl1.GetCellValue(row4.PropertiesCollection.Item("Emp_Att_Payment_Amount"), e.RecordIndex))
                    Dim P1 As Decimal = CDec(VGridControl1.GetCellValue(row15.PropertiesCollection.Item("Emp_Att_Payment_Beg"), e.RecordIndex))
                    Dim P3 As Decimal = CDec(VGridControl1.GetCellValue(row16.PropertiesCollection.Item("Emp_Att_Payment_Advance"), e.RecordIndex))
                    'Dim P4 As Decimal = CInt(VGridControl1.GetCellValue(row17.PropertiesCollection.Item("Emp_Att_Payment_Fine"), e.RecordIndex))
                    Dim P2 As Decimal = CDec(VGridControl1.GetCellValue(row18.PropertiesCollection.Item("Emp_Att_Payment_Bonus"), e.RecordIndex))

                    Dim P5 As Decimal = CDec(VGridControl1.GetCellValue(row20.PropertiesCollection.Item("Emp_Att_Payment_Paid"), e.RecordIndex))

                    Dim pTOT As Decimal = P0 + (P1 + P2) - (P3 + Fined)
                    VGridControl1.SetCellValue(row19.PropertiesCollection.Item("Emp_Att_Payment_Total"), e.RecordIndex, pTOT)

                    VGridControl1.SetCellValue(row21.PropertiesCollection.Item("Emp_Att_Payment_Balance"), e.RecordIndex, pTOT - P5)

                    Dim dts = (From a In db.Emp_Att_Payment Where a.Emp_Att_Payment_ID = ID Select a).FirstOrDefault
                    If dts IsNot Nothing Then
                        dts.Emp_Att_Payment_Fine = Fined
                        dts.Emp_Att_Payment_Total = pTOT
                        dts.Emp_Att_Payment_Balance = pTOT - P5
                        db.SaveChanges()
                    End If
                    LoadEmp(CDate(Issue_Date.EditValue))
                End If

            End If
            If e.Row Is row18 Then

                If e.CellIndex = 1 Then
                    Dim Bonused As Decimal = CDec(If(e.Value.ToString = "", 0, e.Value))
                    'VGridControl1.SetCellValue(row4.PropertiesCollection.Item("Emp_Att_Payment_Amount"), e.RecordIndex, salTot)

                    Dim P0 As Decimal = CDec(VGridControl1.GetCellValue(row4.PropertiesCollection.Item("Emp_Att_Payment_Amount"), e.RecordIndex))
                    Dim P1 As Decimal = CDec(VGridControl1.GetCellValue(row15.PropertiesCollection.Item("Emp_Att_Payment_Beg"), e.RecordIndex))
                    Dim P3 As Decimal = CDec(VGridControl1.GetCellValue(row16.PropertiesCollection.Item("Emp_Att_Payment_Advance"), e.RecordIndex))
                    Dim P4 As Decimal = CDec(VGridControl1.GetCellValue(row17.PropertiesCollection.Item("Emp_Att_Payment_Fine"), e.RecordIndex))
                    'Dim P2 As Decimal = CInt(VGridControl1.GetCellValue(row18.PropertiesCollection.Item("Emp_Att_Payment_Bonus"), e.RecordIndex))

                    Dim P5 As Decimal = CDec(VGridControl1.GetCellValue(row20.PropertiesCollection.Item("Emp_Att_Payment_Paid"), e.RecordIndex))

                    Dim pTOT As Decimal = P0 + (P1 + Bonused) - (P3 + P4)
                    VGridControl1.SetCellValue(row19.PropertiesCollection.Item("Emp_Att_Payment_Total"), e.RecordIndex, pTOT)

                    VGridControl1.SetCellValue(row21.PropertiesCollection.Item("Emp_Att_Payment_Balance"), e.RecordIndex, pTOT - P5)

                    Dim dts = (From a In db.Emp_Att_Payment Where a.Emp_Att_Payment_ID = ID Select a).FirstOrDefault
                    If dts IsNot Nothing Then
                        dts.Emp_Att_Payment_Bonus = Bonused
                        dts.Emp_Att_Payment_Total = pTOT
                        dts.Emp_Att_Payment_Balance = pTOT - P5
                        db.SaveChanges()
                    End If
                    LoadEmp(CDate(Issue_Date.EditValue))
                End If

            End If
            If e.Row Is row20 Then

                If e.CellIndex = 3 Then
                    Dim cASHx As Decimal = CDec(VGridControl1.GetCellValue(row20.PropertiesCollection.Item("ccA2"), e.RecordIndex))

                    Dim Paided As Decimal = CDec(If(e.Value.ToString = "", 0, e.Value))

                    If cASHx >= Paided Then
                        Dim P2 As Decimal = CDec(VGridControl1.GetCellValue(row19.PropertiesCollection.Item("Emp_Att_Payment_Total"), e.RecordIndex))
                        VGridControl1.SetCellValue(row21.PropertiesCollection.Item("Emp_Att_Payment_Balance"), e.RecordIndex, P2 - Paided)
                        Dim dts = (From a In db.Emp_Att_Payment Where a.Emp_Att_Payment_ID = ID Select a).FirstOrDefault
                        If dts IsNot Nothing Then
                            dts.Emp_Att_Payment_Paid = Paided
                            dts.Emp_Att_Payment_Balance = P2 - Paided
                            db.SaveChanges()
                        End If
                        LoadEmp(CDate(Issue_Date.EditValue))
                    Else
                        MsgBox("Please add CASH in Cash Register")
                    End If
                End If
            End If

            Load_Payment_Month_Single(CsmdVarible.intEmpID, CDate(Issue_Date.EditValue))
        End Using

    End Sub


    Private Sub VGridControl1_RecordCellStyle(sender As Object, e As GetCustomRowCellStyleEventArgs) Handles VGridControl1.RecordCellStyle

        If e.Row Is row1 Or e.Row Is row3 Or e.Row Is row25 Or e.Row Is row22 Or e.Row Is row23 Or e.Row Is row Then
            e.Appearance.BackColor = UserLookAndFeel.Default.SkinMaskColor
            e.Appearance.BackColor2 = Color.White
            e.Appearance.GradientMode = Drawing2D.LinearGradientMode.Vertical
            e.Appearance.ForeColor = Color.Black
            e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Underline)
            e.Appearance.TextOptions.HAlignment = HorzAlignment.Center
            e.Appearance.TextOptions.VAlignment = VertAlignment.Center
        End If

        If e.Row Is row26 Or e.Row Is row24 Or e.Row Is row2 Then
            e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Regular)
            e.Appearance.TextOptions.HAlignment = HorzAlignment.Center
            e.Appearance.TextOptions.VAlignment = VertAlignment.Center
        End If

        If e.Row Is row5 Or e.Row Is row7 Or e.Row Is row8 Or e.Row Is row9 Or e.Row Is row10 Or e.Row Is row11 Or e.Row Is row12 Or e.Row Is row13 Or e.Row Is row14 Then
            If e.CellIndex = 0 Then
                e.Appearance.BackColor = UserLookAndFeel.Default.SkinMaskColor
                e.Appearance.BackColor2 = Color.White
                e.Appearance.GradientMode = Drawing2D.LinearGradientMode.Horizontal
                e.Appearance.ForeColor = Color.Black
                e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Regular)
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Near

            End If
        End If
        If e.Row Is row8 Or e.Row Is row9 Or e.Row Is row10 Or e.Row Is row11 Or e.Row Is row12 Or e.Row Is row13 Or e.Row Is row14 Then
            If e.CellIndex = 1 Then
                e.Appearance.BackColor2 = UserLookAndFeel.Default.SkinMaskColor
                e.Appearance.BackColor = Color.White
                e.Appearance.GradientMode = Drawing2D.LinearGradientMode.Horizontal
                e.Appearance.ForeColor = Color.Black
                e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Regular)
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Near

            End If
        End If

        If e.Row Is row4 Or e.Row Is row15 Or e.Row Is row16 Or e.Row Is row17 Or e.Row Is row18 Or e.Row Is row19 Or e.Row Is row20 Or e.Row Is row21 Then
            If e.CellIndex = 0 Then
                e.Appearance.BackColor = UserLookAndFeel.Default.SkinMaskColor
                e.Appearance.BackColor2 = Color.White
                e.Appearance.GradientMode = Drawing2D.LinearGradientMode.Horizontal
                e.Appearance.ForeColor = Color.Black
                e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Regular)
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
            End If
        End If

        If e.Row Is row4 Or e.Row Is row32 Then
            If e.CellIndex = 0 Then
                e.Appearance.BackColor = UserLookAndFeel.Default.SkinMaskColor
                e.Appearance.BackColor2 = Color.White
                e.Appearance.GradientMode = Drawing2D.LinearGradientMode.Horizontal
                e.Appearance.ForeColor = Color.Black
                e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Regular)
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
            End If
            If e.CellIndex = 1 Then
                e.Appearance.BackColor = Color.Black
                e.Appearance.BackColor2 = Color.White
                e.Appearance.GradientMode = Drawing2D.LinearGradientMode.ForwardDiagonal
                e.Appearance.ForeColor = Color.White
                e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Bold)
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
            End If
        End If

        If e.Row Is row16 Or e.Row Is row17 Or e.Row Is row18 Then
            If e.CellIndex = 1 Then
                e.Appearance.BackColor = Color.Pink
                e.Appearance.BackColor2 = Color.White
                e.Appearance.GradientMode = Drawing2D.LinearGradientMode.ForwardDiagonal
                e.Appearance.ForeColor = Color.Black
                e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Regular)
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
            End If
        End If
        If e.Row Is row20 Then
            If e.CellIndex = 3 Then
                e.Appearance.BackColor = Color.Pink
                e.Appearance.BackColor2 = Color.White
                e.Appearance.GradientMode = Drawing2D.LinearGradientMode.ForwardDiagonal
                e.Appearance.ForeColor = Color.Black
                e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Regular)
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
            End If
        End If
        If e.Row Is row31 Then
            If e.CellIndex = 1 Then
                e.Appearance.BackColor = Color.Pink
                e.Appearance.BackColor2 = Color.White
                e.Appearance.GradientMode = Drawing2D.LinearGradientMode.ForwardDiagonal
                e.Appearance.ForeColor = Color.Black
                e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Regular)
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
            End If
        End If
        If e.Row Is row20 Or e.Row Is row21 Then
            If e.CellIndex = 2 Then
                e.Appearance.BackColor = UserLookAndFeel.Default.SkinMaskColor
                e.Appearance.BackColor2 = Color.White
                e.Appearance.GradientMode = Drawing2D.LinearGradientMode.Horizontal
                e.Appearance.ForeColor = Color.Black
                e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Regular)
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
            End If
        End If
        'If e.Row Is row6 Then
        '    If e.CellIndex = 2 Then
        '        e.Appearance.BackColor = Color.Pink
        '        e.Appearance.ForeColor = Color.Black
        '    End If
        'End If

        If e.Row Is row7 Then
            If e.CellIndex = 4 Then
                e.Appearance.BackColor = Color.Pink
                e.Appearance.ForeColor = Color.Black
            End If
        End If
    End Sub

#End Region



    Private Sub ProgressBarControl1_CustomDisplayText(sender As Object, e As DevExpress.XtraEditors.Controls.CustomDisplayTextEventArgs) Handles ProgressBarControl1.CustomDisplayText
        Dim val As String = e.Value.ToString()
        e.DisplayText = "The progress is: " & val
    End Sub

    Public Sub DeleteAllAttendance()
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim FromDat As DateTime = CDate(Issue_Date.EditValue)
            If intList IsNot Nothing Then
                Dim p1 As Integer = 1
                ProgressBarControl1.Properties.Maximum = intList.Count
                ProgressBarControl1.Properties.Minimum = 0
                ProgressBarControl1.Properties.Appearance.BackColor = Color.Yellow
                ProgressBarControl1.Position = 0
                ProgressBarControl1.Update()
                For pio As Integer = 0 To intList.Count - 1
                    Dim EmpID As Integer = intList(pio)
                    ProgressBarControl1.Position = p1
                    ProgressBarControl1.Update()
                    p1 += 1
                    Dim k As Integer
                    Dim dt = (From a In db.Emp_Attendence_Device Where a.Emp_Attendence_Device_Status = False And a.Emp_Bio_Device_Users.Emp_ID = EmpID And a.Emp_Attendence_Device_Date.Value.Month = FromDat.Month And a.Emp_Attendence_Device_Date.Value.Year = FromDat.Year Select a).ToList
                    If dt.Count > 0 Then
                        ProgressBarControl2.Properties.Maximum = dt.Count - 1
                        ProgressBarControl2.Properties.Minimum = 0
                        ProgressBarControl2.Properties.Appearance.BackColor = Color.Red
                        ProgressBarControl2.Position = 0
                        ProgressBarControl2.Update()
                        For Each dts In dt
                            ProgressBarControl2.Position = k
                            ProgressBarControl2.Update()
                            'Me.Text = "Deleting Process on Record No. " & k
                            k += 1
                            db.Emp_Attendence_Device.Remove(dts)
                        Next
                        db.SaveChanges()
                    End If
                Next

                MsgBox("Attendance Delete from Data is Successfull")
                ProgressBarControl1.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl1.Update()
                ProgressBarControl2.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl2.Update()
                'ProgressBarControl3.Properties.Appearance.BackColor = Color.Green
                'ProgressBarControl3.Update()
                'LoadAtt(Issue_Date.EditValue)
                'UpdateAllSummaray()
                LoadEmp(CDate(Issue_Date.EditValue))

            Else
                MsgBox("Please Select Record for DELETE", MsgBoxStyle.Critical, "Selection Error")
            End If
        End Using
    End Sub
    Public Sub DeleteAllEmpty()
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim FromDat As DateTime = CDate(Issue_Date.EditValue)
            If intList IsNot Nothing Then
                Dim p1 As Integer = 1
                ProgressBarControl1.Properties.Maximum = intList.Count
                ProgressBarControl1.Properties.Minimum = 0
                ProgressBarControl1.Properties.Appearance.BackColor = Color.Yellow
                ProgressBarControl1.Position = 0
                ProgressBarControl1.Update()
                For pio As Integer = 0 To intList.Count - 1
                    Dim EmpID As Integer = intList(pio)
                    ProgressBarControl1.Position = p1
                    ProgressBarControl1.Update()
                    p1 += 1
                    Dim k As Integer
                    Dim dt = (From a In db.Emp_Attendence_Device Where a.Emp_Attendence_Device_Status = True And a.Emp_Bio_Device_Users.Emp_ID = EmpID And String.IsNullOrEmpty(CType(a.Emp_Bio_Device_Users.Attendence_Status_ID, String)) And a.Emp_Attendence_Device_Date.Value.Month = FromDat.Month And a.Emp_Attendence_Device_Date.Value.Year = FromDat.Year Select a).ToList
                    If dt.Count > 0 Then
                        ProgressBarControl2.Properties.Maximum = dt.Count - 1
                        ProgressBarControl2.Properties.Minimum = 0
                        ProgressBarControl2.Properties.Appearance.BackColor = Color.Red
                        ProgressBarControl2.Position = 0
                        ProgressBarControl2.Update()
                        For Each dts In dt
                            ProgressBarControl2.Position = k
                            ProgressBarControl2.Update()
                            'Me.Text = "Deleting Process on Record No. " & k
                            k += 1
                            db.Emp_Attendence_Device.Remove(dts)
                        Next
                        db.SaveChanges()
                    End If
                Next

                'MsgBox("Empty Delete is Successfull")
                ProgressBarControl1.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl1.Update()
                ProgressBarControl2.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl2.Update()
                'ProgressBarControl3.Properties.Appearance.BackColor = Color.Green
                'ProgressBarControl3.Update()
                'LoadAtt(Issue_Date.EditValue)
                UpdateAllSummaray()
            Else
                MsgBox("Please Select Record for DELETE", MsgBoxStyle.Critical, "Selection Error")
            End If
        End Using
    End Sub
    Public Sub UpdateAllSummaray()
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim FromDat As DateTime = CDate(Issue_Date.EditValue)
            If intList IsNot Nothing Then
                Dim p1 As Integer = 1
                ProgressBarControl1.Properties.Maximum = intList.Count
                ProgressBarControl1.Properties.Minimum = 0
                ProgressBarControl1.Properties.Appearance.BackColor = Color.Yellow
                ProgressBarControl1.Position = 0
                ProgressBarControl1.Update()
                For pio As Integer = 0 To intList.Count - 1
                    Dim EmpID As Integer = intList(pio)
                    ProgressBarControl1.Position = p1
                    ProgressBarControl1.Update()
                    p1 += 1
                    Dim k As Integer
                    Dim dt = (From a In db.Emp_Attendence_Device Where a.Emp_Attendence_Device_Status = True And a.Emp_Bio_Device_Users.Emp_ID = EmpID And a.Emp_Attendence_Device_Date.Value.Month = FromDat.Month And a.Emp_Attendence_Device_Date.Value.Year = FromDat.Year Select a).ToList
                    If dt.Count > 0 Then
                        ProgressBarControl2.Properties.Maximum = dt.Count - 1
                        ProgressBarControl2.Properties.Minimum = 0
                        ProgressBarControl2.Properties.Appearance.BackColor = Color.Purple
                        ProgressBarControl2.Position = 0
                        ProgressBarControl2.Update()
                        For Each dts In dt
                            ProgressBarControl2.Position = k
                            ProgressBarControl2.Update()
                            'Me.Text = "Update Summary Process on Record No. " & k
                            k += 1
                            dts.Emp_Attendence_Device_Cal1 = ""
                            dts.Emp_Attendence_Device_Cal2 = ""
                            dts.Emp_Attendence_Device_Cal3 = ""
                            dts.Emp_Attendence_Device_Cal4 = ""
                        Next
                        db.SaveChanges()

                    End If
                Next

                'MsgBox("Update All Summary is Successfull")
                ProgressBarControl1.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl1.Update()
                ProgressBarControl2.Properties.Appearance.BackColor = Color.Green
                ProgressBarControl2.Update()
                'ProgressBarControl3.Properties.Appearance.BackColor = Color.Green
                'ProgressBarControl3.Update()
                'LoadEmp(CDate(Issue_Date.EditValue))
                LoadImportDateCalcu()
            Else
                MsgBox("Please Select Record for UPDATE", MsgBoxStyle.Critical, "Selection Error")
            End If

        End Using
    End Sub

    Public Function GetCash() As Decimal
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim x As Decimal = 0
            Dim z As Decimal = 0
            Dim dtC = (From a In db.Emp_Cash_Register Select a.Emp_Cash_Register_Amt).Sum
            Dim dtP = (From a In db.Emp_Att_Payment Select a.Emp_Att_Payment_Paid).Sum
            x = If(dtC IsNot Nothing, CDec(dtC), 0)
            z = If(dtP IsNot Nothing, CDec(dtP), 0)
            Return x - z
        End Using
    End Function
    Public Function GetPayable() As Decimal
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim x As Decimal = 0
            Dim z As Decimal = 0
            Dim dtT = (From a In db.Emp_Att_Payment Select a.Emp_Att_Payment_Total).Sum
            Dim dtP = (From a In db.Emp_Att_Payment Select a.Emp_Att_Payment_Paid).Sum
            x = If(dtT IsNot Nothing, CDec(dtT), 0)
            z = If(dtP IsNot Nothing, CDec(dtP), 0)
            Return x - z
        End Using
    End Function
    Public Function Get_Emp_Att_Set_Late_Arrival_Status(Datx As Date) As Boolean
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim dt = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = Datx.Month And
                                                   a.Emp_Att_Set_Date.Value.Year = Datx.Year
                      Select a.Emp_Att_Set_Late_Arrival_Status).FirstOrDefault
            If dt IsNot Nothing Then
                Return dt.Value
            Else
                Return True
            End If
        End Using
    End Function
    Public Function Get_Emp_Att_Set_Early(Datx As Date) As Boolean
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim dt = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = Datx.Month And
                                                   a.Emp_Att_Set_Date.Value.Year = Datx.Year
                      Select a.Emp_Att_Set_Early_Status).FirstOrDefault
            If dt IsNot Nothing Then
                Return dt.Value
            Else
                Return True
            End If
        End Using
    End Function
    Public Function Get_Emp_Att_Set_OverTime(Datx As Date) As Boolean
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim dt = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = Datx.Month And
                                                   a.Emp_Att_Set_Date.Value.Year = Datx.Year
                      Select a.Emp_Att_Set_Duty_OverTime_Status).FirstOrDefault
            If dt IsNot Nothing Then
                Return dt.Value
            Else
                Return True
            End If
        End Using
    End Function
    Public Function Get_Emp_Att_Set_Prayer_Late(Datx As Date) As Boolean
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim dt = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = Datx.Month And
                                                   a.Emp_Att_Set_Date.Value.Year = Datx.Year
                      Select a.Emp_Att_Set_Prayer_Late_Status).FirstOrDefault
            If dt IsNot Nothing Then
                Return dt.Value
            Else
                Return True
            End If
        End Using
    End Function
    Public Function Get_Emp_Att_Set_Short_Leave(Datx As Date) As Boolean
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim dt = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = Datx.Month And
                                                   a.Emp_Att_Set_Date.Value.Year = Datx.Year
                      Select a.Emp_Att_Set_Prayer_Late_Status).FirstOrDefault
            If dt IsNot Nothing Then
                Return dt.Value
            Else
                Return True
            End If
        End Using
    End Function
    Public Function Get_Emp_Att_Set_Lunch_Late(Datx As Date) As Boolean
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim dt = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = Datx.Month And
                                                   a.Emp_Att_Set_Date.Value.Year = Datx.Year
                      Select a.Emp_Att_Set_Lunch_Status).FirstOrDefault
            If dt IsNot Nothing Then
                Return dt.Value
            Else
                Return True
            End If
        End Using
    End Function
    Public Function Get_Emp_Att_Set_Lunch_OverTime(Datx As Date) As Boolean
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim dt = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = Datx.Month And
                                                   a.Emp_Att_Set_Date.Value.Year = Datx.Year
                      Select a.Emp_Att_Set_Lunch_OverTime_Status).FirstOrDefault
            If dt IsNot Nothing Then
                Return dt.Value
            Else
                Return False
            End If
        End Using
    End Function
    Public Function Get_Emp_Att_Set_Private_Late(Datx As Date) As Boolean
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim dt = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = Datx.Month And
                                                   a.Emp_Att_Set_Date.Value.Year = Datx.Year
                      Select a.Emp_Att_Set_Private_Late_Status).FirstOrDefault
            If dt IsNot Nothing Then
                Return dt.Value
            Else
                Return True
            End If
        End Using
    End Function


    Public Sub Load_Payment_Month_Single(EmpID As Integer, Datx As Date)


        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities




            'db.Emp_Att_Payment.Load
            'BindingSource1.DataSource = db.Emp_Att_Payment.Local.ToBindingList()
            Dim md As Integer = CDate(CsmdDateTime.LastDayOfMonth(CDate(Issue_Date.EditValue))).Day

            Dim dt = (From a In db.Emp_Att_Payment.AsEnumerable Where a.Emp_ID = EmpID And a.Emp_Att_Payment_Issue_Date.Value.Month = Datx.Month And a.Emp_Att_Payment_Issue_Date.Value.Year = Datx.Year
                      Select New With {a.Emp_Att_Payment_ID, a.Employee.Emp_Name, a.Emp_Att_Payment_Fix,
                          a.Emp_Att_Payment_Issue_Date, a.Emp_Att_Payment_From_Date, a.Emp_Att_Payment_To_Date,
                          a.Emp_Att_Payment_DutyOn, a.Emp_Att_Payment_DutyOff,
                          a.Emp_Att_Payment_Total_Hours, a.Emp_Att_Payment_Total_MinRate, a.Emp_Att_Payment_Total_Days, a.Emp_Att_Payment_Total_DayRate,
                          a.Emp_Att_Payment_Add_Days, a.Emp_Att_Payment_InOutDays, a.Emp_Att_Payment_Absent_D, a.Emp_Att_Payment_Absent_Amount,
                          a.Emp_Att_Payment_Late, a.Emp_Att_Payment_Late_H, a.Emp_Att_Payment_Late_D, a.Emp_Att_Payment_Late_Amount,
                          a.Emp_Att_Payment_Early_H, a.Emp_Att_Payment_Early_D, a.Emp_Att_Payment_Early_Amount,
                          a.Emp_Att_Payment_OverTime_H, a.Emp_Att_Payment_OverTime_D, a.Emp_Att_Payment_OverTime_Amount,
                          a.Emp_Att_Payment_Prayer_Late_H, a.Emp_Att_Payment_Prayer_Late_D, a.Emp_Att_Payment_Prayer_Late_Amount,
                          a.Emp_Att_Payment_Short_H, a.Emp_Att_Payment_Short_D, a.Emp_Att_Payment_Short_Amount,
                          a.Emp_Att_Payment_Lunch_Late_H, a.Emp_Att_Payment_Lunch_Late_D, a.Emp_Att_Payment_Lunch_Late_Amount,
                          a.Emp_Att_Payment_Lunch_OverTime_H, a.Emp_Att_Payment_Lunch_OverTime_D, a.Emp_Att_Payment_Lunch_OverTime_Amount,
                          a.Emp_Att_Payment_Private_Late_H, a.Emp_Att_Payment_Private_Late_D, a.Emp_Att_Payment_Private_Late_Amount,
                          a.Emp_Att_Payment_Amount, a.Emp_Att_Payment_Beg, a.Emp_Att_Payment_Advance,
                          a.Emp_Att_Payment_Fine, a.Emp_Att_Payment_Bonus, a.Emp_Att_Payment_Total,
                          a.Emp_Att_Payment_Paid, a.Emp_Att_Payment_Balance,
                                       .Ca1 = "Description", .Ca2 = "Days", .Ca3 = "Rate", .Ca4 = "Amount",
                                       .Cb1 = "Salary Days", .Cb2 = a.Emp_Att_Payment_Total_Salaray_Days, .Cb3 = a.Emp_Att_Payment_Total_DayRate, .Cb4 = a.Emp_Att_Payment_Fix,
                                       .Cc1 = "Absentees", .Cc2 = a.Emp_Att_Payment_Absent_D, .Cc3 = a.Emp_Att_Payment_Total_DayRate, .Cc4 = a.Emp_Att_Payment_Absent_Amount,
                                       .Cd1 = "OffDays", .Cd2 = a.Emp_Att_Payment_Total_OffDays, .Cd3 = a.Emp_Att_Payment_Total_DayRate, .Cd4 = a.Emp_Att_Payment_Total_OffDays_Amount,
                                       .Cf1 = "Inout Days", .Cf2 = a.Emp_Att_Payment_InOutDays, .Cf3 = a.Emp_Att_Payment_Total_DayRate, .Cf4 = a.Emp_Att_Payment_InOutDays_Amount,
                                       .Cg1 = "Extra Days", .Cg2 = a.Emp_Att_Payment_ExtraDays, .Cg3 = a.Emp_Att_Payment_Total_DayRate, .Cg4 = a.Emp_Att_Payment_ExtraDays_Amount,
                                       .Ch1 = "Salary Total:", .Ch2 = a.Emp_Att_Payment_Salaray_Total,
                          .m0 = "Description", .m00 = "OffDay", .m1 = "Days", .m2 = "Hours", .m3 = "Rate", .m4 = "Amount",
                          .m5 = "Working Days", .m55 = a.Emp_Att_Payment_Total_MonthDays, .m6 = "Absentees", .m66 = a.Emp_Att_Payment_Total_OffDays,
                                       .Az1 = "Description", .Az2 = "Sts", .Az3 = "Days", .Az4 = "Hours", .Az5 = "Rate", .Az6 = "Amount",
                          .m7 = "Late Arrival", .m8 = "Early Dep", .m9 = "Duty Overtime", .m10 = "Prayer Late",
                          .m11 = "Short Leave", .m12 = "Lunch Late", .m13 = "Lunch Overtime", .m14 = "Private Late",
                          .s1 = "Summary of Month:", .s2 = "Old Due:", .s3 = "Advances:", .s4 = "Fine:", .s5 = "Bonus:", .s6 = "Total Amount:", .s7 = "Paid:", .s8 = "Balance:",
                          .n1 = "DutyOn", .n2 = "DutyOff", .n4 = "MinRate", .n5 = "Hours", .d1 = "Issue Date", .d2 = "Duty From", .d3 = "Duty To",
                          .e1 = "Name of Employees", .e2 = "Image", .ccA1 = "Cash Account:", .ccA2 = GetCash(), .dA1 = "Payable", .dA2 = GetPayable(),
                           .Ec8 = Get_Emp_Att_Set_Late_Arrival_Status(Datx),
                          .Ec1 = Get_Emp_Att_Set_Early(Datx),
                           .Ec2 = Get_Emp_Att_Set_OverTime(Datx),
                           .Ec3 = Get_Emp_Att_Set_Prayer_Late(Datx),
                           .Ec4 = Get_Emp_Att_Set_Short_Leave(Datx),
                           .Ec5 = Get_Emp_Att_Set_Lunch_Late(Datx),
                           .Ec6 = Get_Emp_Att_Set_Lunch_OverTime(Datx),
                           .Ec7 = Get_Emp_Att_Set_Private_Late(Datx)}).ToList
            If dt.Count > 0 Then
                VGridControl1.DataSource = dt
            Else
                VGridControl1.DataSource = Nothing
            End If
        End Using
    End Sub

    Public Function Load_Payment_Month_Single_For_WhatsAppChk(EmpID As Integer, Datx As Date) As String


        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            'db.Emp_Att_Payment.Load
            'BindingSource1.DataSource = db.Emp_Att_Payment.Local.ToBindingList()
            Dim md As Integer = CDate(CsmdDateTime.LastDayOfMonth(CDate(Issue_Date.EditValue))).Day

            Dim dt = (From a In db.Emp_Att_Payment.AsEnumerable Where a.Emp_ID = EmpID And a.Emp_Att_Payment_Issue_Date.Value.Month = Datx.Month And a.Emp_Att_Payment_Issue_Date.Value.Year = Datx.Year
                      Select a).FirstOrDefault
            Dim strDetail As String = "whatsapp://send?"
            If dt IsNot Nothing Then
                'Dim row As GridViewRow = Me.GridView1.Rows(selectedIndex)
                'Dim id As String = row.Cells(0).Text
                'Dim name As String = row.Cells(1).Text
                'Dim country As String = row.Cells(2).Text
                'Dim script As String = "window.onload = function() { ShareOnWhatsApp('" & id & "','" & name & "','" & country & "'); };"
                'ClientScript.RegisterStartupScript(Me.[GetType](), "script", script, True)
                strDetail = strDetail & "phone="
                strDetail = strDetail & "92" + Microsoft.VisualBasic.Right(dt.Employee.Emp_Phone, 10)
                strDetail = strDetail + "&text=" & "WhatsApp PayRoll Invoice by Csmd Softwares 0318-7785452"
                strDetail = strDetail + "*-----------------------*%0a%0a"


            End If

            Return strDetail
        End Using
    End Function
    Public Function Load_Payment_Month_Single_For_WhatsApp(EmpID As Integer, Datx As Date) As String


        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities




            'db.Emp_Att_Payment.Load
            'BindingSource1.DataSource = db.Emp_Att_Payment.Local.ToBindingList()
            Dim md As Integer = CDate(CsmdDateTime.LastDayOfMonth(CDate(Issue_Date.EditValue))).Day

            Dim dt = (From a In db.Emp_Att_Payment.AsEnumerable Where a.Emp_ID = EmpID And a.Emp_Att_Payment_Issue_Date.Value.Month = Datx.Month And a.Emp_Att_Payment_Issue_Date.Value.Year = Datx.Year
                      Select New With {a.Emp_Att_Payment_ID, a, a.Employee.Emp_Name, a.Employee.Emp_Phone, a.Emp_Att_Payment_Fix,
                          a.Emp_Att_Payment_Issue_Date, a.Emp_Att_Payment_From_Date, a.Emp_Att_Payment_To_Date,
                          a.Emp_Att_Payment_DutyOn, a.Emp_Att_Payment_DutyOff,
                          a.Emp_Att_Payment_Total_Hours, a.Emp_Att_Payment_Total_MinRate, a.Emp_Att_Payment_Total_Days, a.Emp_Att_Payment_Total_DayRate,
                          a.Emp_Att_Payment_Add_Days, a.Emp_Att_Payment_InOutDays, a.Emp_Att_Payment_Absent_D, a.Emp_Att_Payment_Absent_Amount,
                          a.Emp_Att_Payment_Late, a.Emp_Att_Payment_Late_H, a.Emp_Att_Payment_Late_D, a.Emp_Att_Payment_Late_Amount,
                          a.Emp_Att_Payment_Early_H, a.Emp_Att_Payment_Early_D, a.Emp_Att_Payment_Early_Amount,
                          a.Emp_Att_Payment_OverTime_H, a.Emp_Att_Payment_OverTime_D, a.Emp_Att_Payment_OverTime_Amount,
                          a.Emp_Att_Payment_Prayer_Late_H, a.Emp_Att_Payment_Prayer_Late_D, a.Emp_Att_Payment_Prayer_Late_Amount,
                          a.Emp_Att_Payment_Short_H, a.Emp_Att_Payment_Short_D, a.Emp_Att_Payment_Short_Amount,
                          a.Emp_Att_Payment_Lunch_Late_H, a.Emp_Att_Payment_Lunch_Late_D, a.Emp_Att_Payment_Lunch_Late_Amount,
                          a.Emp_Att_Payment_Lunch_OverTime_H, a.Emp_Att_Payment_Lunch_OverTime_D, a.Emp_Att_Payment_Lunch_OverTime_Amount,
                          a.Emp_Att_Payment_Private_Late_H, a.Emp_Att_Payment_Private_Late_D, a.Emp_Att_Payment_Private_Late_Amount,
                          a.Emp_Att_Payment_Amount, a.Emp_Att_Payment_Beg, a.Emp_Att_Payment_Advance,
                          a.Emp_Att_Payment_Fine, a.Emp_Att_Payment_Bonus, a.Emp_Att_Payment_Total,
                          a.Emp_Att_Payment_Paid, a.Emp_Att_Payment_Balance,
                                       .Ca1 = "Description", .Ca2 = "Days", .Ca3 = "Rate", .Ca4 = "Amount",
                                       .Cb1 = "Salary Days", .Cb2 = a.Emp_Att_Payment_Total_Salaray_Days, .Cb3 = a.Emp_Att_Payment_Total_DayRate, .Cb4 = a.Emp_Att_Payment_Fix,
                                       .Cc1 = "Absentees", .Cc2 = a.Emp_Att_Payment_Absent_D, .Cc3 = a.Emp_Att_Payment_Total_DayRate, .Cc4 = a.Emp_Att_Payment_Absent_Amount,
                                       .Cd1 = "OffDays", .Cd2 = a.Emp_Att_Payment_Total_OffDays, .Cd3 = a.Emp_Att_Payment_Total_DayRate, .Cd4 = a.Emp_Att_Payment_Total_OffDays_Amount,
                                       .Cf1 = "Inout Days", .Cf2 = a.Emp_Att_Payment_InOutDays, .Cf3 = a.Emp_Att_Payment_Total_DayRate, .Cf4 = a.Emp_Att_Payment_InOutDays_Amount,
                                       .Cg1 = "Extra Days", .Cg2 = a.Emp_Att_Payment_ExtraDays, .Cg3 = a.Emp_Att_Payment_Total_DayRate, .Cg4 = a.Emp_Att_Payment_ExtraDays_Amount,
                                       .Ch1 = "Salary Total:", .Ch2 = a.Emp_Att_Payment_Salaray_Total,
                          .m0 = "Description", .m00 = "OffDay", .m1 = "Days", .m2 = "Hours", .m3 = "Rate", .m4 = "Amount",
                          .m5 = "Working Days", .m55 = a.Emp_Att_Payment_Total_MonthDays, .m6 = "Absentees", .m66 = a.Emp_Att_Payment_Total_OffDays,
                                       .Az1 = "Description", .Az2 = "Sts", .Az3 = "Days", .Az4 = "Hours", .Az5 = "Rate", .Az6 = "Amount",
                          .m7 = "Late Arrival", .m8 = "Early Dep", .m9 = "Duty Overtime", .m10 = "Prayer Late",
                          .m11 = "Short Leave", .m12 = "Lunch Late", .m13 = "Lunch Overtime", .m14 = "Private Late",
                          .s1 = "Summary of Month:", .s2 = "Old Due:", .s3 = "Advances:", .s4 = "Fine:", .s5 = "Bonus:", .s6 = "Total Amount:", .s7 = "Paid:", .s8 = "Balance:",
                          .n1 = "DutyOn", .n2 = "DutyOff", .n4 = "MinRate", .n5 = "Hours", .d1 = "Issue Date", .d2 = "Duty From", .d3 = "Duty To",
                          .e1 = "Name of Employees", .e2 = "Image", .ccA1 = "Cash Account:", .ccA2 = GetCash(), .dA1 = "Payable", .dA2 = GetPayable(),
                           .Ec8 = Get_Emp_Att_Set_Late_Arrival_Status(Datx),
                          .Ec1 = Get_Emp_Att_Set_Early(Datx),
                           .Ec2 = Get_Emp_Att_Set_OverTime(Datx),
                           .Ec3 = Get_Emp_Att_Set_Prayer_Late(Datx),
                           .Ec4 = Get_Emp_Att_Set_Short_Leave(Datx),
                           .Ec5 = Get_Emp_Att_Set_Lunch_Late(Datx),
                           .Ec6 = Get_Emp_Att_Set_Lunch_OverTime(Datx),
                           .Ec7 = Get_Emp_Att_Set_Private_Late(Datx)}).FirstOrDefault
            Dim strDetail As String = "whatsapp://send?"
            If dt IsNot Nothing Then
                'Dim row As GridViewRow = Me.GridView1.Rows(selectedIndex)
                'Dim id As String = row.Cells(0).Text
                'Dim name As String = row.Cells(1).Text
                'Dim country As String = row.Cells(2).Text
                'Dim script As String = "window.onload = function() { ShareOnWhatsApp('" & id & "','" & name & "','" & country & "'); };"
                'ClientScript.RegisterStartupScript(Me.[GetType](), "script", script, True)
                strDetail = strDetail & "phone="
                strDetail = strDetail & "92" + Microsoft.VisualBasic.Right(dt.Emp_Phone, 10)
                strDetail = strDetail & "&text="
                strDetail = strDetail & "*Faazal Pharmacy %26 Mart*%0a"
                strDetail = strDetail & "%09%09Satisfaction Guaranteed%0a"
                strDetail = strDetail & "*Faazal Plaza Dhulyan Chowk Dinga*%0a"
                'strDetail = strDetail & "*Phone:*	%090537-401910 %0a"
                strDetail = strDetail & "*Cell :*		%09%090332-7117786%0a%0a"
                'strDetail = strDetail & "*...............................................*%0a%0a"

                strDetail = strDetail & "*Name :*		%09%09" & dt.Emp_Name & " s/o " & dt.a.Employee.Emp_Father & "%0a%0a"

                'strDetail = strDetail & "%09%09*```Dates```*%0a"
                strDetail = strDetail & "*-----*%0a"
                'strDetail = strDetail & "*Invoice*	%09" & dt. & "%0a"
                strDetail = strDetail & "*Issue Date:*	%09" & dt.Emp_Att_Payment_Issue_Date & "%0a"
                strDetail = strDetail & "*From :*	%09" & dt.Emp_Att_Payment_From_Date & "%09*To*%09" & dt.Emp_Att_Payment_To_Date & "%0a%0a"
                'strDetail = strDetail & ""
                'strDetail = strDetail & "*-----------------------*%0a%0a"

                strDetail = strDetail & "%09*Duty Times*%0a"
                strDetail = strDetail & "*-----*%0a"
                strDetail = strDetail & "```DutyOn    : %09" & dt.Emp_Att_Payment_DutyOn & "```%0a"
                strDetail = strDetail & "```DutyOff   : %09" & dt.Emp_Att_Payment_DutyOff & "```%0a"
                strDetail = strDetail & "```DutyHours : %09" & dt.Emp_Att_Payment_Total_Hours & "```%0a%0a"
                'strDetail = strDetail & "*DutyOff:*	%09" & dt.Emp_Att_Payment_DutyOn & "%0a"
                'strDetail = strDetail & "*Duty Hours:*		%09%09" & dt.Emp_Att_Payment_Total_Hours & "%0a%0a"

                'strDetail = strDetail & "*=======================*%0a"
                strDetail = strDetail & "%09*Salary Details*%0a"
                strDetail = strDetail & "*-----*%0a"
                'strDetail = strDetail & "```DayRate     : %09" & CDbl(dt.Emp_Att_Payment_Total_DayRate).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Salary Days : %09" & CDbl(dt.a.Emp_Att_Payment_Total_Salaray_Days).ToString("00") & "|%09" & CDbl(dt.Emp_Att_Payment_Fix).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Absentees   : %09" & CDbl(dt.Emp_Att_Payment_Absent_D).ToString("00") & "|%09" & CDbl(dt.a.Emp_Att_Payment_Absent_Amount).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Off Days    : %09" & CDbl(dt.a.Emp_Att_Payment_Total_OffDays).ToString("00") & "|%09" & CDbl(dt.a.Emp_Att_Payment_Total_OffDays_Amount).ToString("00000") & "```%0a"
                strDetail = strDetail & "```InOut Days  : %09" & CDbl(dt.Emp_Att_Payment_InOutDays).ToString("00") & "|%09" & CDbl(dt.a.Emp_Att_Payment_InOutDays_Amount).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Extra Days  : %09" & CDbl(dt.a.Emp_Att_Payment_ExtraDays).ToString("00") & "|%09" & CDbl(dt.a.Emp_Att_Payment_ExtraDays_Amount).ToString("00000") & "```%0a"
                'strDetail = strDetail & "```====%09====%09====%09====%09====```%0a"
                strDetail = strDetail & "*-----*%0a"
                strDetail = strDetail & "```Salary Total:	%09%09" & CDbl(dt.a.Emp_Att_Payment_Salaray_Total).ToString("00000") & "```%0a%0a"
                'strDetail = strDetail & "```====%09====%09====%09====%09====```%0a%0a"
                'strDetail = strDetail & "*-----------------------*%0a%0a"

                ''''strDetail = strDetail & "*=======================*%0a"
                strDetail = strDetail & "%09*Attendence Details*%0a"
                strDetail = strDetail & "*-----*%0a"
                Dim MInR As String = CDbl(dt.Emp_Att_Payment_Total_MinRate).ToString("00.00")
                strDetail = strDetail & "*MinRate       :* %09" & MInR & "%0a"
                strDetail = strDetail & "```Description : %09Dy|%09Hours|%09Amount```%0a"
                strDetail = strDetail & "```Late Arrival: %09" & CDbl(dt.Emp_Att_Payment_Late_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Late_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Late_H).Split(":")(1)).ToString("00") & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Late_Amount).ToString("00000"), "-", "") & "```%0a"
                strDetail = strDetail & "```Early Dept  : %09" & CDbl(dt.Emp_Att_Payment_Early_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Early_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Early_H).Split(":")(1)).ToString("00") & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Early_Amount).ToString("00000"), "-", "") & "```%0a"
                strDetail = strDetail & "```Over Time   : %09" & CDbl(dt.Emp_Att_Payment_OverTime_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_OverTime_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_OverTime_H).Split(":")(1)).ToString("00") & "|%2B%09" & CDbl(dt.Emp_Att_Payment_OverTime_Amount).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Prayer Late : %09" & CDbl(dt.Emp_Att_Payment_Prayer_Late_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Prayer_Late_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Prayer_Late_H).Split(":")(1)).ToString("00") & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Prayer_Late_Amount).ToString("00000"), "-", "") & "```%0a"
                strDetail = strDetail & "```Short Leave : %09" & CDbl(dt.Emp_Att_Payment_Short_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Short_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Short_H).Split(":")(1)).ToString("00") & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Short_Amount).ToString("00000"), "-", "") & "```%0a"
                strDetail = strDetail & "```Lunch Late  : %09" & CDbl(dt.Emp_Att_Payment_Lunch_Late_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Lunch_Late_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Lunch_Late_H).Split(":")(1)).ToString("00") & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Lunch_Late_Amount).ToString("00000"), "-", "") & "```%0a"
                strDetail = strDetail & "```Lunch OvrTim: %09" & CDbl(dt.Emp_Att_Payment_Lunch_OverTime_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Lunch_OverTime_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Lunch_OverTime_H).Split(":")(1)).ToString("00") & "|%2B%09" & CDbl(dt.Emp_Att_Payment_Lunch_OverTime_Amount).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Private Late: %09" & CDbl(dt.Emp_Att_Payment_Private_Late_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Private_Late_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Private_Late_H).Split(":")(1)).ToString("00") & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Private_Late_Amount).ToString("00000"), "-", "") & "```%0a"
                'strDetail = strDetail & "```..: %09Dy|%09Hours|%09MinRt|%09Amount```%0a"
                'strDetail = strDetail & "```LA:	%09" & CDbl(dt.Emp_Att_Payment_Late_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Late_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Late_H).Split(":")(1)).ToString("00") & "|%09" & MInR & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Late_Amount).ToString("00000.00"), "-", "") & "```%0a"
                'strDetail = strDetail & "```ED:	%09" & CDbl(dt.Emp_Att_Payment_Early_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Early_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Early_H).Split(":")(1)).ToString("00") & "|%09" & MInR & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Early_Amount).ToString("00000.00"), "-", "") & "```%0a"
                'strDetail = strDetail & "```OT:	%09" & CDbl(dt.Emp_Att_Payment_OverTime_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_OverTime_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_OverTime_H).Split(":")(1)).ToString("00") & "|%09" & MInR & "|%2B%09" & CDbl(dt.Emp_Att_Payment_OverTime_Amount).ToString("00000.00") & "```%0a"
                'strDetail = strDetail & "```PL:	%09" & CDbl(dt.Emp_Att_Payment_Prayer_Late_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Prayer_Late_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Prayer_Late_H).Split(":")(1)).ToString("00") & "|%09" & MInR & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Prayer_Late_Amount).ToString("00000.00"), "-", "") & "```%0a"
                'strDetail = strDetail & "```SL:	%09" & CDbl(dt.Emp_Att_Payment_Short_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Short_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Short_H).Split(":")(1)).ToString("00") & "|%09" & MInR & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Short_Amount).ToString("00000.00"), "-", "") & "```%0a"
                'strDetail = strDetail & "```LL:	%09" & CDbl(dt.Emp_Att_Payment_Lunch_Late_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Lunch_Late_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Lunch_Late_H).Split(":")(1)).ToString("00") & "|%09" & MInR & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Lunch_Late_Amount).ToString("00000.00"), "-", "") & "```%0a"
                'strDetail = strDetail & "```LO:	%09" & CDbl(dt.Emp_Att_Payment_Lunch_OverTime_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Lunch_OverTime_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Lunch_OverTime_H).Split(":")(1)).ToString("00") & "|%09" & MInR & "|%2B%09" & CDbl(dt.Emp_Att_Payment_Lunch_OverTime_Amount).ToString("00000.00") & "```%0a"
                'strDetail = strDetail & "```PR:	%09" & CDbl(dt.Emp_Att_Payment_Private_Late_D).ToString("00") & "|%09" & CDbl(CStr(dt.Emp_Att_Payment_Private_Late_H).Split(":")(0)).ToString("00") & ":" & CDbl(CStr(dt.Emp_Att_Payment_Private_Late_H).Split(":")(1)).ToString("00") & "|%09" & MInR & "|-%09" & Replace(CDbl(dt.Emp_Att_Payment_Private_Late_Amount).ToString("00000.00"), "-", "") & "```%0a"
                'strDetail = strDetail & "```==:%09==|%09=====|%09=====|%09========```%0a"
                strDetail = strDetail & "*-----*%0a"
                strDetail = strDetail & "```Summary of Month: %09" & CDbl(dt.Emp_Att_Payment_Total).ToString("00000") & "```%0a%0a"
                'strDetail = strDetail & "*-----------------------*%0a"
                'strDetail = strDetail & "```====%09====%09====%09====%09====%09====```%0a%0a"
                ''''strDetail = strDetail & "*-----------------------*%0a%0a"
                strDetail = strDetail & "%09*Payment Details*%0a"
                strDetail = strDetail & "*-----*%0a"
                strDetail = strDetail & "```Old Due : %09%09" & CDbl(dt.Emp_Att_Payment_Beg).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Advances: %09%09" & CDbl(dt.Emp_Att_Payment_Advance).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Fine    : %09%09" & CDbl(dt.Emp_Att_Payment_Fine).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Bonus   : %09%09" & CDbl(dt.Emp_Att_Payment_Bonus).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Total   : %09%09" & CDbl(dt.Emp_Att_Payment_Total).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Paid    : %09%09" & CDbl(dt.Emp_Att_Payment_Paid).ToString("00000") & "```%0a"
                strDetail = strDetail & "```Balance : %09%09" & CDbl(dt.Emp_Att_Payment_Balance).ToString("00000") & "```%0a"

                'strDetail = strDetail & "*Old Due:*	%09" & dt.Emp_Att_Payment_Beg & "%0a"
                'strDetail = strDetail & "*Advances:*	%09" & dt.Emp_Att_Payment_Advance & "%0a"
                'strDetail = strDetail & "*Fine:*	%09" & dt.Emp_Att_Payment_Fine & "%0a"
                'strDetail = strDetail & "*Bonus:*	%09" & dt.Emp_Att_Payment_Bonus & "%0a"
                'strDetail = strDetail & "*Total:*	%09" & dt.Emp_Att_Payment_Total & "%0a"
                'strDetail = strDetail & "*Paid:*	%09" & dt.Emp_Att_Payment_Paid & "%0a"
                'strDetail = strDetail & "*Balance:*	%09" & dt.Emp_Att_Payment_Balance & "%0a"

                ''''Dim MInR As String = CsmdWaFont(CDbl(dt.Emp_Att_Payment_Total_MinRate).ToString("00.00"))
                '''''strDetail = strDetail & "```LA:	%09" & CsmdWaFont(CDbl(dt.Emp_Att_Payment_Late_D).ToString("00")) & "|%09" & CsmdWaFont(dt.Emp_Att_Payment_Late_H) & "|%09" & MInR & "%09|" & dt.Emp_Att_Payment_Late_Amount & "```%0a"
                ''''strDetail = strDetail & "```ED:	%09" & CsmdWaFont(CDbl(dt.Emp_Att_Payment_Early_D).ToString("00")) & "|%09" & CsmdWaFont(dt.Emp_Att_Payment_Early_H) & "|%09" & MInR & "|%09" & dt.Emp_Att_Payment_Early_Amount & "```%0a"
                ''''strDetail = strDetail & "```OT:	%09" & CsmdWaFont(CDbl(dt.Emp_Att_Payment_OverTime_D).ToString("00")) & "|%09" & CsmdWaFont(dt.Emp_Att_Payment_OverTime_H) & "|%09" & MInR & "|%09" & dt.Emp_Att_Payment_OverTime_Amount & "```%0a"
                ''''strDetail = strDetail & "```PL:	%09" & CsmdWaFont(CDbl(dt.Emp_Att_Payment_Prayer_Late_D).ToString("00")) & "%09" & CsmdWaFont(dt.Emp_Att_Payment_Prayer_Late_H) & "%09" & MInR & "%09" & dt.Emp_Att_Payment_Prayer_Late_Amount & "```%0a"
                '''''strDetail = strDetail & "```SL:	%09" & CsmdWaFont(CDbl(dt.Emp_Att_Payment_Short_D).ToString("00")) & "%09" & CsmdWaFont(dt.Emp_Att_Payment_Short_H) & "%09" & MInR & "%09" & dt.Emp_Att_Payment_Short_Amount & "```%0a"
                ''''strDetail = strDetail & "```LL:	%09" & CsmdWaFont(CDbl(dt.Emp_Att_Payment_Lunch_Late_D).ToString("00")) & "%09" & CsmdWaFont(dt.Emp_Att_Payment_Lunch_Late_H) & "%09" & MInR & "%09" & dt.Emp_Att_Payment_Lunch_Late_Amount & "```%0a"
                ''''strDetail = strDetail & "```LO:	%09" & CsmdWaFont(CDbl(dt.Emp_Att_Payment_Lunch_OverTime_D).ToString("00")) & "%09" & CsmdWaFont(dt.Emp_Att_Payment_Lunch_OverTime_H) & "%09" & MInR & "%09" & dt.Emp_Att_Payment_Lunch_OverTime_Amount & "```%0a"
                '''''strDetail = strDetail & "```PR:	%09" & CsmdWaFont(CDbl(dt.Emp_Att_Payment_Private_Late_D).ToString("00")) & "%09" & CsmdWaFont(dt.Emp_Att_Payment_Private_Late_H) & "%09" & MInR & "%09" & dt.Emp_Att_Payment_Private_Late_Amount & "```%0a"
                ''''strDetail = strDetail & "```====%09====%09====%09====%09====%09====```%0a"
                ''''strDetail = strDetail & "```Summary of Month:	%09%09%09" & dt.Emp_Att_Payment_Total & "```%0a"
                ''''strDetail = strDetail & "```====%09====%09====%09====%09====%09====```%0a%0a"
                '''''''strDetail = strDetail & "*-----------------------*%0a%0a"




                ''Dim eBill As Double = dts.RB_Pay_Detail_Bill_Amt
                ''Dim gBill As Double = dts.RB_Pay_Detail_Gas_TBill
                ''Dim rRent As Double = dts.RB_Pay_Detail_Rent

                ''Dim payab As Double = dts.RB_Pay_Detail_Payable

                ''Dim curPay As Double = (eBill + gBill) + rRent

                ''Dim oldDue As Double = payab - curPay



                ''Dim GranTotal As Double = payab



                ''strDetail = strDetail & "*=======================*%0a"
                ''strDetail = strDetail & "*Arrears Dues*	%09" & oldDue & "%0a"
                ''strDetail = strDetail & "*Current Pay:*	%09" & curPay & "%0a"
                ''strDetail = strDetail & "*Payable Within Due Date:* " & GranTotal & "%0a"
                ''strDetail = strDetail & "*=======================*%0a%0a"

                ''Dim LateF As Double = (GranTotal / 100) * 15

                ''Dim afterDue As Double = payab + LateF

                ''strDetail = strDetail & "*L.F Fine 15%*	%09" & LateF & "%0a"
                ''strDetail = strDetail & "*Payable After Due Date:* " & afterDue & "%0a"
                'strDetail = strDetail & "*.....*%0a%0a"

                strDetail = strDetail & "*Thank You*"
                'strDetail = strDetail & "*Note:* This invoice Testing by CSMD Softwares Company"

            End If
            MsgBox(strDetail.Length)
            Return strDetail
        End Using
    End Function


#Region "Gridview1 Filter with Settings"


    Private Sub Load_Att_Setting()
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            Dim datX As Date = CDate(Issue_Date.EditValue)
            Dim dt = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = datX.Month And
                                                   a.Emp_Att_Set_Date.Value.Year = datX.Year
                      Select New With {a.Emp_Att_Set_ID,
                          .A1 = "Date", a.Emp_Att_Set_Date,
                          .A2 = "DayTime", a.Emp_Att_Set_Open_Time, a.Emp_Att_Set_Close_Time,
                         .A3 = "Friday Jumah?", a.Emp_Att_Set_Fri_Status, a.Emp_Att_Set_FridayOff,
                         .A4 = "Jumah Time", a.Emp_Att_Set_DutyFriOn, a.Emp_Att_Set_DutyFriOff,
                         .A5 = "Late Arrival", a.Emp_Att_Set_Late_Arrival_Status, a.Emp_Att_Set_Late_Arrival_Time,
                         .A6 = "Early Departure", a.Emp_Att_Set_Early_Status, a.Emp_Att_Set_Early_Time,
                          .A7 = "Duty OverTime", a.Emp_Att_Set_Duty_OverTime_Status, a.Emp_Att_Set_Duty_OverTime_Time,
                          .A8 = "Prayer Late", a.Emp_Att_Set_Prayer_Late_Status, a.Emp_Att_Set_Prayer_Late_Time,
                          .A9 = "Short Leave", a.Emp_Att_Set_Short_Leave_Status, a.Emp_Att_Set_Short_Leave_Time,
                          .A10 = "Lunch Time", a.Emp_Att_Set_Lunch_Status, a.Emp_Att_Set_Lunch_Time,
                          .A11 = "Lunch OverTime", a.Emp_Att_Set_Lunch_OverTime_Status,
                          .A12 = "Private Time", a.Emp_Att_Set_Private_Late_Status, a.Emp_Att_Set_Private_Time}).ToList
            If dt.Count > 0 Then
                VGridControl2.DataSource = dt
                'VGridControl2.SetCellValue(DateX.PropertiesCollection.Item("Emp_Att_Set_Fri_Status"), 0, True)
            Else
                VGridControl2.SetCellValue(DateX.PropertiesCollection.Item("Emp_Att_Set_Date"), 0, datX.Date)
                VGridControl2.SetCellValue(DateX.PropertiesCollection.Item("Emp_Att_Set_Fri_Status"), 0, True)
                '.Emp_Att_Set_Open_Time = CType(VGridControl1.GetCellValue(DayTime.PropertiesCollection.Item("Emp_Att_Set_Open_Time"), 0), String)
                '.Emp_Att_Set_Close_Time = CType(VGridControl1.GetCellValue(DayTime.PropertiesCollection.Item("Emp_Att_Set_Close_Time"), 0), String)

                '.Emp_Att_Set_Fri_Status = CType(VGridControl1.GetCellValue(Friday_On.PropertiesCollection.Item("Emp_Att_Set_Fri_Status"), 0), Boolean?)
                '.Emp_Att_Set_FridayOff = CType(VGridControl1.GetCellValue(Friday_On.PropertiesCollection.Item("Emp_Att_Set_FridayOff"), 0), String)

                'VGridControl2.DataSource = Nothing
                'With dt
                '    DutyFriToggle.EditValue = .Emp_Att_Set_Fri_Status
                '    DutyFriOn.EditValue = .Emp_Att_Set_DutyFriOn
                '    DutyFriOff.EditValue = .Emp_Att_Set_DutyFriOff
                '    DutyFri.EditValue = .Emp_Att_Set_FridayOff
                '    Sp1.EditValue = .Emp_Att_Set_1
                '    Sp2.EditValue = .Emp_Att_Set_2
                '    Sp3.EditValue = .Emp_Att_Set_3
                '    Sp4.EditValue = .Emp_Att_Set_4
                '    Sp5.EditValue = .Emp_Att_Set_5
                '    intSp4 = CInt(.Emp_Att_Set_4)
                'End With
                'If dt.Emp_Att_Set_Fri_Status = True Then
                '    DutyFriOn.Enabled = True
                '    DutyFriOff.Enabled = True
                '    DutyFri.Enabled = False
                'Else
                '    DutyFriOn.Enabled = False
                '    DutyFriOff.Enabled = False
                '    DutyFri.Enabled = True
                'End If
                'Else
                '    DutyFriToggle.EditValue = False
            End If
        End Using
    End Sub

    Private Sub SaveUpdate_Att_Setting()
        Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
            'Dim DutyFriOnX As DateTime = CDate(CDate(DutyFriOn.EditValue).ToString("HH:mm"))
            'Dim DutyFriOffX As DateTime = CDate(CDate(DutyFriOff.EditValue).ToString("HH:mm"))
            'Dim DutyFriX As DateTime = CDate(CDate(DutyFri.EditValue).ToString("HH:mm"))
            Dim datX As Date = CDate(Issue_Date.EditValue)
            'Dim chk As Boolean = CBool(VGridControl1.GetCellValue(row13.PropertiesCollection.Item("Lo1"), 0))

            Dim dt = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = datX.Month And a.Emp_Att_Set_Date.Value.Year = datX.Year Select a).FirstOrDefault
            If dt IsNot Nothing Then
                With dt
                    .Emp_Att_Set_Date = CDate(Issue_Date.EditValue)

                    .Emp_Att_Set_Open_Time = CType(VGridControl2.GetCellValue(DayTime.PropertiesCollection.Item("Emp_Att_Set_Open_Time"), 0), String)
                    .Emp_Att_Set_Close_Time = CType(VGridControl2.GetCellValue(DayTime.PropertiesCollection.Item("Emp_Att_Set_Close_Time"), 0), String)

                    .Emp_Att_Set_Fri_Status = CType(VGridControl2.GetCellValue(Friday_On.PropertiesCollection.Item("Emp_Att_Set_Fri_Status"), 0), Boolean?)
                    .Emp_Att_Set_FridayOff = CType(VGridControl2.GetCellValue(Friday_On.PropertiesCollection.Item("Emp_Att_Set_FridayOff"), 0), String)

                    .Emp_Att_Set_DutyFriOn = CType(VGridControl2.GetCellValue(Jumah.PropertiesCollection.Item("Emp_Att_Set_DutyFriOn"), 0), String)
                    .Emp_Att_Set_DutyFriOff = CType(VGridControl2.GetCellValue(Jumah.PropertiesCollection.Item("Emp_Att_Set_DutyFriOff"), 0), String)

                    .Emp_Att_Set_Late_Arrival_Status = CType(VGridControl2.GetCellValue(Late_Arrival.PropertiesCollection.Item("Emp_Att_Set_Late_Arrival_Status"), 0), Boolean?)
                    .Emp_Att_Set_Late_Arrival_Time = CType(VGridControl2.GetCellValue(Late_Arrival.PropertiesCollection.Item("Emp_Att_Set_Late_Arrival_Time"), 0), Double?)

                    .Emp_Att_Set_Early_Status = CType(VGridControl2.GetCellValue(Early_Dep.PropertiesCollection.Item("Emp_Att_Set_Early_Status"), 0), Boolean?)
                    .Emp_Att_Set_Early_Time = CType(VGridControl2.GetCellValue(Early_Dep.PropertiesCollection.Item("Emp_Att_Set_Early_Time"), 0), Double?)

                    .Emp_Att_Set_Duty_OverTime_Status = CType(VGridControl2.GetCellValue(Duty_OverTime.PropertiesCollection.Item("Emp_Att_Set_Duty_OverTime_Status"), 0), Boolean?)
                    .Emp_Att_Set_Duty_OverTime_Time = CType(VGridControl2.GetCellValue(Duty_OverTime.PropertiesCollection.Item("Emp_Att_Set_Duty_OverTime_Time"), 0), Double?)

                    .Emp_Att_Set_Prayer_Late_Status = CType(VGridControl2.GetCellValue(Prayer_Late.PropertiesCollection.Item("Emp_Att_Set_Prayer_Late_Status"), 0), Boolean?)
                    .Emp_Att_Set_Prayer_Late_Time = CType(VGridControl2.GetCellValue(Prayer_Late.PropertiesCollection.Item("Emp_Att_Set_Prayer_Late_Time"), 0), Double?)

                    .Emp_Att_Set_Short_Leave_Status = CType(VGridControl2.GetCellValue(Short_Leave.PropertiesCollection.Item("Emp_Att_Set_Short_Leave_Status"), 0), Boolean?)
                    .Emp_Att_Set_Short_Leave_Time = CType(VGridControl2.GetCellValue(Short_Leave.PropertiesCollection.Item("Emp_Att_Set_Short_Leave_Time"), 0), Double?)

                    .Emp_Att_Set_Lunch_Status = CType(VGridControl2.GetCellValue(Lunch_Time.PropertiesCollection.Item("Emp_Att_Set_Lunch_Status"), 0), Boolean?)
                    .Emp_Att_Set_Lunch_Time = CType(VGridControl2.GetCellValue(Lunch_Time.PropertiesCollection.Item("Emp_Att_Set_Lunch_Time"), 0), Double?)
                    .Emp_Att_Set_Lunch_OverTime_Status = CType(VGridControl2.GetCellValue(Lunch_OverTime.PropertiesCollection.Item("Emp_Att_Set_Lunch_OverTime_Status"), 0), Boolean?)

                    .Emp_Att_Set_Private_Late_Status = CType(VGridControl2.GetCellValue(Private_Time.PropertiesCollection.Item("Emp_Att_Set_Private_Late_Status"), 0), Boolean?)
                    .Emp_Att_Set_Private_Time = CType(VGridControl2.GetCellValue(Private_Time.PropertiesCollection.Item("Emp_Att_Set_Private_Time"), 0), Double?)

                End With
                db.SaveChanges()
            Else
                Dim dtNew = New Emp_Att_Set
                With dtNew
                    .Emp_Att_Set_Date = CDate(Issue_Date.EditValue)

                    .Emp_Att_Set_Open_Time = "06:00" ' CType(VGridControl1.GetCellValue(DayTime.PropertiesCollection.Item("Emp_Att_Set_Open_Time"), 0), String)
                    .Emp_Att_Set_Close_Time = "05:59" ' CType(VGridControl1.GetCellValue(DayTime.PropertiesCollection.Item("Emp_Att_Set_Close_Time"), 0), String)

                    .Emp_Att_Set_Fri_Status = False
                    .Emp_Att_Set_FridayOff = "12:30" ' CType(VGridControl1.GetCellValue(Friday_On.PropertiesCollection.Item("Emp_Att_Set_FridayOff"), 0), String)

                    .Emp_Att_Set_DutyFriOn = "12:30" ' CType(VGridControl1.GetCellValue(Jumah.PropertiesCollection.Item("Emp_Att_Set_DutyFriOn"), 0), String)
                    .Emp_Att_Set_DutyFriOff = "13:30" ' CType(VGridControl1.GetCellValue(Jumah.PropertiesCollection.Item("Emp_Att_Set_DutyFriOff"), 0), String)

                    .Emp_Att_Set_Late_Arrival_Status = True
                    .Emp_Att_Set_Late_Arrival_Time = 0 ' CType(VGridControl1.GetCellValue(Late_Arrival.PropertiesCollection.Item("Emp_Att_Set_Late_Arrival_Time"), 0), Double?)

                    .Emp_Att_Set_Early_Status = True
                    .Emp_Att_Set_Early_Time = 0 ' CType(VGridControl1.GetCellValue(Early_Dep.PropertiesCollection.Item("Emp_Att_Set_Early_Time"), 0), String)

                    .Emp_Att_Set_Duty_OverTime_Status = True
                    .Emp_Att_Set_Duty_OverTime_Time = 0 ' CType(VGridControl1.GetCellValue(Duty_OverTime.PropertiesCollection.Item("Emp_Att_Set_Duty_OverTime_Time"), 0), String)

                    .Emp_Att_Set_Prayer_Late_Status = True
                    .Emp_Att_Set_Prayer_Late_Time = 15 ' CType(VGridControl1.GetCellValue(Prayer_Late.PropertiesCollection.Item("Emp_Att_Set_Prayer_Late_Time"), 0), Double?)

                    .Emp_Att_Set_Short_Leave_Status = True
                    .Emp_Att_Set_Short_Leave_Time = 0 ' CType(VGridControl1.GetCellValue(Short_Leave.PropertiesCollection.Item("Emp_Att_Set_Short_Leave_Time"), 0), Double?)

                    .Emp_Att_Set_Lunch_Status = True
                    .Emp_Att_Set_Lunch_Time = 30 ' CType(VGridControl1.GetCellValue(Lunch_Time.PropertiesCollection.Item("Emp_Att_Set_Lunch_Time"), 0), Double?)
                    .Emp_Att_Set_Lunch_OverTime_Status = True

                    .Emp_Att_Set_Private_Late_Status = True
                    .Emp_Att_Set_Private_Time = 10 ' CType(VGridControl1.GetCellValue(Private_Time.PropertiesCollection.Item("Emp_Att_Set_Private_Time"), 0), Double?)

                End With
                db.Emp_Att_Set.Add(dtNew)
                db.SaveChanges()
            End If
        End Using
    End Sub
    'Private Sub SaveUpdate_Att_Setting(E1 As Boolean, cap As String)
    '            Using db As CsmdBioAttendenceEntities = New CsmdBioAttendenceEntities
    '        Dim DutyFriOnX As DateTime = CDate(CDate(DutyFriOn.EditValue).ToString("HH:mm"))
    '        Dim DutyFriOffX As DateTime = CDate(CDate(DutyFriOff.EditValue).ToString("HH:mm"))
    '        Dim DutyFriX As DateTime = CDate(CDate(DutyFri.EditValue).ToString("HH:mm"))
    '        Dim datX As Date = CDate(Issue_Date.EditValue)

    '        Dim dt = (From a In db.Emp_Att_Set Where a.Emp_Att_Set_Date.Value.Month = datX.Month And a.Emp_Att_Set_Date.Value.Year = datX.Year Select a).FirstOrDefault
    '        If dt IsNot Nothing Then
    '            With dt
    '                .Emp_Att_Set_Fri_Status = CType(DutyFriToggle.EditValue, Boolean?)
    '                .Emp_Att_Set_DutyFriOn = DutyFriOnX.ToString("HH:mm")
    '                .Emp_Att_Set_DutyFriOff = DutyFriOffX.ToString("HH:mm")
    '                .Emp_Att_Set_FridayOff = DutyFriX.ToString("HH:mm")
    '                .Emp_Att_Set_Late_Arrival_Time = CType(Sp1.EditValue, String)
    '                .Emp_Att_Set_Prayer_Late_Time = CType(Sp2.EditValue, String)
    '                .Emp_Att_Set_Short_Leave_Time = CType(Sp3.EditValue, String)
    '                .Emp_Att_Set_Lunch_Time = CType(Sp4.EditValue, String)
    '                .Emp_Att_Set_Private_Time = CType(Sp5.EditValue, String)
    '                .Emp_Att_Set_Date = CDate(Issue_Date.EditValue)
    '                Select Case cap
    '                    Case "Ec8"
    '                        .Emp_Att_Set_Late_Arrival_Status = E1
    '                    Case "Ec1"
    '                        .Emp_Att_Set_Early_Status = E1
    '                    Case "Ec2"
    '                        .Emp_Att_Set_Duty_OverTime_Status = E1
    '                    Case "Ec3"
    '                        .Emp_Att_Set_Prayer_Late_Status = E1
    '                    Case "Ec4"
    '                        .Emp_Att_Set_Short_Leave_Status = E1
    '                    Case "Ec5"
    '                        .Emp_Att_Set_Lunch_Status = E1
    '                    Case "Ec6"
    '                        .Emp_Att_Set_Lunch_OverTime_Status = E1
    '                    Case "Ec7"
    '                        .Emp_Att_Set_Private_Late_Status = E1
    '                End Select
    '            End With
    '            db.SaveChanges()
    '        Else
    '            Dim dtNew = New Emp_Att_Set
    '            With dtNew
    '                .Emp_Att_Set_Fri_Status = CType(DutyFriToggle.EditValue, Boolean?)
    '                .Emp_Att_Set_DutyFriOn = DutyFriOnX.ToString("HH:mm")
    '                .Emp_Att_Set_DutyFriOff = DutyFriOffX.ToString("HH:mm")
    '                .Emp_Att_Set_FridayOff = DutyFriX.ToString("HH:mm")
    '                .Emp_Att_Set_Late_Arrival_Time = CType(Sp1.EditValue, String)
    '                .Emp_Att_Set_Prayer_Late_Time = CType(Sp2.EditValue, String)
    '                .Emp_Att_Set_Short_Leave_Time = CType(Sp3.EditValue, String)
    '                .Emp_Att_Set_Lunch_Time = CType(Sp4.EditValue, String)
    '                .Emp_Att_Set_Private_Time = CType(Sp5.EditValue, String)
    '                .Emp_Att_Set_Date = CDate(Issue_Date.EditValue)
    '                Select Case cap
    '                    Case "Ec8"
    '                        .Emp_Att_Set_Late_Arrival_Status = E1
    '                    Case "Ec1"
    '                        .Emp_Att_Set_Early_Status = E1
    '                    Case "Ec2"
    '                        .Emp_Att_Set_Duty_OverTime_Status = E1
    '                    Case "Ec3"
    '                        .Emp_Att_Set_Prayer_Late_Status = E1
    '                    Case "Ec4"
    '                        .Emp_Att_Set_Short_Leave_Status = E1
    '                    Case "Ec5"
    '                        .Emp_Att_Set_Lunch_Status = E1
    '                    Case "Ec6"
    '                        .Emp_Att_Set_Lunch_OverTime_Status = E1
    '                    Case "Ec7"
    '                        .Emp_Att_Set_Private_Late_Status = E1
    '                End Select
    '            End With
    '            db.Emp_Att_Set.Add(dtNew)
    '            db.SaveChanges()
    '        End If
    '    End Using
    'End Sub



    Private Sub Att_Settings(sender As Object, e As EventArgs)
        SaveUpdate_Att_Setting()
    End Sub


    Private Sub BarButtonItem6_ItemClick_1(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles b_c1.ItemClick
        GridView1.ActiveFilterString = "[Attendence_Status_ID] = '1' Or [Attendence_Status_ID] = '2'"
    End Sub

    Private Sub BarButtonItem7_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles b_c2.ItemClick
        GridView1.ActiveFilterString = "[Attendence_Status_ID] = '3' Or [Attendence_Status_ID] = '4'"
    End Sub

    Private Sub BarButtonItem8_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles b_c3.ItemClick
        GridView1.ActiveFilterString = "[Attendence_Status_ID] = '5' Or [Attendence_Status_ID] = '6'"
    End Sub

    Private Sub BarButtonItem9_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem9.ItemClick
        GridView1.ActiveFilterString = "[Attendence_Status_ID] = '7' Or [Attendence_Status_ID] = '8'"
    End Sub

    Private Sub BarButtonItem10_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem10.ItemClick
        GridView1.ActiveFilterString = "[Attendence_Status_ID] = '9' Or [Attendence_Status_ID] = '10'"
    End Sub

    Private Sub BarButtonItem11_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem11.ItemClick
        GridView1.ClearColumnsFilter()
    End Sub


#End Region


    Private Sub BarButtonItem1_ItemClick_1(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles b_Import.ItemClick
        'LoadImportDate()
    End Sub

    Private Sub BarButtonItem3_ItemClick_1(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles b_Delete.ItemClick
        'DeleteAllEmpty()
        DeleteAllAttendance()
        LoadEmp(CDate(Issue_Date.EditValue))
    End Sub

    Private Sub BarButtonItem4_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs)
        UpdateAllSummaray()
    End Sub

    Private Sub BarButtonItem5_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles b_Update.ItemClick
        DeleteAllEmpty()
        'LoadImportDateCalcu()
    End Sub

    Private Sub BarButtonItem14_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem14.ItemClick
        SaveUpdate_Att_Setting()

    End Sub

    Private Sub BarButtonItem2_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem2.ItemClick
        Lay1.Width = 500
        Lay2.Width = 450
        VGridControl1.RecordWidth = 300
        LoadEmp(CDate(Issue_Date.EditValue))

        'LoadAtt(CDate(Issue_Date.EditValue))
    End Sub

    Private Sub Issue_Date_EditValueChanged(sender As Object, e As EventArgs) Handles Issue_Date.EditValueChanged

        LoadEmp(CDate(Issue_Date.EditValue))
        Load_Att_Setting()
        'LoadAtt(CDate(Issue_Date.EditValue))
    End Sub

    Private Sub Issue_Date_ButtonClick(sender As Object, e As ButtonPressedEventArgs) Handles Issue_Date.ButtonClick
        Select Case e.Button.Index
            Case 1
                Issue_Date.EditValue = DateTime.Parse(CType(Issue_Date.EditValue, String)).AddMonths(-1)
                FF1.EditValue = CsmdDateTime.FirstDayOfMonth(DateTime.Parse(CType(FF1.EditValue, String)).AddMonths(-1))
                FF2.EditValue = CsmdDateTime.LastDayOfMonth(DateTime.Parse(CType(FF2.EditValue, String)).AddMonths(-1))
            Case 2
                Issue_Date.EditValue = DateTime.Parse(CType(Issue_Date.EditValue, String)).AddMonths(1)
                FF1.EditValue = CsmdDateTime.FirstDayOfMonth(DateTime.Parse(CType(FF1.EditValue, String)).AddMonths(1))
                FF2.EditValue = CsmdDateTime.LastDayOfMonth(DateTime.Parse(CType(FF2.EditValue, String)).AddMonths(1))
        End Select
    End Sub


    Private Sub BarButtonItem15_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles b_Create.ItemClick
        CreateInvoices()
    End Sub

#Region "RepositoryItem"


    'Private Sub RepositoryItemToggleSwitch2_Toggled(sender As Object, e As EventArgs) Handles RepositoryItemToggleSwitch2.Toggled
    '    Dim tg As ToggleSwitch = TryCast(sender, ToggleSwitch)
    '    If tg.IsOn Then
    '        DutyFriOn.Enabled = True
    '        DutyFriOff.Enabled = True
    '        DutyFri.Enabled = False
    '    Else
    '        DutyFriOn.Enabled = False
    '        DutyFriOff.Enabled = False
    '        DutyFri.Enabled = True
    '    End If
    'End Sub


    Private Sub RepositoryItemZoomTrackBar1_EditValueChanged(sender As Object, e As EventArgs) Handles RepositoryItemZoomTrackBar1.EditValueChanged
        Dim spn As Integer = CInt(TryCast(sender, ZoomTrackBarControl).EditValue)
        FontSize(CInt(If(spn.ToString = "", 8.25, spn)))
    End Sub
    Public Sub FontSize(spn As Integer)
        'FormSize(CInt(If(spn.ToString = "", 8.25, spn)))
        GridView1.Appearance.HeaderPanel.Font = New Font("Tahoma", spn, FontStyle.Bold)
        GridView1.Appearance.Row.Font = New Font("Tahoma", spn, FontStyle.Regular)
        GridView1.Appearance.Row.Font = New Font("Tahoma", spn, FontStyle.Regular)

        GridView2.Appearance.HeaderPanel.Font = New Font("Tahoma", spn, FontStyle.Bold)
        GridView2.Appearance.Row.Font = New Font("Tahoma", spn, FontStyle.Regular)
        GridView2.Appearance.Row.Font = New Font("Tahoma", spn, FontStyle.Regular)

        VGridControl1.Appearance.Category.Font = New Font("Tahoma", spn, FontStyle.Bold)
        VGridControl1.Appearance.RecordValue.Font = New Font("Tahoma", spn, FontStyle.Regular)
        Select Case spn
            Case 8

                VGridControl1.RecordWidth = 300
                Lay1.Width = 500
                Lay2.Width = 450
                    'Lay3.Width = 198
            Case 9
                VGridControl1.RecordWidth = 320
                Lay1.Width = 500
                Lay2.Width = 450
                    'Lay3.Width = 198
            Case 10
                VGridControl1.RecordWidth = 350
                Lay1.Width = 500
                Lay2.Width = 450
                    'Lay3.Width = 225
            Case 11
                VGridControl1.RecordWidth = 380
                Lay1.Width = 600
                Lay2.Width = 450
                    'Lay3.Width = 225
            Case 12
                VGridControl1.RecordWidth = 420
                Lay1.Width = 600
                Lay2.Width = 600
                    'Lay3.Width = 225
            Case 13
                VGridControl1.RecordWidth = 440
                Lay1.Width = 600
                Lay2.Width = 600
                    'Lay3.Width = 250
            Case 14
                VGridControl1.RecordWidth = 470
                Lay1.Width = 600
                Lay2.Width = 600
                    'Lay3.Width = 250
            Case 15
                VGridControl1.RecordWidth = 500
                Lay1.Width = 600
                Lay2.Width = 600
                    'Lay3.Width = 250
            Case 16
                VGridControl1.RecordWidth = 530
                Lay1.Width = 600
                Lay2.Width = 600
                    'Lay3.Width = 250
            Case 17
                VGridControl1.RecordWidth = 565
                Lay1.Width = 600
                Lay2.Width = 600
                    'Lay3.Width = 250
            Case 18
                VGridControl1.RecordWidth = 600
                Lay1.Width = 600
                Lay2.Width = 600
                    'Lay3.Width = 250
            Case 19
                VGridControl1.RecordWidth = 650
                Lay1.Width = 600
                Lay2.Width = 600
                    'Lay3.Width = 250
            Case 20
                VGridControl1.RecordWidth = 700
                Lay1.Width = 600
                Lay2.Width = 600
                'Lay3.Width = 250
        End Select
    End Sub
    'Private Sub RepositoryItemZoomTrackBar2_EditValueChanged(sender As Object, e As EventArgs) Handles RepositoryItemZoomTrackBar2.EditValueChanged
    '    Dim spn As Integer = CInt(TryCast(sender, ZoomTrackBarControl).EditValue)
    '    VGridControl1.Appearance.Category.Font = New Font("Tahoma", spn, FontStyle.Bold)
    '    VGridControl1.Appearance.RecordValue.Font = New Font("Tahoma", spn, FontStyle.Regular)

    '    Select Case spn
    '        Case 8
    '            VGridControl1.RecordWidth = 300
    '            Lay1.Size = New Size(500, LayoutControl1.Height - 40)
    '            Lay2.Size = New Size(500, LayoutControl1.Height - 40)
    '            'Lay3.Width = 198
    '        Case 9
    '            VGridControl1.RecordWidth = 320
    '            Lay1.Size = New Size(500, LayoutControl1.Height - 40)
    '            Lay2.Size = New Size(500, LayoutControl1.Height - 40)
    '            'Lay3.Width = 198
    '        Case 10
    '            VGridControl1.RecordWidth = 350
    '            Lay1.Width = 500
    '            Lay2.Width = 500
    '            'Lay3.Width = 225
    '        Case 11
    '            VGridControl1.RecordWidth = 380
    '            Lay1.Width = 600
    '            Lay2.Width = 600
    '            'Lay3.Width = 225
    '        Case 12
    '            VGridControl1.RecordWidth = 420
    '            Lay1.Width = 600
    '            Lay2.Width = 600
    '            'Lay3.Width = 225
    '        Case 13
    '            VGridControl1.RecordWidth = 440
    '            Lay1.Width = 600
    '            Lay2.Width = 600
    '            'Lay3.Width = 250
    '        Case 14
    '            VGridControl1.RecordWidth = 470
    '            Lay1.Width = 600
    '            Lay2.Width = 600
    '            'Lay3.Width = 250
    '        Case 15
    '            VGridControl1.RecordWidth = 500
    '            Lay1.Width = 600
    '            Lay2.Width = 600
    '            'Lay3.Width = 250
    '        Case 16
    '            VGridControl1.RecordWidth = 530
    '            Lay1.Width = 600
    '            Lay2.Width = 600
    '            'Lay3.Width = 250
    '        Case 17
    '            VGridControl1.RecordWidth = 565
    '            Lay1.Width = 600
    '            Lay2.Width = 600
    '            'Lay3.Width = 250
    '        Case 18
    '            VGridControl1.RecordWidth = 600
    '            Lay1.Width = 600
    '            Lay2.Width = 600
    '            'Lay3.Width = 250
    '        Case 19
    '            VGridControl1.RecordWidth = 650
    '            Lay1.Width = 600
    '            Lay2.Width = 600
    '            'Lay3.Width = 250
    '        Case 20
    '            VGridControl1.RecordWidth = 700
    '            Lay1.Width = 600
    '            Lay2.Width = 600
    '            'Lay3.Width = 250
    '    End Select
    '    VGridControl1.LayoutChanged()
    'End Sub

#End Region

    Private Sub BarEditItem1_EditValueChanged(sender As Object, e As EventArgs) Handles BarEditItem1.EditValueChanged
        Dim spn As Integer = CInt(BarEditItem1.EditValue)
        FontSize(CInt(If(spn.ToString = "", 9, spn)))
    End Sub

    Dim PayID As Integer = 0
    Private Sub BarButtonItem12_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs)


    End Sub

    Private Sub BarEditItem1_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarEditItem1.ItemClick

    End Sub

    Private Sub SimpleButton1_Click(sender As Object, e As EventArgs) Handles SimpleButton1.Click
        GridView2.ClearSelection()
    End Sub

    Private Sub BarButtonItem1_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem1.ItemClick
        frmEmpCashRegisterLock.ShowDialog()
    End Sub

    Private Sub GridControl2_Click(sender As Object, e As EventArgs) Handles GridControl2.Click

    End Sub

    'Private Sub RepositoryItemCheckEdit1_EditValueChanged(sender As Object, e As EventArgs) Handles _
    '    RepositoryItemCheckEdit1.EditValueChanged,
    '    RepositoryItemCheckEdit3.EditValueChanged,
    '    RepositoryItemCheckEdit4.EditValueChanged,
    '    RepositoryItemCheckEdit5.EditValueChanged,
    '    RepositoryItemCheckEdit6.EditValueChanged,
    '    RepositoryItemCheckEdit7.EditValueChanged,
    '    RepositoryItemCheckEdit8.EditValueChanged,
    '    RepositoryItemCheckEdit10.EditValueChanged
    '    Dim chk1 As CheckEdit = TryCast(sender, CheckEdit)
    '    SaveUpdate_Att_Setting(CBool(chk1.EditValue), CStr(chk1.Text))
    'End Sub

    Private Sub VGridControl2_RecordCellStyle(sender As Object, e As GetCustomRowCellStyleEventArgs) Handles VGridControl2.RecordCellStyle
        If e.Row Is DateX Or e.Row Is DayTime Or e.Row Is Friday_On Or e.Row Is Jumah Or e.Row Is Late_Arrival Or e.Row Is Early_Dep Or e.Row Is Duty_OverTime Or e.Row Is Prayer_Late Or e.Row Is Short_Leave Or e.Row Is Lunch_Time Or e.Row Is Lunch_OverTime Or e.Row Is Private_Time Then
            If e.CellIndex = 0 Then
                e.Appearance.BackColor = UserLookAndFeel.Default.SkinMaskColor
                e.Appearance.BackColor2 = Color.White
                e.Appearance.GradientMode = Drawing2D.LinearGradientMode.Horizontal
                e.Appearance.ForeColor = Color.Black
                e.Appearance.Font = New Font("Tahoma", CInt(BarEditItem1.EditValue), FontStyle.Regular)
                e.Appearance.TextOptions.HAlignment = HorzAlignment.Far
            End If
        End If
    End Sub

    Private Sub VGridControl2_CellValueChanged(sender As Object, e As DevExpress.XtraVerticalGrid.Events.CellValueChangedEventArgs) Handles VGridControl2.CellValueChanged
        If e.Row Is DateX Or e.Row Is DayTime Or e.Row Is Friday_On Or e.Row Is Jumah Or e.Row Is Late_Arrival Or e.Row Is Early_Dep Or e.Row Is Duty_OverTime Or e.Row Is Prayer_Late Or e.Row Is Short_Leave Or e.Row Is Lunch_Time Or e.Row Is Lunch_OverTime Or e.Row Is Private_Time Then
            If e.CellIndex = 1 Or e.CellIndex = 2 Then
                SaveUpdate_Att_Setting()
                Load_Payment_Month_Single(CsmdVarible.intEmpID, CDate(Issue_Date.EditValue))
            End If
        End If
    End Sub

    Private Sub VGridControl2_CellValueChanging(sender As Object, e As DevExpress.XtraVerticalGrid.Events.CellValueChangedEventArgs) Handles VGridControl2.CellValueChanging

    End Sub

    Private Sub BarButtonItem4_ItemClick_1(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem4.ItemClick
        'Dim controlContainer As New PrintableComponentContainer()
        'controlContainer.PrintableComponent = VGridControl1

        'Dim pSystem As New DevExpress.XtraPrinting.PrintingSystem
        'Dim pLink As New DevExpress.XtraPrinting.PrintableComponentLink()
        'pSystem.Links.Add(pLink)
        'pLink.Component = VGridControl1

        'Dim margins As New System.Drawing.Printing.Margins(10, 10, 10, 10)
        ''Dim marginsx As New System.Drawing.Printing.Duplex((10, 10, 10, 10)
        'pLink.Margins = margins
        'pLink.Landscape = False
        'pLink.PaperKind = System.Drawing.Printing.PaperKind.Custom
        'pLink.CustomPaperSize = New Size(CInt(70 * 4), CInt(210 * 4))
        'pSystem.Document.AutoFitToPagesWidth = 0
        'pLink.CreateDocument()
        'pLink.ShowPreviewDialog()

        'Load_Payment_Month_Single_For_WhatsApp()
        Dim report As XtraReport = New XtraReport1 '.FromFile(".\Reports\" & OpenReport & ".repx", True)
        report.RequestParameters = False
        Dim pt As New ReportPrintTool(report)
        pt.AutoShowParametersPanel = False
        report.Parameters.Item(0).Value = PayID
        pt.ShowRibbonPreview()
    End Sub

    Private Sub BarButtonItem5_ItemClick_1(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem5.ItemClick
        If intList.Count > 0 Then
            For k As Integer = 0 To intList.Count - 1
                Dim kk As Integer = intList(k)
                Dim webAddress As String = Load_Payment_Month_Single_For_WhatsAppChk(kk, Issue_Date.EditValue)
                Dim web As New WebBrowser
                web.Navigate(webAddress)
                Threading.Thread.Sleep(1000)
                'SendKeys.Send("{ENTER}")
                'Process.Start(webAddress)
                'Timer1.Start()
            Next
        End If
    End Sub
    Private Sub GridView1_CustomDrawRowIndicator(sender As Object, e As RowIndicatorCustomDrawEventArgs) Handles GridView1.CustomDrawRowIndicator
        If e.RowHandle >= 0 Then
            e.Info.DisplayText = (e.RowHandle + 1).ToString()
        End If
    End Sub
    Private Sub GridView2_CustomDrawRowIndicator(sender As Object, e As RowIndicatorCustomDrawEventArgs) Handles GridView2.CustomDrawRowIndicator
        If e.RowHandle >= 0 Then
            e.Info.DisplayText = (e.RowHandle + 1).ToString()
        End If
    End Sub

End Class
